###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      19/Jul/2017  15:04:09 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\MDB\mdb_cashless.c                #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\MDB\mdb_cashless.c -lC            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\mdb_cashless.lst               #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\mdb_cashless.o                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\MDB\mdb_cashless.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  mdb_cashless.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :  27/02/2017
     21          |
     22          |       Revisões           :  001
     23          |
     24          |
     25          | __________________________________________________________________________________
     26          */
     27          
     28          /***********************************************************************************
     29          *       Includes
     30          ***********************************************************************************/
     31          #include <stdio.h>
     32          #include <stdlib.h>
     33          #include <string.h>
     34          #include "mdb_uart.h"
     35          #include "mdb.h"
     36          #include "mdb_cashless.h"
     37          
     38          
     39          /***********************************************************************************
     40          *       Definições
     41          ***********************************************************************************/
     42          
     43          
     44          /***********************************************************************************
     45          *       Variaveis locais
     46          ***********************************************************************************/
     47          
     48          
     49          /***********************************************************************************
     50          *       Funções locais
     51          ***********************************************************************************/
     52          
     53          
     54          /***********************************************************************************
     55          *       Implementação das funções
     56          ***********************************************************************************/
     57          
     58          /***********************************************************************************
     59          *       Descrição       :       Verifica se o dispositivo está presente
     60          *                               no barramento
     61          *       Parametros      :       nenhum
     62          *       Retorno         :       (eMDB_reply) resultado
     63          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     64          eMDB_reply CASHLESS_adreess(void){
   \                     CASHLESS_adreess:
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     65            unsigned char buffer[2];
     66            unsigned char recebidos;
     67            
     68            buffer[0] = MDB_CASHLESS_DEVICE;
   \   00000002   0x2010             MOVS     R0,#+16
   \   00000004   0xF88D 0x0008      STRB     R0,[SP, #+8]
     69            
     70            if(MDB_send_package(1,buffer,1,0,buffer,&recebidos)==MDB_OK){
   \   00000008   0xF10D 0x000A      ADD      R0,SP,#+10
   \   0000000C   0x9001             STR      R0,[SP, #+4]
   \   0000000E   0xA802             ADD      R0,SP,#+8
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0xA902             ADD      R1,SP,#+8
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       MDB_send_package
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD107             BNE.N    ??CASHLESS_adreess_0
     71                  
     72              if(buffer[0]==MDB_RESP_ACK)
   \   00000022   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD101             BNE.N    ??CASHLESS_adreess_1
     73                return MDB_OK;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xE002             B.N      ??CASHLESS_adreess_2
     74              
     75              return MDB_ERROR;
   \                     ??CASHLESS_adreess_1:
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0xE000             B.N      ??CASHLESS_adreess_2
     76            }
     77              
     78            return  MDB_TIMEOUT; 
   \                     ??CASHLESS_adreess_0:
   \   00000032   0x2002             MOVS     R0,#+2
   \                     ??CASHLESS_adreess_2:
   \   00000034   0xBD0E             POP      {R1-R3,PC}       ;; return
     79          }
     80          /***********************************************************************************
     81          *       Descrição       :       Faz o reset da interface de cartão
     82          *       Parametros      :       nenhum
     83          *       Retorno         :       (eMDB_reply) resultado da operação
     84          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     85          eMDB_reply CASHLESS_reset_device(void){
   \                     CASHLESS_reset_device:
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     86            unsigned char buffer[2];
     87            unsigned char recebidos;
     88            
     89            buffer[0] = CASHLESS_RESET;
   \   00000002   0x2010             MOVS     R0,#+16
   \   00000004   0xF88D 0x0008      STRB     R0,[SP, #+8]
     90            
     91            if(MDB_send_package(1,buffer,1,0,buffer,&recebidos)==MDB_OK){
   \   00000008   0xF10D 0x000A      ADD      R0,SP,#+10
   \   0000000C   0x9001             STR      R0,[SP, #+4]
   \   0000000E   0xA802             ADD      R0,SP,#+8
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0xA902             ADD      R1,SP,#+8
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       MDB_send_package
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD107             BNE.N    ??CASHLESS_reset_device_0
     92                  
     93              if(buffer[0]==MDB_RESP_ACK)
   \   00000022   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD101             BNE.N    ??CASHLESS_reset_device_1
     94                return MDB_OK;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xE002             B.N      ??CASHLESS_reset_device_2
     95              
     96              return MDB_ERROR;
   \                     ??CASHLESS_reset_device_1:
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0xE000             B.N      ??CASHLESS_reset_device_2
     97            }
     98              
     99            return  MDB_TIMEOUT; 
   \                     ??CASHLESS_reset_device_0:
   \   00000032   0x2002             MOVS     R0,#+2
   \                     ??CASHLESS_reset_device_2:
   \   00000034   0xBD0E             POP      {R1-R3,PC}       ;; return
    100          }
    101          /***********************************************************************************
    102          *       Descrição       :     Lê e escreve nas configurações do cashless
    103          *       Parametros      :     (unsigned char) nível mdb
    104          *                             (unsigned char) quantidade de colunas do display
    105          *                             (unsigned char) quantidade de linhas do display
    106          *                             (eMDB_DISPLAY_INFO) informação sobre o display
    107          *                             (unsigned char*) nível configuraod
    108          *                             (unsigned short int*) pais
    109          *                             (unsigned char*) fator de escala
    110          *                             (unsigned char*) casas decimais
    111          *                             (unsigned char*) tempo máximo para transação
    112          *                             (unsigned char*) opções gerais
    113          *       Retorno         :     (eMDB_reply) resultado da operação
    114          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    115          eMDB_reply CASHLESS_set_and_get_setup_from_to_device(unsigned char nivel_mdb,
    116                                                               unsigned char linhas_lcd,
    117                                                               unsigned char colunas_lcd,
    118                                                               eMDB_DISPLAY_INFO info_lcd,                                                     
    119                                                               unsigned char *nivel_configurado,
    120                                                               unsigned short int*pais,
    121                                                               unsigned char *escala,
    122                                                               unsigned char *casas_decimais,
    123                                                               unsigned char *tempo_maximo_transacao,
    124                                                               unsigned char *opcoes_gerais){
   \                     CASHLESS_set_and_get_setup_from_to_device:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
    125            unsigned char buffer[36];
    126            unsigned char recebidos;
    127            
    128            buffer[0] = CASHLESS_SETUP;
   \   00000004   0x2011             MOVS     R0,#+17
   \   00000006   0xF88D 0x000C      STRB     R0,[SP, #+12]
    129            buffer[1] = 0x00;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xF88D 0x000D      STRB     R0,[SP, #+13]
    130            buffer[2] = 0x03;
   \   00000010   0x2003             MOVS     R0,#+3
   \   00000012   0xF88D 0x000E      STRB     R0,[SP, #+14]
    131            buffer[3] = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x000F      STRB     R0,[SP, #+15]
    132            buffer[4] = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xF88D 0x0010      STRB     R0,[SP, #+16]
    133            buffer[5] = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xF88D 0x0011      STRB     R0,[SP, #+17]
    134            
    135            if(MDB_send_package(1,buffer,6,1,buffer,&recebidos)==MDB_OK){
   \   00000028   0xA802             ADD      R0,SP,#+8
   \   0000002A   0x9001             STR      R0,[SP, #+4]
   \   0000002C   0xA803             ADD      R0,SP,#+12
   \   0000002E   0x9000             STR      R0,[SP, #+0]
   \   00000030   0x2301             MOVS     R3,#+1
   \   00000032   0x2206             MOVS     R2,#+6
   \   00000034   0xA903             ADD      R1,SP,#+12
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       MDB_send_package
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD133             BNE.N    ??CASHLESS_set_and_get_setup_from_to_device_0
    136                  
    137              if(buffer[0]==0x01 && recebidos>1){
   \   00000040   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000044   0x2801             CMP      R0,#+1
   \   00000046   0xD12D             BNE.N    ??CASHLESS_set_and_get_setup_from_to_device_1
   \   00000048   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000004C   0x2802             CMP      R0,#+2
   \   0000004E   0xDB29             BLT.N    ??CASHLESS_set_and_get_setup_from_to_device_1
   \   00000050   0x980E             LDR      R0,[SP, #+56]
    138                
    139                if(nivel_configurado!=NULL)
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD002             BEQ.N    ??CASHLESS_set_and_get_setup_from_to_device_2
    140                  *nivel_configurado = buffer[Z2];
   \   00000056   0xF89D 0x100D      LDRB     R1,[SP, #+13]
   \   0000005A   0x7001             STRB     R1,[R0, #+0]
   \                     ??CASHLESS_set_and_get_setup_from_to_device_2:
   \   0000005C   0x980F             LDR      R0,[SP, #+60]
    141                
    142                if(pais!=NULL)
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD006             BEQ.N    ??CASHLESS_set_and_get_setup_from_to_device_3
    143                  *pais = buffer[Z3]<<8 | buffer[Z4];
   \   00000062   0xF89D 0x100E      LDRB     R1,[SP, #+14]
   \   00000066   0xF89D 0x200F      LDRB     R2,[SP, #+15]
   \   0000006A   0xEA52 0x2101      ORRS     R1,R2,R1, LSL #+8
   \   0000006E   0x8001             STRH     R1,[R0, #+0]
   \                     ??CASHLESS_set_and_get_setup_from_to_device_3:
   \   00000070   0x9810             LDR      R0,[SP, #+64]
    144                
    145                if(escala!=NULL)
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD002             BEQ.N    ??CASHLESS_set_and_get_setup_from_to_device_4
    146                  *escala = buffer[Z5];
   \   00000076   0xF89D 0x1010      LDRB     R1,[SP, #+16]
   \   0000007A   0x7001             STRB     R1,[R0, #+0]
   \                     ??CASHLESS_set_and_get_setup_from_to_device_4:
   \   0000007C   0x9811             LDR      R0,[SP, #+68]
    147                
    148                if(casas_decimais!=NULL)
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD002             BEQ.N    ??CASHLESS_set_and_get_setup_from_to_device_5
    149                  *casas_decimais = buffer[Z6];
   \   00000082   0xF89D 0x1011      LDRB     R1,[SP, #+17]
   \   00000086   0x7001             STRB     R1,[R0, #+0]
   \                     ??CASHLESS_set_and_get_setup_from_to_device_5:
   \   00000088   0x9812             LDR      R0,[SP, #+72]
    150                
    151                if(tempo_maximo_transacao!=NULL)
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD002             BEQ.N    ??CASHLESS_set_and_get_setup_from_to_device_6
    152                  *tempo_maximo_transacao = buffer[Z7];
   \   0000008E   0xF89D 0x1012      LDRB     R1,[SP, #+18]
   \   00000092   0x7001             STRB     R1,[R0, #+0]
   \                     ??CASHLESS_set_and_get_setup_from_to_device_6:
   \   00000094   0x9813             LDR      R0,[SP, #+76]
    153                
    154                if(opcoes_gerais!=NULL)
   \   00000096   0x2800             CMP      R0,#+0
   \   00000098   0xD002             BEQ.N    ??CASHLESS_set_and_get_setup_from_to_device_7
    155                  *opcoes_gerais = buffer[Z8];      
   \   0000009A   0xF89D 0x1013      LDRB     R1,[SP, #+19]
   \   0000009E   0x7001             STRB     R1,[R0, #+0]
    156                
    157                return MDB_OK;  
   \                     ??CASHLESS_set_and_get_setup_from_to_device_7:
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0xE002             B.N      ??CASHLESS_set_and_get_setup_from_to_device_8
    158              }
    159              
    160              return MDB_ERROR;
   \                     ??CASHLESS_set_and_get_setup_from_to_device_1:
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0xE000             B.N      ??CASHLESS_set_and_get_setup_from_to_device_8
    161            }
    162              
    163            return  MDB_TIMEOUT;                                                                                                  
   \                     ??CASHLESS_set_and_get_setup_from_to_device_0:
   \   000000A8   0x2002             MOVS     R0,#+2
   \                     ??CASHLESS_set_and_get_setup_from_to_device_8:
   \   000000AA   0xB00D             ADD      SP,SP,#+52
   \   000000AC   0xBD00             POP      {PC}             ;; return
    164          }
    165          /***********************************************************************************
    166          *       Descrição       :       Configura o preço mínimo e máximo do produto
    167          *       Parametros      :       (unsigned short int) mínimo
    168          *                               (unsigned short int) máximo
    169          *       Retorno         :       (eMDB_reply) resultado da operação
    170          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    171          eMDB_reply CASHLESS_set_min_and_max_price_in_device(unsigned short int min,
    172                                                              unsigned short int max){
   \                     CASHLESS_set_min_and_max_price_in_device:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
    173            unsigned char buffer[36];
    174            unsigned char recebidos;
    175            
    176            buffer[0] = CASHLESS_SETUP;
   \   00000004   0x2211             MOVS     R2,#+17
   \   00000006   0xF88D 0x200C      STRB     R2,[SP, #+12]
    177            buffer[1] = 0x01;
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0xF88D 0x200D      STRB     R2,[SP, #+13]
    178            buffer[2] = max>>8;
   \   00000010   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0x0A09             LSRS     R1,R1,#+8
   \   00000014   0xF88D 0x100E      STRB     R1,[SP, #+14]
    179            buffer[3] = max>>16;
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0xF88D 0x100F      STRB     R1,[SP, #+15]
    180            buffer[4] = min>>8;
   \   0000001E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000020   0x0A01             LSRS     R1,R0,#+8
   \   00000022   0xF88D 0x1010      STRB     R1,[SP, #+16]
    181            buffer[5] = min;
   \   00000026   0xF88D 0x0011      STRB     R0,[SP, #+17]
    182            
    183            if(MDB_send_package(1,buffer,6,0,buffer,&recebidos)==MDB_OK){
   \   0000002A   0xA802             ADD      R0,SP,#+8
   \   0000002C   0x9001             STR      R0,[SP, #+4]
   \   0000002E   0xA803             ADD      R0,SP,#+12
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x2300             MOVS     R3,#+0
   \   00000034   0x2206             MOVS     R2,#+6
   \   00000036   0xA903             ADD      R1,SP,#+12
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       MDB_send_package
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD107             BNE.N    ??CASHLESS_set_min_and_max_price_in_device_0
    184                  
    185              if(buffer[0]==MDB_RESP_ACK)
   \   00000042   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD101             BNE.N    ??CASHLESS_set_min_and_max_price_in_device_1
    186                return MDB_OK;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0xE002             B.N      ??CASHLESS_set_min_and_max_price_in_device_2
    187              
    188              return MDB_ERROR;
   \                     ??CASHLESS_set_min_and_max_price_in_device_1:
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0xE000             B.N      ??CASHLESS_set_min_and_max_price_in_device_2
    189            }
    190              
    191            return  MDB_TIMEOUT;                                                    
   \                     ??CASHLESS_set_min_and_max_price_in_device_0:
   \   00000052   0x2002             MOVS     R0,#+2
   \                     ??CASHLESS_set_min_and_max_price_in_device_2:
   \   00000054   0xB00D             ADD      SP,SP,#+52
   \   00000056   0xBD00             POP      {PC}             ;; return
    192          }
    193          /***********************************************************************************
    194          *       Descrição       :       Pool do dispositivo
    195          *       Parametros      :       nenhum
    196          *       Retorno         :       (eMDB_reply) resultado da operçaão
    197          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    198          eMDB_reply CASHLESS_poll_device(eMDB_POLL_HEADER *header,unsigned char *args){
   \                     CASHLESS_poll_device:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
    199            unsigned char buffer[2];
    200            unsigned char recebidos;
    201            
    202            buffer[0] = CASHLESS_POLL;
   \   00000006   0x2012             MOVS     R0,#+18
   \   00000008   0xF88D 0x0008      STRB     R0,[SP, #+8]
    203            
    204            if(MDB_send_package(1,buffer,1,0,buffer,&recebidos)==MDB_OK){
   \   0000000C   0xF10D 0x000A      ADD      R0,SP,#+10
   \   00000010   0x9001             STR      R0,[SP, #+4]
   \   00000012   0xA802             ADD      R0,SP,#+8
   \   00000014   0x9000             STR      R0,[SP, #+0]
   \   00000016   0x2300             MOVS     R3,#+0
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0xA902             ADD      R1,SP,#+8
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x.... 0x....      BL       MDB_send_package
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD13B             BNE.N    ??CASHLESS_poll_device_0
    205                      
    206              switch(buffer[0]){
   \   00000026   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD022             BEQ.N    ??CASHLESS_poll_device_1
   \   0000002E   0x2801             CMP      R0,#+1
   \   00000030   0xD023             BEQ.N    ??CASHLESS_poll_device_2
   \   00000032   0x2802             CMP      R0,#+2
   \   00000034   0xD022             BEQ.N    ??CASHLESS_poll_device_3
   \   00000036   0x2803             CMP      R0,#+3
   \   00000038   0xD021             BEQ.N    ??CASHLESS_poll_device_4
   \   0000003A   0x2804             CMP      R0,#+4
   \   0000003C   0xD020             BEQ.N    ??CASHLESS_poll_device_5
   \   0000003E   0x2805             CMP      R0,#+5
   \   00000040   0xD01F             BEQ.N    ??CASHLESS_poll_device_6
   \   00000042   0x2806             CMP      R0,#+6
   \   00000044   0xD01E             BEQ.N    ??CASHLESS_poll_device_7
   \   00000046   0x2807             CMP      R0,#+7
   \   00000048   0xD01D             BEQ.N    ??CASHLESS_poll_device_8
   \   0000004A   0x2808             CMP      R0,#+8
   \   0000004C   0xD01C             BEQ.N    ??CASHLESS_poll_device_9
   \   0000004E   0x2809             CMP      R0,#+9
   \   00000050   0xD01B             BEQ.N    ??CASHLESS_poll_device_10
   \   00000052   0x280A             CMP      R0,#+10
   \   00000054   0xD01A             BEQ.N    ??CASHLESS_poll_device_11
   \   00000056   0x280B             CMP      R0,#+11
   \   00000058   0xD019             BEQ.N    ??CASHLESS_poll_device_12
   \   0000005A   0x280D             CMP      R0,#+13
   \   0000005C   0xD018             BEQ.N    ??CASHLESS_poll_device_13
   \   0000005E   0x280E             CMP      R0,#+14
   \   00000060   0xD017             BEQ.N    ??CASHLESS_poll_device_14
   \   00000062   0x280F             CMP      R0,#+15
   \   00000064   0xD016             BEQ.N    ??CASHLESS_poll_device_15
   \   00000066   0x2810             CMP      R0,#+16
   \   00000068   0xD015             BEQ.N    ??CASHLESS_poll_device_16
   \   0000006A   0x2811             CMP      R0,#+17
   \   0000006C   0xD014             BEQ.N    ??CASHLESS_poll_device_17
   \   0000006E   0x2812             CMP      R0,#+18
   \   00000070   0xD013             BEQ.N    ??CASHLESS_poll_device_18
   \   00000072   0xE012             B.N      ??CASHLESS_poll_device_19
    207                case CASHLESS_POOL_JUST_RESET:
    208                     *header = CASHLESS_POOL_JUST_RESET;
   \                     ??CASHLESS_poll_device_1:
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x7020             STRB     R0,[R4, #+0]
    209                     break;
   \   00000078   0xE00F             B.N      ??CASHLESS_poll_device_19
    210                case CASHLESS_POOL_READER_CONFIG_DATA:
    211                     break;
   \                     ??CASHLESS_poll_device_2:
   \   0000007A   0xE00E             B.N      ??CASHLESS_poll_device_19
    212                case CASHLESS_POOL_DISPLAY_REQUEST:
    213                     break;
   \                     ??CASHLESS_poll_device_3:
   \   0000007C   0xE00D             B.N      ??CASHLESS_poll_device_19
    214                case CASHLESS_POOL_BEGIN_SESSION:
    215                     break;
   \                     ??CASHLESS_poll_device_4:
   \   0000007E   0xE00C             B.N      ??CASHLESS_poll_device_19
    216                case CASHLESS_POOL_SESSION_CANCEL_REQUEST:
    217                     break;
   \                     ??CASHLESS_poll_device_5:
   \   00000080   0xE00B             B.N      ??CASHLESS_poll_device_19
    218                case CASHLESS_POOL_VEND_APPROVED:
    219                     break;
   \                     ??CASHLESS_poll_device_6:
   \   00000082   0xE00A             B.N      ??CASHLESS_poll_device_19
    220                case CASHLESS_POOL_VEND_DENIED:
    221                     break;
   \                     ??CASHLESS_poll_device_7:
   \   00000084   0xE009             B.N      ??CASHLESS_poll_device_19
    222                case CASHLESS_POOL_END_SESSION:
    223                     break;
   \                     ??CASHLESS_poll_device_8:
   \   00000086   0xE008             B.N      ??CASHLESS_poll_device_19
    224                case CASHLESS_POOL_CANCELLED:
    225                     break;
   \                     ??CASHLESS_poll_device_9:
   \   00000088   0xE007             B.N      ??CASHLESS_poll_device_19
    226                case CASHLESS_POOL_PERIPHERAL_ID:
    227                     break;
   \                     ??CASHLESS_poll_device_10:
   \   0000008A   0xE006             B.N      ??CASHLESS_poll_device_19
    228                case CASHLESS_POOL_MALFUNCTION:
    229                     break;
   \                     ??CASHLESS_poll_device_11:
   \   0000008C   0xE005             B.N      ??CASHLESS_poll_device_19
    230                case CASHLESS_POOL_CMD_OUT_OF_SEQUENCE:
    231                     break;
   \                     ??CASHLESS_poll_device_12:
   \   0000008E   0xE004             B.N      ??CASHLESS_poll_device_19
    232                case CASHLESS_POOL_REVALUE_APPROVED:
    233                     break;
   \                     ??CASHLESS_poll_device_13:
   \   00000090   0xE003             B.N      ??CASHLESS_poll_device_19
    234                case CASHLESS_POOL_REVALUE_DENIED:
    235                     break;
   \                     ??CASHLESS_poll_device_14:
   \   00000092   0xE002             B.N      ??CASHLESS_poll_device_19
    236                case CASHLESS_POOL_REVALUE_LIMIT_AMOUNT:
    237                     break;
   \                     ??CASHLESS_poll_device_15:
   \   00000094   0xE001             B.N      ??CASHLESS_poll_device_19
    238                case CASHLESS_POOL_USER_FILE:
    239                     break;
   \                     ??CASHLESS_poll_device_16:
   \   00000096   0xE000             B.N      ??CASHLESS_poll_device_19
    240                case CASHLESS_POOL_TIME_DATE_REQUEST:
    241                     break;
   \                     ??CASHLESS_poll_device_17:
   \   00000098   0xE7FF             B.N      ??CASHLESS_poll_device_19
    242                case CASHLESS_DATA_ENTRY:
    243                     break;
    244              }
    245                  
    246              
    247              return MDB_OK;
   \                     ??CASHLESS_poll_device_18:
   \                     ??CASHLESS_poll_device_19:
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0xE000             B.N      ??CASHLESS_poll_device_20
    248            }
    249              
    250            return  MDB_TIMEOUT;  
   \                     ??CASHLESS_poll_device_0:
   \   0000009E   0x2002             MOVS     R0,#+2
   \                     ??CASHLESS_poll_device_20:
   \   000000A0   0xB004             ADD      SP,SP,#+16
   \   000000A2   0xBD10             POP      {R4,PC}          ;; return
    251          }
    252          /***********************************************************************************
    253          *       Descrição       :       Envia o comando solicitando um inicio de 
    254          *                               transação
    255          *       Parametros      :       (unsigned short int) valor
    256          *                               (unsigned short int) código do produto
    257          *       Retorno         :       (eMDB_reply) maior do que zero se 
    258          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    259          eMDB_reply MDBCASHLESS_start_vend(unsigned short int valor,unsigned short int code){
   \                     MDBCASHLESS_start_vend:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    260            unsigned char buffer[6];
    261            unsigned char recebidos;                      
    262            
    263            buffer[0] = CASHLESS_VEND;
   \   00000004   0x2213             MOVS     R2,#+19
   \   00000006   0xF88D 0x200C      STRB     R2,[SP, #+12]
    264            buffer[1] = REQUEST_VEND;
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0xF88D 0x200D      STRB     R2,[SP, #+13]
    265            buffer[2] = (unsigned char)valor>>8;
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0xF88D 0x200E      STRB     R2,[SP, #+14]
    266            buffer[3] = valor;
   \   00000016   0xF88D 0x000F      STRB     R0,[SP, #+15]
    267            buffer[4] = (unsigned char)code>>8;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF88D 0x0010      STRB     R0,[SP, #+16]
    268            buffer[5] = code;
   \   00000020   0xF88D 0x1011      STRB     R1,[SP, #+17]
    269            
    270            if(MDB_send_package(1,buffer,6,0,buffer,&recebidos)==MDB_OK){
   \   00000024   0xA802             ADD      R0,SP,#+8
   \   00000026   0x9001             STR      R0,[SP, #+4]
   \   00000028   0xA803             ADD      R0,SP,#+12
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0x2206             MOVS     R2,#+6
   \   00000030   0xA903             ADD      R1,SP,#+12
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x.... 0x....      BL       MDB_send_package
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD101             BNE.N    ??MDBCASHLESS_start_vend_0
    271              
    272              
    273              
    274              return MDB_OK;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xE000             B.N      ??MDBCASHLESS_start_vend_1
    275            }
    276            
    277            return MDB_TIMEOUT;
   \                     ??MDBCASHLESS_start_vend_0:
   \   00000040   0x2002             MOVS     R0,#+2
   \                     ??MDBCASHLESS_start_vend_1:
   \   00000042   0xB005             ADD      SP,SP,#+20
   \   00000044   0xBD00             POP      {PC}             ;; return
    278          }
    279          /***********************************************************************************
    280          *       Fim do arquivo
    281          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   CASHLESS_adreess
        16   -> MDB_send_package
      24   CASHLESS_poll_device
        24   -> MDB_send_package
      16   CASHLESS_reset_device
        16   -> MDB_send_package
      56   CASHLESS_set_and_get_setup_from_to_device
        56   -> MDB_send_package
      56   CASHLESS_set_min_and_max_price_in_device
        56   -> MDB_send_package
      24   MDBCASHLESS_start_vend
        24   -> MDB_send_package


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      54  CASHLESS_adreess
     164  CASHLESS_poll_device
      54  CASHLESS_reset_device
     174  CASHLESS_set_and_get_setup_from_to_device
      88  CASHLESS_set_min_and_max_price_in_device
      70  MDBCASHLESS_start_vend

 
 604 bytes in section .text
 
 604 bytes of CODE memory

Errors: none
Warnings: none

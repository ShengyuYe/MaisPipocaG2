###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      20/Jul/2017  14:33:07 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\Pagamentos\Supervisao_mdb_coin.c  #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\Pagamentos\Supervisao_mdb_coin.c  #
#                    -lC C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\Mai #
#                    sPipocaG2\SOFTWARE\Debug\List\ -lA                       #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\Supervisao_mdb_coin.lst        #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\Supervisao_mdb_coin.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\Pagamentos\Supervisao_mdb_coin.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  supervisao_mdb_coin.c
     18          |       Descrição          :  Máquina de estados que gerencia o meio de pagamento
     19          |                             MDB BILL
     20          | 
     21          |       Autor              :  Marcos Aquino
     22          |       Data criação       :  28/02/2017
     23          |
     24          |       Revisões           :  1.0.0.0
     25          |
     26          |
     27          | __________________________________________________________________________________
     28          */
     29          
     30          /***********************************************************************************
     31          *       Includes
     32          ***********************************************************************************/
     33          #include <stdio.h>
     34          #include <stdlib.h>
     35          #include <string.h>
     36          #include "..\..\includes.h"
     37          #include "supervisao_mdb_coin.h"
     38          
     39          /***********************************************************************************
     40          *       Definições
     41          ***********************************************************************************/
     42          #define RELOAD_COIN_TIMEOUT             30000
     43          
     44          /***********************************************************************************
     45          *       Enumerações
     46          ***********************************************************************************/
     47          typedef enum{
     48            COIN_DISABLED=0,
     49            COIN_RESET_STATE,
     50            COIN_LOCKED,
     51            COIN_SUPERVISAO,
     52            COIN_OFFLINE
     53          }eCOIN_SM_STATE;
     54          
     55          /***********************************************************************************
     56          *       Variaveis locais
     57          ***********************************************************************************/

   \                                 In section .bss, align 1
     58          unsigned char SMDBCOIN_flag_bloqueio=0;
   \                     SMDBCOIN_flag_bloqueio:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     59          eCOIN_SM_STATE SMDBCOIN_estado_atual;
   \                     SMDBCOIN_estado_atual:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     60          unsigned short int SMDBCOIN_contador_timeout=0;
   \                     SMDBCOIN_contador_timeout:
   \   00000000                      DS8 2
     61          
     62          /***********************************************************************************
     63          *       Funções locais
     64          ***********************************************************************************/
     65          eCOIN_SM_STATE SMDBCOIN_estado_desabilitado(eCOIN_SM_STATE estado);
     66          eCOIN_SM_STATE SMDBCOIN_estado_reset(eCOIN_SM_STATE estado);
     67          eCOIN_SM_STATE SMDBCOIN_estado_bloqueado(eCOIN_SM_STATE estado);
     68          eCOIN_SM_STATE SMDBCOIN_estado_supervisao(eCOIN_SM_STATE estado);
     69          eCOIN_SM_STATE SMDBCOIN_estado_offline(eCOIN_SM_STATE estado);
     70          
     71          /***********************************************************************************
     72          *       Tabela de funções
     73          ***********************************************************************************/

   \                                 In section .rodata, align 4
     74          eCOIN_SM_STATE(*const SMDBCOIN_func_table[])(eCOIN_SM_STATE)={
   \                     SMDBCOIN_func_table:
   \   00000000   0x........         DC32 SMDBCOIN_estado_desabilitado, SMDBCOIN_estado_reset
   \              0x........   
   \   00000008   0x........         DC32 SMDBCOIN_estado_bloqueado, SMDBCOIN_estado_supervisao
   \              0x........   
   \   00000010   0x........         DC32 SMDBCOIN_estado_offline
     75            [COIN_DISABLED]    = SMDBCOIN_estado_desabilitado,
     76            [COIN_RESET_STATE] = SMDBCOIN_estado_reset,
     77            [COIN_LOCKED]      = SMDBCOIN_estado_bloqueado,
     78            [COIN_SUPERVISAO]  = SMDBCOIN_estado_supervisao,
     79            [COIN_OFFLINE]     = SMDBCOIN_estado_offline
     80          };
     81          /***********************************************************************************
     82          *       Funções locais
     83          ***********************************************************************************/
     84          
     85          
     86          /***********************************************************************************
     87          *       Implementação das funções
     88          ***********************************************************************************/
     89          
     90          /***********************************************************************************
     91          *       Descrição       :       Setter para o flag bloqueio 
     92          *       Parametros      :       (unsigned char) flag
     93          *       Retorno         :       nenhum
     94          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     95          void SMDBCOIN_set_flag_bloqueio(unsigned char flag){
     96            
     97            SMDBCOIN_flag_bloqueio = flag;
   \                     SMDBCOIN_set_flag_bloqueio:
   \   00000000   0x....             LDR.N    R1,??DataTable5
   \   00000002   0x7008             STRB     R0,[R1, #+0]
     98          }
   \   00000004   0x4770             BX       LR               ;; return
     99          /***********************************************************************************
    100          *       Descrição       :       Função principal da supervisão
    101          *                               do moedeiro
    102          *       Parametros      :       nenhum
    103          *       Retorno         :       nenhum
    104          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    105          void SMDBCOIN_tick(void){
   \                     SMDBCOIN_tick:
   \   00000000   0xB580             PUSH     {R7,LR}
    106            
    107            SMDBCOIN_estado_atual = SMDBCOIN_func_table[SMDBCOIN_estado_atual](SMDBCOIN_estado_atual);
   \   00000002   0x....             LDR.N    R0,??DataTable5_1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable5_1
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x....             LDR.N    R2,??DataTable5_2
   \   0000000C   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   00000010   0x4788             BLX      R1
   \   00000012   0x....             LDR.N    R1,??DataTable5_1
   \   00000014   0x7008             STRB     R0,[R1, #+0]
    108          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    109          /***********************************************************************************
    110          *       Descrição       :       Estado onde o moedeiro está
    111          *                               desabilitado
    112          *       Parametros      :       (eCOIN_SM_STATE) estado atual
    113          *                                                       do moedeiro
    114          *       Retorno         :       (eCOIN_SM_STATE) novo estado
    115          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    116          eCOIN_SM_STATE SMDBCOIN_estado_desabilitado(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_desabilitado:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    117            unsigned char flag;
    118            
    119            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    120            
    121            if(flag)
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD001             BEQ.N    ??SMDBCOIN_estado_desabilitado_0
    122              return COIN_LOCKED;
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0xE001             B.N      ??SMDBCOIN_estado_desabilitado_1
    123            
    124            return estado;
   \                     ??SMDBCOIN_estado_desabilitado_0:
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_desabilitado_1:
   \   0000001E   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    125          }
    126          /***********************************************************************************
    127          *       Descrição       :       Estado onde é realizado o reset do moedeiro
    128          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    129          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    130          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    131          eCOIN_SM_STATE SMDBCOIN_estado_reset(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_reset:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    132            unsigned char tentativas=10;
   \   00000004   0x250A             MOVS     R5,#+10
    133            eMDB_reply flag;
    134            
    135            do flag = MDBCOIN_reset_device();   
   \                     ??SMDBCOIN_estado_reset_0:
   \   00000006   0x.... 0x....      BL       MDBCOIN_reset_device
    136            while(flag!=MDB_OK && tentativas--);
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD004             BEQ.N    ??SMDBCOIN_estado_reset_1
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0x1E4D             SUBS     R5,R1,#+1
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD1F5             BNE.N    ??SMDBCOIN_estado_reset_0
    137            
    138            if(flag==MDB_OK){
   \                     ??SMDBCOIN_estado_reset_1:
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD116             BNE.N    ??SMDBCOIN_estado_reset_2
    139              tentativas = 10;
   \   00000020   0x250A             MOVS     R5,#+10
    140              do flag = MDBCOIN_coin_type_setup(0x0F,0x0F);
   \                     ??SMDBCOIN_estado_reset_3:
   \   00000022   0x210F             MOVS     R1,#+15
   \   00000024   0x200F             MOVS     R0,#+15
   \   00000026   0x.... 0x....      BL       MDBCOIN_coin_type_setup
    141              while(flag!=MDB_OK && tentativas--);
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD004             BEQ.N    ??SMDBCOIN_estado_reset_4
   \   00000030   0x0029             MOVS     R1,R5
   \   00000032   0x1E4D             SUBS     R5,R1,#+1
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x2900             CMP      R1,#+0
   \   00000038   0xD1F3             BNE.N    ??SMDBCOIN_estado_reset_3
    142              if(flag==MDB_OK){
   \                     ??SMDBCOIN_estado_reset_4:
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD104             BNE.N    ??SMDBCOIN_estado_reset_5
    143                SMDBCOIN_contador_timeout = 10;
   \   00000040   0x....             LDR.N    R0,??DataTable5_3
   \   00000042   0x210A             MOVS     R1,#+10
   \   00000044   0x8001             STRH     R1,[R0, #+0]
    144                return COIN_SUPERVISAO;       
   \   00000046   0x2003             MOVS     R0,#+3
   \   00000048   0xE003             B.N      ??SMDBCOIN_estado_reset_6
    145              }
    146              else
    147                return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_reset_5:
   \   0000004A   0x2004             MOVS     R0,#+4
   \   0000004C   0xE001             B.N      ??SMDBCOIN_estado_reset_6
    148              
    149            }  
    150            
    151            return estado;
   \                     ??SMDBCOIN_estado_reset_2:
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_reset_6:
   \   00000052   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    152          }
    153          /***********************************************************************************
    154          *       Descrição       :       Estado onde o moedeiro está bloqueado
    155          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    156          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    157          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    158          eCOIN_SM_STATE SMDBCOIN_estado_bloqueado(eCOIN_SM_STATE estado){  
   \                     SMDBCOIN_estado_bloqueado:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    159            unsigned char flag;
    160            
    161            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2005             MOVS     R0,#+5
   \   00000008   0x.... 0x....      BL       PARAMETROS_le
    162            
    163            if(!flag)
   \   0000000C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD101             BNE.N    ??SMDBCOIN_estado_bloqueado_0
    164              return COIN_DISABLED;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE019             B.N      ??SMDBCOIN_estado_bloqueado_1
    165            
    166            unsigned char tentativas=5;
   \                     ??SMDBCOIN_estado_bloqueado_0:
   \   00000018   0x2505             MOVS     R5,#+5
    167            eMDB_reply ack;
    168            
    169            do ack = MDBCOIN_get_device();
   \                     ??SMDBCOIN_estado_bloqueado_2:
   \   0000001A   0x.... 0x....      BL       MDBCOIN_get_device
    170            while(ack!=MDB_OK && tentativas--);
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD004             BEQ.N    ??SMDBCOIN_estado_bloqueado_3
   \   00000024   0x0029             MOVS     R1,R5
   \   00000026   0x1E4D             SUBS     R5,R1,#+1
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x2900             CMP      R1,#+0
   \   0000002C   0xD1F5             BNE.N    ??SMDBCOIN_estado_bloqueado_2
    171            
    172            if(ack==MDB_OK){
   \                     ??SMDBCOIN_estado_bloqueado_3:
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD10C             BNE.N    ??SMDBCOIN_estado_bloqueado_4
    173              if(!SMDBCOIN_flag_bloqueio)
   \   00000034   0x....             LDR.N    R0,??DataTable5
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD101             BNE.N    ??SMDBCOIN_estado_bloqueado_5
    174                return COIN_RESET_STATE;         
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE005             B.N      ??SMDBCOIN_estado_bloqueado_1
    175              SMDBCOIN_contador_timeout = RELOAD_COIN_TIMEOUT;      
   \                     ??SMDBCOIN_estado_bloqueado_5:
   \   00000040   0x....             LDR.N    R0,??DataTable5_3
   \   00000042   0xF247 0x5130      MOVW     R1,#+30000
   \   00000046   0x8001             STRH     R1,[R0, #+0]
    176            }
    177            else{
    178              if(SMDBCOIN_contador_timeout)
    179                SMDBCOIN_contador_timeout--;
    180              else
    181                return COIN_OFFLINE;
    182            }
    183            
    184            return estado;
   \                     ??SMDBCOIN_estado_bloqueado_6:
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_bloqueado_1:
   \   0000004C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \                     ??SMDBCOIN_estado_bloqueado_4:
   \   0000004E   0x....             LDR.N    R0,??DataTable5_3
   \   00000050   0x8800             LDRH     R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD005             BEQ.N    ??SMDBCOIN_estado_bloqueado_7
   \   00000056   0x....             LDR.N    R0,??DataTable5_3
   \   00000058   0x8800             LDRH     R0,[R0, #+0]
   \   0000005A   0x1E40             SUBS     R0,R0,#+1
   \   0000005C   0x....             LDR.N    R1,??DataTable5_3
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
   \   00000060   0xE7F2             B.N      ??SMDBCOIN_estado_bloqueado_6
   \                     ??SMDBCOIN_estado_bloqueado_7:
   \   00000062   0x2004             MOVS     R0,#+4
   \   00000064   0xE7F2             B.N      ??SMDBCOIN_estado_bloqueado_1
    185          }
    186          /***********************************************************************************
    187          *       Descrição       :       Estado onde realiza a supervisão do moedeiro
    188          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    189          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    190          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    191          eCOIN_SM_STATE SMDBCOIN_estado_supervisao(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_supervisao:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
    192            unsigned char flag;
    193            eMDB_COIN_POOL_TYPE tipo_pacote;
    194            eMDB_COIN_POOL_STATUS status_pacote;
    195            unsigned char tipo_moeda;
    196            unsigned char quantidade_tubo;  
    197            const unsigned char valores[]={5,10,25,50,100};
   \   00000006   0xA802             ADD      R0,SP,#+8
   \   00000008   0x....             LDR.N    R1,??DataTable5_4
   \   0000000A   0xC90C             LDM      R1!,{R2,R3}
   \   0000000C   0xC00C             STM      R0!,{R2,R3}
   \   0000000E   0x3908             SUBS     R1,R1,#+8
   \   00000010   0x3808             SUBS     R0,R0,#+8
    198            eMDB_reply ack;
    199            unsigned char tentativas=10;
   \   00000012   0x250A             MOVS     R5,#+10
    200            
    201            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);    
   \   00000014   0xF10D 0x0102      ADD      R1,SP,#+2
   \   00000018   0x2005             MOVS     R0,#+5
   \   0000001A   0x.... 0x....      BL       PARAMETROS_le
    202            if(!flag)
   \   0000001E   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD101             BNE.N    ??SMDBCOIN_estado_supervisao_0
    203              return COIN_DISABLED;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xE036             B.N      ??SMDBCOIN_estado_supervisao_1
    204            if(SMDBCOIN_flag_bloqueio){
   \                     ??SMDBCOIN_estado_supervisao_0:
   \   0000002A   0x....             LDR.N    R0,??DataTable5
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD010             BEQ.N    ??SMDBCOIN_estado_supervisao_2
    205              
    206              do ack = MDBCOIN_reset_device();   
   \                     ??SMDBCOIN_estado_supervisao_3:
   \   00000032   0x.... 0x....      BL       MDBCOIN_reset_device
    207              while(ack!=MDB_OK && tentativas--);
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD004             BEQ.N    ??SMDBCOIN_estado_supervisao_4
   \   0000003C   0x0029             MOVS     R1,R5
   \   0000003E   0x1E4D             SUBS     R5,R1,#+1
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0x2900             CMP      R1,#+0
   \   00000044   0xD1F5             BNE.N    ??SMDBCOIN_estado_supervisao_3
    208              
    209              if(ack==MDB_OK)
   \                     ??SMDBCOIN_estado_supervisao_4:
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD101             BNE.N    ??SMDBCOIN_estado_supervisao_5
    210                return COIN_LOCKED;
   \   0000004C   0x2002             MOVS     R0,#+2
   \   0000004E   0xE023             B.N      ??SMDBCOIN_estado_supervisao_1
    211              else
    212                return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_supervisao_5:
   \   00000050   0x2004             MOVS     R0,#+4
   \   00000052   0xE021             B.N      ??SMDBCOIN_estado_supervisao_1
    213            }
    214          
    215            if(MDBCOIN_poll(&tipo_pacote,&status_pacote,&tipo_moeda,&quantidade_tubo)==MDB_OK){
   \                     ??SMDBCOIN_estado_supervisao_2:
   \   00000054   0xF10D 0x0303      ADD      R3,SP,#+3
   \   00000058   0xF10D 0x0201      ADD      R2,SP,#+1
   \   0000005C   0xA901             ADD      R1,SP,#+4
   \   0000005E   0xA800             ADD      R0,SP,#+0
   \   00000060   0x.... 0x....      BL       MDBCOIN_poll
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD119             BNE.N    ??SMDBCOIN_estado_supervisao_6
    216              
    217              SMDBCOIN_contador_timeout = RELOAD_COIN_TIMEOUT;     
   \   00000068   0x....             LDR.N    R0,??DataTable5_3
   \   0000006A   0xF247 0x5130      MOVW     R1,#+30000
   \   0000006E   0x8001             STRH     R1,[R0, #+0]
    218              if(tipo_pacote==COIN_DEPOSITED){
   \   00000070   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000074   0x2801             CMP      R0,#+1
   \   00000076   0xD10D             BNE.N    ??SMDBCOIN_estado_supervisao_7
    219                //Aqui dentro é onde vem
    220                // o valor da moeda para somar ao pagamento
    221                unsigned short int valor = valores[tipo_moeda];
   \   00000078   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   0000007C   0xA902             ADD      R1,SP,#+8
   \   0000007E   0x5C40             LDRB     R0,[R0, R1]
    222                PAGAMENTOS_adiciona_valores(valor);
   \   00000080   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000082   0x.... 0x....      BL       PAGAMENTOS_adiciona_valores
    223                tipo_pacote = COIN_STATUS;
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0xF88D 0x0000      STRB     R0,[SP, #+0]
    224                vTaskDelay(500);
   \   0000008C   0xF44F 0x70FA      MOV      R0,#+500
   \   00000090   0x.... 0x....      BL       vTaskDelay
    225              }
    226            }
    227            else{
    228              if(SMDBCOIN_contador_timeout)
    229                SMDBCOIN_contador_timeout--;
    230              else
    231                return COIN_OFFLINE;
    232            }
    233            
    234            return estado;
   \                     ??SMDBCOIN_estado_supervisao_7:
   \   00000094   0x0020             MOVS     R0,R4
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_supervisao_1:
   \   00000098   0xB005             ADD      SP,SP,#+20
   \   0000009A   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??SMDBCOIN_estado_supervisao_6:
   \   0000009C   0x....             LDR.N    R0,??DataTable5_3
   \   0000009E   0x8800             LDRH     R0,[R0, #+0]
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD005             BEQ.N    ??SMDBCOIN_estado_supervisao_8
   \   000000A4   0x....             LDR.N    R0,??DataTable5_3
   \   000000A6   0x8800             LDRH     R0,[R0, #+0]
   \   000000A8   0x1E40             SUBS     R0,R0,#+1
   \   000000AA   0x....             LDR.N    R1,??DataTable5_3
   \   000000AC   0x8008             STRH     R0,[R1, #+0]
   \   000000AE   0xE7F1             B.N      ??SMDBCOIN_estado_supervisao_7
   \                     ??SMDBCOIN_estado_supervisao_8:
   \   000000B0   0x2004             MOVS     R0,#+4
   \   000000B2   0xE7F1             B.N      ??SMDBCOIN_estado_supervisao_1
    235          }
    236          /***********************************************************************************
    237          *       Descrição       :       Estado em que o moedeiro está offline
    238          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    239          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    240          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    241          eCOIN_SM_STATE SMDBCOIN_estado_offline(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_offline:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    242            unsigned char flag;
    243            
    244            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    245            
    246            if(!flag)
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD101             BNE.N    ??SMDBCOIN_estado_offline_0
    247              return COIN_DISABLED;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xE007             B.N      ??SMDBCOIN_estado_offline_1
    248            
    249            if(MDBCOIN_get_device()==MDB_OK)
   \                     ??SMDBCOIN_estado_offline_0:
   \   0000001A   0x.... 0x....      BL       MDBCOIN_get_device
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD101             BNE.N    ??SMDBCOIN_estado_offline_2
    250              return COIN_DISABLED;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xE001             B.N      ??SMDBCOIN_estado_offline_1
    251                
    252            return estado;
   \                     ??SMDBCOIN_estado_offline_2:
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_offline_1:
   \   0000002A   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    253          }
    254          /***********************************************************************************
    255          *       Descrição       :       Verifica se há conectivadade do moedeiro
    256          *       Parametros      :       nenhum
    257          *       Retorno         :       nenhum
    258          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    259          unsigned char SMDBCOIN_verifica_net_status(void){
    260            
    261            if(SMDBCOIN_estado_atual != COIN_OFFLINE)
   \                     SMDBCOIN_verifica_net_status:
   \   00000000   0x....             LDR.N    R0,??DataTable5_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2804             CMP      R0,#+4
   \   00000006   0xD001             BEQ.N    ??SMDBCOIN_verifica_net_status_0
    262              return 1;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xE000             B.N      ??SMDBCOIN_verifica_net_status_1
    263            
    264            return 0;
   \                     ??SMDBCOIN_verifica_net_status_0:
   \   0000000C   0x2000             MOVS     R0,#+0
   \                     ??SMDBCOIN_verifica_net_status_1:
   \   0000000E   0x4770             BX       LR               ;; return
    265          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     SMDBCOIN_flag_bloqueio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     SMDBCOIN_estado_atual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     SMDBCOIN_func_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     SMDBCOIN_contador_timeout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     `?<Constant {5, 10, 25, 50, 100}>`

   \                                 In section .rodata, align 4
   \                     `?<Constant {5, 10, 25, 50, 100}>`:
   \   00000000   0x05 0x0A          DC8 5, 10, 25, 50, 100, 0, 0, 0
   \              0x19 0x32    
   \              0x64 0x00    
   \              0x00 0x00    
    266          /***********************************************************************************
    267          *       Fim do arquivo
    268          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   SMDBCOIN_estado_bloqueado
        16   -> MDBCOIN_get_device
        16   -> PARAMETROS_le
      16   SMDBCOIN_estado_desabilitado
        16   -> PARAMETROS_le
      16   SMDBCOIN_estado_offline
        16   -> MDBCOIN_get_device
        16   -> PARAMETROS_le
      16   SMDBCOIN_estado_reset
        16   -> MDBCOIN_coin_type_setup
        16   -> MDBCOIN_reset_device
      32   SMDBCOIN_estado_supervisao
        32   -> MDBCOIN_poll
        32   -> MDBCOIN_reset_device
        32   -> PAGAMENTOS_adiciona_valores
        32   -> PARAMETROS_le
        32   -> vTaskDelay
       0   SMDBCOIN_set_flag_bloqueio
       8   SMDBCOIN_tick
         8   -- Indirect call
       0   SMDBCOIN_verifica_net_status


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant {5, 10, 25, 50, 100}>
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       2  SMDBCOIN_contador_timeout
       1  SMDBCOIN_estado_atual
     102  SMDBCOIN_estado_bloqueado
      32  SMDBCOIN_estado_desabilitado
      44  SMDBCOIN_estado_offline
      84  SMDBCOIN_estado_reset
     180  SMDBCOIN_estado_supervisao
       1  SMDBCOIN_flag_bloqueio
      20  SMDBCOIN_func_table
       6  SMDBCOIN_set_flag_bloqueio
      24  SMDBCOIN_tick
      16  SMDBCOIN_verifica_net_status

 
   4 bytes in section .bss
  28 bytes in section .rodata
 508 bytes in section .text
 
 508 bytes of CODE  memory
  28 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none

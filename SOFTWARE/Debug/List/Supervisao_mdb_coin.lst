###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      09/Sep/2017  15:50:30 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\Pagamentos #
#                    \Supervisao_mdb_coin.c                                   #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\Pagamentos #
#                    \Supervisao_mdb_coin.c -lC C:\repositorios\MaisPipocaG2\ #
#                    SOFTWARE\Debug\List\ -lA C:\repositorios\MaisPipocaG2\SO #
#                    FTWARE\Debug\List\ -o C:\repositorios\MaisPipocaG2\SOFTW #
#                    ARE\Debug\Obj\ --no_cse --no_unroll --no_inline          #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\Supervi #
#                    sao_mdb_coin.lst                                         #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\Supervis #
#                    ao_mdb_coin.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\Pagamentos\Supervisao_mdb_coin.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  supervisao_mdb_coin.c
     18          |       Descrição          :  Máquina de estados que gerencia o meio de pagamento
     19          |                             MDB BILL
     20          | 
     21          |       Autor              :  Marcos Aquino
     22          |       Data criação       :  28/02/2017
     23          |
     24          |       Revisões           :  1.0.0.0
     25          |
     26          |
     27          | __________________________________________________________________________________
     28          */
     29          
     30          /***********************************************************************************
     31          *       Includes
     32          ***********************************************************************************/
     33          #include <stdio.h>
     34          #include <stdlib.h>
     35          #include <string.h>
     36          #include "..\..\includes.h"
     37          #include "supervisao_mdb_coin.h"
     38          
     39          /***********************************************************************************
     40          *       Definições
     41          ***********************************************************************************/
     42          #define RELOAD_COIN_TIMEOUT             30000
     43          #define RELOAD_LOCK_COIN                250        
     44          /***********************************************************************************
     45          *       Enumerações
     46          ***********************************************************************************/
     47          typedef enum{
     48            COIN_DISABLED=0,
     49            COIN_RESET_STATE,
     50            COIN_LOCKED,
     51            COIN_SUPERVISAO,
     52            COIN_OFFLINE
     53          }eCOIN_SM_STATE;
     54          
     55          /***********************************************************************************
     56          *       Variaveis locais
     57          ***********************************************************************************/

   \                                 In section .bss, align 1
     58          unsigned char SMDBCOIN_flag_bloqueio=0;
   \                     SMDBCOIN_flag_bloqueio:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     59          eCOIN_SM_STATE SMDBCOIN_estado_atual;
   \                     SMDBCOIN_estado_atual:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     60          unsigned short int SMDBCOIN_contador_timeout=0;
   \                     SMDBCOIN_contador_timeout:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     61          unsigned char SMDBCOIN_coin_credit[16]={0};
   \                     SMDBCOIN_coin_credit:
   \   00000000                      DS8 16

   \                                 In section .bss, align 1
     62          unsigned char SMDBCOIN_scale_factor=0x00;
   \                     SMDBCOIN_scale_factor:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     63          unsigned char SMDBCOIN_decimal_places;
   \                     SMDBCOIN_decimal_places:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     64          unsigned short int SMDBCOIN_lock_coin;
   \                     SMDBCOIN_lock_coin:
   \   00000000                      DS8 2
     65          
     66          /***********************************************************************************
     67          *       Funções locais
     68          ***********************************************************************************/
     69          eCOIN_SM_STATE SMDBCOIN_estado_desabilitado(eCOIN_SM_STATE estado);
     70          eCOIN_SM_STATE SMDBCOIN_estado_reset(eCOIN_SM_STATE estado);
     71          eCOIN_SM_STATE SMDBCOIN_estado_bloqueado(eCOIN_SM_STATE estado);
     72          eCOIN_SM_STATE SMDBCOIN_estado_supervisao(eCOIN_SM_STATE estado);
     73          eCOIN_SM_STATE SMDBCOIN_estado_offline(eCOIN_SM_STATE estado);
     74          
     75          /***********************************************************************************
     76          *       Tabela de funções
     77          ***********************************************************************************/

   \                                 In section .rodata, align 4
     78          eCOIN_SM_STATE(*const SMDBCOIN_func_table[])(eCOIN_SM_STATE)={
   \                     SMDBCOIN_func_table:
   \   00000000   0x........         DC32 SMDBCOIN_estado_desabilitado, SMDBCOIN_estado_reset
   \              0x........   
   \   00000008   0x........         DC32 SMDBCOIN_estado_bloqueado, SMDBCOIN_estado_supervisao
   \              0x........   
   \   00000010   0x........         DC32 SMDBCOIN_estado_offline
     79            [COIN_DISABLED]    = SMDBCOIN_estado_desabilitado,
     80            [COIN_RESET_STATE] = SMDBCOIN_estado_reset,
     81            [COIN_LOCKED]      = SMDBCOIN_estado_bloqueado,
     82            [COIN_SUPERVISAO]  = SMDBCOIN_estado_supervisao,
     83            [COIN_OFFLINE]     = SMDBCOIN_estado_offline
     84          };
     85          /***********************************************************************************
     86          *       Funções locais
     87          ***********************************************************************************/
     88          
     89          
     90          /***********************************************************************************
     91          *       Implementação das funções
     92          ***********************************************************************************/
     93          
     94          /***********************************************************************************
     95          *       Descrição       :       Setter para o flag bloqueio 
     96          *       Parametros      :       (unsigned char) flag
     97          *       Retorno         :       nenhum
     98          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     99          void SMDBCOIN_set_flag_bloqueio(unsigned char flag){
    100            
    101            SMDBCOIN_flag_bloqueio = flag;
   \                     SMDBCOIN_set_flag_bloqueio:
   \   00000000   0x....             LDR.N    R1,??DataTable5
   \   00000002   0x7008             STRB     R0,[R1, #+0]
    102          }
   \   00000004   0x4770             BX       LR               ;; return
    103          /***********************************************************************************
    104          *       Descrição       :       Função principal da supervisão
    105          *                               do moedeiro
    106          *       Parametros      :       nenhum
    107          *       Retorno         :       nenhum
    108          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    109          void SMDBCOIN_tick(void){
   \                     SMDBCOIN_tick:
   \   00000000   0xB580             PUSH     {R7,LR}
    110            
    111            SMDBCOIN_estado_atual = SMDBCOIN_func_table[SMDBCOIN_estado_atual](SMDBCOIN_estado_atual);
   \   00000002   0x....             LDR.N    R0,??DataTable5_1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable5_1
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x....             LDR.N    R2,??DataTable5_2
   \   0000000C   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   00000010   0x4788             BLX      R1
   \   00000012   0x....             LDR.N    R1,??DataTable5_1
   \   00000014   0x7008             STRB     R0,[R1, #+0]
    112          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    113          /***********************************************************************************
    114          *       Descrição       :       Estado onde o moedeiro está
    115          *                               desabilitado
    116          *       Parametros      :       (eCOIN_SM_STATE) estado atual
    117          *                                                       do moedeiro
    118          *       Retorno         :       (eCOIN_SM_STATE) novo estado
    119          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    120          eCOIN_SM_STATE SMDBCOIN_estado_desabilitado(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_desabilitado:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    121            unsigned char flag;
    122            
    123            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    124            
    125            if(flag)
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD001             BEQ.N    ??SMDBCOIN_estado_desabilitado_0
    126              return COIN_LOCKED;
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0xE001             B.N      ??SMDBCOIN_estado_desabilitado_1
    127            
    128            return estado;
   \                     ??SMDBCOIN_estado_desabilitado_0:
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_desabilitado_1:
   \   0000001E   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    129          }
    130          /***********************************************************************************
    131          *       Descrição       :       Estado onde é realizado o reset do moedeiro
    132          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    133          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    134          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    135          eCOIN_SM_STATE SMDBCOIN_estado_reset(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_reset:
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    136            unsigned char tentativas=10;
   \   00000004   0x260A             MOVS     R6,#+10
    137            eMDB_reply flag;
    138            unsigned char mdb_message_leve;
    139            unsigned short int country;
    140            unsigned short int coin_type_routing;
    141            unsigned short int cfg_moedas;
    142            
    143            PARAMETROS_le(ADR_TIPOS_MOEDAS,(void*)&cfg_moedas);  
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x2040             MOVS     R0,#+64
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    144          
    145            
    146            do flag = MDBCOIN_reset_device();   
   \                     ??SMDBCOIN_estado_reset_0:
   \   0000000E   0x.... 0x....      BL       MDBCOIN_reset_device
   \   00000012   0x0005             MOVS     R5,R0
    147            while(flag!=MDB_OK && tentativas--);
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD004             BEQ.N    ??SMDBCOIN_estado_reset_1
   \   0000001A   0x0030             MOVS     R0,R6
   \   0000001C   0x1E46             SUBS     R6,R0,#+1
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD1F4             BNE.N    ??SMDBCOIN_estado_reset_0
    148            
    149            if(flag==MDB_OK){
   \                     ??SMDBCOIN_estado_reset_1:
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD136             BNE.N    ??SMDBCOIN_estado_reset_2
    150              
    151              tentativas = 10;
   \   0000002A   0x200A             MOVS     R0,#+10
   \   0000002C   0x0006             MOVS     R6,R0
    152              do flag = MDBCOIN_get_setup_from_device(&mdb_message_leve,&country,&SMDBCOIN_scale_factor,
    153                                                      &SMDBCOIN_decimal_places,&coin_type_routing,SMDBCOIN_coin_credit);
   \                     ??SMDBCOIN_estado_reset_3:
   \   0000002E   0x....             LDR.N    R0,??DataTable5_3
   \   00000030   0x9001             STR      R0,[SP, #+4]
   \   00000032   0xA803             ADD      R0,SP,#+12
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x....             LDR.N    R3,??DataTable5_4
   \   00000038   0x....             LDR.N    R2,??DataTable5_5
   \   0000003A   0xF10D 0x010E      ADD      R1,SP,#+14
   \   0000003E   0xF10D 0x000A      ADD      R0,SP,#+10
   \   00000042   0x.... 0x....      BL       MDBCOIN_get_setup_from_device
   \   00000046   0x0005             MOVS     R5,R0
    154              while(flag!=MDB_OK && --tentativas);
   \   00000048   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004A   0x2D00             CMP      R5,#+0
   \   0000004C   0xD004             BEQ.N    ??SMDBCOIN_estado_reset_4
   \   0000004E   0x1E76             SUBS     R6,R6,#+1
   \   00000050   0x0030             MOVS     R0,R6
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD1EA             BNE.N    ??SMDBCOIN_estado_reset_3
    155              
    156              if(flag==MDB_OK){      
   \                     ??SMDBCOIN_estado_reset_4:
   \   00000058   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005A   0x2D00             CMP      R5,#+0
   \   0000005C   0xD11A             BNE.N    ??SMDBCOIN_estado_reset_5
    157                
    158                
    159                
    160                tentativas = 10;
   \   0000005E   0x200A             MOVS     R0,#+10
   \   00000060   0x0006             MOVS     R6,R0
    161                do flag = MDBCOIN_coin_type_setup(cfg_moedas,cfg_moedas);
   \                     ??SMDBCOIN_estado_reset_6:
   \   00000062   0xF8BD 0x1008      LDRH     R1,[SP, #+8]
   \   00000066   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   0000006A   0x.... 0x....      BL       MDBCOIN_coin_type_setup
   \   0000006E   0x0005             MOVS     R5,R0
    162                while(flag!=MDB_OK && tentativas--);
   \   00000070   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000072   0x2D00             CMP      R5,#+0
   \   00000074   0xD004             BEQ.N    ??SMDBCOIN_estado_reset_7
   \   00000076   0x0030             MOVS     R0,R6
   \   00000078   0x1E46             SUBS     R6,R0,#+1
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD1F0             BNE.N    ??SMDBCOIN_estado_reset_6
    163                if(flag==MDB_OK){
   \                     ??SMDBCOIN_estado_reset_7:
   \   00000080   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000082   0x2D00             CMP      R5,#+0
   \   00000084   0xD104             BNE.N    ??SMDBCOIN_estado_reset_8
    164                  SMDBCOIN_contador_timeout = 10;
   \   00000086   0x....             LDR.N    R0,??DataTable5_6
   \   00000088   0x210A             MOVS     R1,#+10
   \   0000008A   0x8001             STRH     R1,[R0, #+0]
    165                  return COIN_SUPERVISAO;       
   \   0000008C   0x2003             MOVS     R0,#+3
   \   0000008E   0xE005             B.N      ??SMDBCOIN_estado_reset_9
    166                }
    167                else
    168                  return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_reset_8:
   \   00000090   0x2004             MOVS     R0,#+4
   \   00000092   0xE003             B.N      ??SMDBCOIN_estado_reset_9
    169              }
    170              else
    171                return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_reset_5:
   \   00000094   0x2004             MOVS     R0,#+4
   \   00000096   0xE001             B.N      ??SMDBCOIN_estado_reset_9
    172              
    173            }  
    174            
    175            return estado;
   \                     ??SMDBCOIN_estado_reset_2:
   \   00000098   0x0020             MOVS     R0,R4
   \   0000009A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_reset_9:
   \   0000009C   0xB004             ADD      SP,SP,#+16
   \   0000009E   0xBD70             POP      {R4-R6,PC}       ;; return
    176          }
    177          /***********************************************************************************
    178          *       Descrição       :       Estado onde o moedeiro está bloqueado
    179          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    180          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    181          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    182          eCOIN_SM_STATE SMDBCOIN_estado_bloqueado(eCOIN_SM_STATE estado){  
   \                     SMDBCOIN_estado_bloqueado:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    183            unsigned char flag;
    184            
    185            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    186            
    187            if(!flag)
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD101             BNE.N    ??SMDBCOIN_estado_bloqueado_0
    188              return COIN_DISABLED;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xE027             B.N      ??SMDBCOIN_estado_bloqueado_1
    189            
    190            unsigned char tentativas=5;
   \                     ??SMDBCOIN_estado_bloqueado_0:
   \   0000001A   0x2605             MOVS     R6,#+5
    191            eMDB_reply ack;
    192            
    193            do ack = MDBCOIN_get_device();
   \                     ??SMDBCOIN_estado_bloqueado_2:
   \   0000001C   0x.... 0x....      BL       MDBCOIN_get_device
   \   00000020   0x0005             MOVS     R5,R0
    194            while(ack!=MDB_OK && tentativas--);
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D00             CMP      R5,#+0
   \   00000026   0xD004             BEQ.N    ??SMDBCOIN_estado_bloqueado_3
   \   00000028   0x0030             MOVS     R0,R6
   \   0000002A   0x1E46             SUBS     R6,R0,#+1
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD1F4             BNE.N    ??SMDBCOIN_estado_bloqueado_2
    195            
    196            if(ack==MDB_OK){
   \                     ??SMDBCOIN_estado_bloqueado_3:
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0x2D00             CMP      R5,#+0
   \   00000036   0xD10A             BNE.N    ??SMDBCOIN_estado_bloqueado_4
    197              if(!SMDBCOIN_flag_bloqueio)
   \   00000038   0x....             LDR.N    R0,??DataTable5
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD101             BNE.N    ??SMDBCOIN_estado_bloqueado_5
    198                return COIN_RESET_STATE;         
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0xE012             B.N      ??SMDBCOIN_estado_bloqueado_1
    199              SMDBCOIN_contador_timeout = RELOAD_COIN_TIMEOUT;      
   \                     ??SMDBCOIN_estado_bloqueado_5:
   \   00000044   0x....             LDR.N    R0,??DataTable5_6
   \   00000046   0xF247 0x5130      MOVW     R1,#+30000
   \   0000004A   0x8001             STRH     R1,[R0, #+0]
   \   0000004C   0xE00B             B.N      ??SMDBCOIN_estado_bloqueado_6
    200            }
    201            else{
    202              if(SMDBCOIN_contador_timeout)
   \                     ??SMDBCOIN_estado_bloqueado_4:
   \   0000004E   0x....             LDR.N    R0,??DataTable5_6
   \   00000050   0x8800             LDRH     R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD005             BEQ.N    ??SMDBCOIN_estado_bloqueado_7
    203                SMDBCOIN_contador_timeout--;
   \   00000056   0x....             LDR.N    R0,??DataTable5_6
   \   00000058   0x8800             LDRH     R0,[R0, #+0]
   \   0000005A   0x1E40             SUBS     R0,R0,#+1
   \   0000005C   0x....             LDR.N    R1,??DataTable5_6
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
   \   00000060   0xE001             B.N      ??SMDBCOIN_estado_bloqueado_6
    204              else
    205                return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_bloqueado_7:
   \   00000062   0x2004             MOVS     R0,#+4
   \   00000064   0xE001             B.N      ??SMDBCOIN_estado_bloqueado_1
    206            }
    207            
    208            return estado;
   \                     ??SMDBCOIN_estado_bloqueado_6:
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_bloqueado_1:
   \   0000006A   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    209          }
    210          /***********************************************************************************
    211          *       Descrição       :       Estado onde realiza a supervisão do moedeiro
    212          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    213          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    214          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    215          eCOIN_SM_STATE SMDBCOIN_estado_supervisao(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_supervisao:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0004             MOVS     R4,R0
    216            unsigned char flag;
    217            eMDB_COIN_POOL_TYPE tipo_pacote;
    218            eMDB_COIN_POOL_STATUS status_pacote;
    219            unsigned char tipo_moeda;
    220            unsigned char quantidade_tubo;  
    221            eMDB_reply ack;
    222            unsigned char tentativas=10;
   \   00000006   0x260A             MOVS     R6,#+10
    223            
    224            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);    
   \   00000008   0xF10D 0x0102      ADD      R1,SP,#+2
   \   0000000C   0x2005             MOVS     R0,#+5
   \   0000000E   0x.... 0x....      BL       PARAMETROS_le
    225            if(!flag)
   \   00000012   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD101             BNE.N    ??SMDBCOIN_estado_supervisao_0
    226              return COIN_DISABLED;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xE050             B.N      ??SMDBCOIN_estado_supervisao_1
    227            if(SMDBCOIN_flag_bloqueio){
   \                     ??SMDBCOIN_estado_supervisao_0:
   \   0000001E   0x....             LDR.N    R0,??DataTable5
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD011             BEQ.N    ??SMDBCOIN_estado_supervisao_2
    228              
    229              do ack = MDBCOIN_reset_device();   
   \                     ??SMDBCOIN_estado_supervisao_3:
   \   00000026   0x.... 0x....      BL       MDBCOIN_reset_device
   \   0000002A   0x0005             MOVS     R5,R0
    230              while(ack!=MDB_OK && tentativas--);
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x2D00             CMP      R5,#+0
   \   00000030   0xD004             BEQ.N    ??SMDBCOIN_estado_supervisao_4
   \   00000032   0x0030             MOVS     R0,R6
   \   00000034   0x1E46             SUBS     R6,R0,#+1
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD1F4             BNE.N    ??SMDBCOIN_estado_supervisao_3
    231              
    232              if(ack==MDB_OK)
   \                     ??SMDBCOIN_estado_supervisao_4:
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D00             CMP      R5,#+0
   \   00000040   0xD101             BNE.N    ??SMDBCOIN_estado_supervisao_5
    233                return COIN_LOCKED;
   \   00000042   0x2002             MOVS     R0,#+2
   \   00000044   0xE03C             B.N      ??SMDBCOIN_estado_supervisao_1
    234              else
    235                return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_supervisao_5:
   \   00000046   0x2004             MOVS     R0,#+4
   \   00000048   0xE03A             B.N      ??SMDBCOIN_estado_supervisao_1
    236            }
    237          
    238            if(!SMDBCOIN_lock_coin && MDBCOIN_poll(&tipo_pacote,&status_pacote,&tipo_moeda,&quantidade_tubo)==MDB_OK){
   \                     ??SMDBCOIN_estado_supervisao_2:
   \   0000004A   0x....             LDR.N    R0,??DataTable5_7
   \   0000004C   0x8800             LDRH     R0,[R0, #+0]
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD128             BNE.N    ??SMDBCOIN_estado_supervisao_6
   \   00000052   0xF10D 0x0303      ADD      R3,SP,#+3
   \   00000056   0xF10D 0x0201      ADD      R2,SP,#+1
   \   0000005A   0xA901             ADD      R1,SP,#+4
   \   0000005C   0xA800             ADD      R0,SP,#+0
   \   0000005E   0x.... 0x....      BL       MDBCOIN_poll
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD11E             BNE.N    ??SMDBCOIN_estado_supervisao_6
    239              
    240              SMDBCOIN_lock_coin=RELOAD_LOCK_COIN;
   \   00000066   0x....             LDR.N    R0,??DataTable5_7
   \   00000068   0x21FA             MOVS     R1,#+250
   \   0000006A   0x8001             STRH     R1,[R0, #+0]
    241              
    242              SMDBCOIN_contador_timeout = RELOAD_COIN_TIMEOUT;     
   \   0000006C   0x....             LDR.N    R0,??DataTable5_6
   \   0000006E   0xF247 0x5130      MOVW     R1,#+30000
   \   00000072   0x8001             STRH     R1,[R0, #+0]
    243              if(tipo_pacote!=COIN_ACK){
   \   00000074   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000078   0x2803             CMP      R0,#+3
   \   0000007A   0xD01F             BEQ.N    ??SMDBCOIN_estado_supervisao_7
    244                 if(tipo_pacote==COIN_DEPOSITED){
   \   0000007C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000080   0x2801             CMP      R0,#+1
   \   00000082   0xD11B             BNE.N    ??SMDBCOIN_estado_supervisao_7
    245                  //Aqui dentro é onde vem
    246                  // o valor da moeda para somar ao pagamento
    247                  unsigned short int valor = SMDBCOIN_coin_credit[tipo_moeda]*SMDBCOIN_scale_factor;
   \   00000084   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   00000088   0x....             LDR.N    R1,??DataTable5_3
   \   0000008A   0x5C40             LDRB     R0,[R0, R1]
   \   0000008C   0x....             LDR.N    R1,??DataTable5_5
   \   0000008E   0x7809             LDRB     R1,[R1, #+0]
   \   00000090   0xFB01 0xF700      MUL      R7,R1,R0
    248                  PAGAMENTOS_adiciona_valores(valor);
   \   00000094   0x0038             MOVS     R0,R7
   \   00000096   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000098   0x.... 0x....      BL       PAGAMENTOS_adiciona_valores
    249                  tipo_pacote = COIN_STATUS;
   \   0000009C   0x2002             MOVS     R0,#+2
   \   0000009E   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   000000A2   0xE00B             B.N      ??SMDBCOIN_estado_supervisao_7
    250                }
    251              }
    252            }
    253            else{
    254              if(SMDBCOIN_contador_timeout)
   \                     ??SMDBCOIN_estado_supervisao_6:
   \   000000A4   0x....             LDR.N    R0,??DataTable5_6
   \   000000A6   0x8800             LDRH     R0,[R0, #+0]
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD005             BEQ.N    ??SMDBCOIN_estado_supervisao_8
    255                SMDBCOIN_contador_timeout--;
   \   000000AC   0x....             LDR.N    R0,??DataTable5_6
   \   000000AE   0x8800             LDRH     R0,[R0, #+0]
   \   000000B0   0x1E40             SUBS     R0,R0,#+1
   \   000000B2   0x....             LDR.N    R1,??DataTable5_6
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
   \   000000B6   0xE001             B.N      ??SMDBCOIN_estado_supervisao_7
    256              else
    257                return COIN_OFFLINE;
   \                     ??SMDBCOIN_estado_supervisao_8:
   \   000000B8   0x2004             MOVS     R0,#+4
   \   000000BA   0xE001             B.N      ??SMDBCOIN_estado_supervisao_1
    258            }
    259            
    260            return estado;
   \                     ??SMDBCOIN_estado_supervisao_7:
   \   000000BC   0x0020             MOVS     R0,R4
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_supervisao_1:
   \   000000C0   0xBDFE             POP      {R1-R7,PC}       ;; return
    261          }
    262          /***********************************************************************************
    263          *       Descrição       :       Estado em que o moedeiro está offline
    264          *       Parametros      :       (eCOIN_SM_STATE) estado atual do moedeiro
    265          *       Retorno         :       (eCOIN_SM_STATE) novo estado do moedeiro
    266          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    267          eCOIN_SM_STATE SMDBCOIN_estado_offline(eCOIN_SM_STATE estado){
   \                     SMDBCOIN_estado_offline:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    268            unsigned char flag;
    269            
    270            PARAMETROS_le(ADR_FLAG_MDB_COIN,(void*)&flag);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    271            
    272            if(!flag)
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD101             BNE.N    ??SMDBCOIN_estado_offline_0
    273              return COIN_DISABLED;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xE007             B.N      ??SMDBCOIN_estado_offline_1
    274            
    275            if(MDBCOIN_get_device()==MDB_OK)
   \                     ??SMDBCOIN_estado_offline_0:
   \   0000001A   0x.... 0x....      BL       MDBCOIN_get_device
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD101             BNE.N    ??SMDBCOIN_estado_offline_2
    276              return COIN_DISABLED;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xE001             B.N      ??SMDBCOIN_estado_offline_1
    277                
    278            return estado;
   \                     ??SMDBCOIN_estado_offline_2:
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??SMDBCOIN_estado_offline_1:
   \   0000002A   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    279          }
    280          /***********************************************************************************
    281          *       Descrição       :       Verifica se há conectivadade do moedeiro
    282          *       Parametros      :       nenhum
    283          *       Retorno         :       nenhum
    284          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    285          unsigned char SMDBCOIN_verifica_net_status(void){
    286            
    287            if(SMDBCOIN_estado_atual != COIN_OFFLINE)
   \                     SMDBCOIN_verifica_net_status:
   \   00000000   0x....             LDR.N    R0,??DataTable5_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2804             CMP      R0,#+4
   \   00000006   0xD001             BEQ.N    ??SMDBCOIN_verifica_net_status_0
    288              return 1;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xE000             B.N      ??SMDBCOIN_verifica_net_status_1
    289            
    290            return 0;
   \                     ??SMDBCOIN_verifica_net_status_0:
   \   0000000C   0x2000             MOVS     R0,#+0
   \                     ??SMDBCOIN_verifica_net_status_1:
   \   0000000E   0x4770             BX       LR               ;; return
    291          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     SMDBCOIN_flag_bloqueio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     SMDBCOIN_estado_atual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     SMDBCOIN_func_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     SMDBCOIN_coin_credit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     SMDBCOIN_decimal_places

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     SMDBCOIN_scale_factor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     SMDBCOIN_contador_timeout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     SMDBCOIN_lock_coin
    292          /***********************************************************************************
    293          *       Fim do arquivo
    294          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   SMDBCOIN_estado_bloqueado
        24   -> MDBCOIN_get_device
        24   -> PARAMETROS_le
      16   SMDBCOIN_estado_desabilitado
        16   -> PARAMETROS_le
      16   SMDBCOIN_estado_offline
        16   -> MDBCOIN_get_device
        16   -> PARAMETROS_le
      32   SMDBCOIN_estado_reset
        32   -> MDBCOIN_coin_type_setup
        32   -> MDBCOIN_get_setup_from_device
        32   -> MDBCOIN_reset_device
        32   -> PARAMETROS_le
      32   SMDBCOIN_estado_supervisao
        32   -> MDBCOIN_poll
        32   -> MDBCOIN_reset_device
        32   -> PAGAMENTOS_adiciona_valores
        32   -> PARAMETROS_le
       0   SMDBCOIN_set_flag_bloqueio
       8   SMDBCOIN_tick
         8   -- Indirect call
       0   SMDBCOIN_verifica_net_status


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
      16  SMDBCOIN_coin_credit
       2  SMDBCOIN_contador_timeout
       1  SMDBCOIN_decimal_places
       1  SMDBCOIN_estado_atual
     108  SMDBCOIN_estado_bloqueado
      32  SMDBCOIN_estado_desabilitado
      44  SMDBCOIN_estado_offline
     160  SMDBCOIN_estado_reset
     194  SMDBCOIN_estado_supervisao
       1  SMDBCOIN_flag_bloqueio
      20  SMDBCOIN_func_table
       2  SMDBCOIN_lock_coin
       1  SMDBCOIN_scale_factor
       6  SMDBCOIN_set_flag_bloqueio
      24  SMDBCOIN_tick
      16  SMDBCOIN_verifica_net_status

 
  24 bytes in section .bss
  20 bytes in section .rodata
 616 bytes in section .text
 
 616 bytes of CODE  memory
  20 bytes of CONST memory
  24 bytes of DATA  memory

Errors: none
Warnings: none

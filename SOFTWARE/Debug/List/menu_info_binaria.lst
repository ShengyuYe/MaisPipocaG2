###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      12/Jul/2017  11:49:54 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\menu_info_binaria.c             #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\menu_info_binaria.c -lC         #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\menu_info_binaria.lst          #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\menu_info_binaria.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\menu_info_binaria.c
      1          /*__________________________________________________________________________________
      2          |	DEXTRO SOLUÇÕES TECNOLÓGICAS
      3          |       
      4          |       ITAJAÍ - SC
      5          |       www.dextro.ind.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by DEXTRO  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by DEXTRO 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da DEXTRO  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       DEXTRO  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  menu_info_binaria.c
     18          |       Descrição          :  módulo com o software de aplicação da máquina
     19          |                             de guarda-chuvas
     20          | 
     21          |       Autor              :  Marcos Aquino
     22          |       Data criação       :  07/11/2016
     23          |
     24          |       Revisões           :  1.0.0.0
     25          |
     26          |
     27          | __________________________________________________________________________________
     28          */
     29          
     30          /***********************************************************************************
     31          *       Includes
     32          ***********************************************************************************/
     33          #include <stdio.h>
     34          #include <stdlib.h>
     35          #include <string.h>
     36          #include "..\includes.h"
     37          
     38          /***********************************************************************************
     39          *       Definições locais
     40          ***********************************************************************************/
     41          
     42          
     43          /***********************************************************************************
     44          *       Constantes locais
     45          ***********************************************************************************/
     46          
     47          
     48          /***********************************************************************************
     49          *       Variaveis locais
     50          ***********************************************************************************/
     51          
     52          
     53          /***********************************************************************************
     54          *       Funções locais
     55          ***********************************************************************************/
     56          
     57          
     58          /***********************************************************************************
     59          *       Implementação das funções
     60          ***********************************************************************************/
     61          
     62          /***********************************************************************************
     63          *       Descrição       :       Exibe informações de uma função
     64          *                               binária no LCD
     65          *       Parametros      :       (char*) titulo
     66          *                               unsigned char(*)(void)
     67          *                               (char*) string para o valor ON
     68          *                               (char*) string para o valor OFF
     69          *       Retorno         :       nenhum
     70          ***********************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     71          void MIB_show(char* titulo,unsigned char(*func)(void),char*strON,char*strOFF){
   \                     MIB_show:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
     72            eTECLA tecla;
     73            char linha[17];
     74            unsigned char tam;
     75            
     76            HD44780_clearText();
   \   0000000C   0x200C             MOVS     R0,#+12
   \   0000000E   0x.... 0x....      BL       HD44780_writeChar
     77            HD44780_writeString(titulo);
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       HD44780_writeString
   \   00000018   0xE012             B.N      ??MIB_show_0
     78            
     79            for(;TECLADO_getContadorInatividade();){
     80              
     81              tecla = TECLADO_getch();
     82              switch(tecla){
     83                case TECLA_ENTER:
     84                case TECLA_ESC:
     85                     return;
     86              }
     87              
     88              if(func())
     89                sprintf(linha," [%s] ",strON);
     90              else
     91                sprintf(linha," [%s] ",strOFF);
   \                     ??MIB_show_1:
   \   0000001A   0x003A             MOVS     R2,R7
   \   0000001C   0x4914             LDR.N    R1,??MIB_show_2
   \   0000001E   0xA800             ADD      R0,SP,#+0
   \   00000020   0x.... 0x....      BL       sprintf
     92              
     93              tam = strlen(linha);
   \                     ??MIB_show_3:
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       strlen
     94              HD44780_posicionaTexto((16-tam)>>1,1);
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000032   0x1040             ASRS     R0,R0,#+1
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x.... 0x....      BL       HD44780_posicionaTexto
     95              HD44780_writeString(linha);    
   \   0000003A   0xA800             ADD      R0,SP,#+0
   \   0000003C   0x.... 0x....      BL       HD44780_writeString
   \                     ??MIB_show_0:
   \   00000040   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD010             BEQ.N    ??MIB_show_4
   \   00000048   0x.... 0x....      BL       TECLADO_getch
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD001             BEQ.N    ??MIB_show_5
   \   00000052   0x2804             CMP      R0,#+4
   \   00000054   0xD100             BNE.N    ??MIB_show_6
   \                     ??MIB_show_5:
   \   00000056   0xE008             B.N      ??MIB_show_7
   \                     ??MIB_show_6:
   \   00000058   0x47A8             BLX      R5
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD0DD             BEQ.N    ??MIB_show_1
   \   0000005E   0x0032             MOVS     R2,R6
   \   00000060   0x4903             LDR.N    R1,??MIB_show_2
   \   00000062   0xA800             ADD      R0,SP,#+0
   \   00000064   0x.... 0x....      BL       sprintf
   \   00000068   0xE7DC             B.N      ??MIB_show_3
     96            }    
     97          }
   \                     ??MIB_show_4:
   \                     ??MIB_show_7:
   \   0000006A   0xB005             ADD      SP,SP,#+20
   \   0000006C   0xBDF0             POP      {R4-R7,PC}       ;; return
   \   0000006E   0xBF00             Nop      
   \                     ??MIB_show_2:
   \   00000070   0x........         DC32     `?<Constant " [%s] ">`

   \                                 In section .rodata, align 4
   \                     `?<Constant " [%s] ">`:
   \   00000000   0x20 0x5B          DC8 " [%s] "
   \              0x25 0x73    
   \              0x5D 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0
     98          /***********************************************************************************
     99          *       Fim do arquivo
    100          ***********************************************************************************/
    101          
    102          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   MIB_show
        40   -- Indirect call
        40   -> HD44780_posicionaTexto
        40   -> HD44780_writeChar
        40   -> HD44780_writeString
        40   -> TECLADO_getContadorInatividade
        40   -> TECLADO_getch
        40   -> sprintf
        40   -> strlen


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant " [%s] ">
     116  MIB_show

 
   8 bytes in section .rodata
 116 bytes in section .text
 
 116 bytes of CODE  memory
   8 bytes of CONST memory

Errors: none
Warnings: none

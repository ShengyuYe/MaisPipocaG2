###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      20/Jul/2017  13:45:25 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\Pagamentos\BV20.c                 #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\Pagamentos\BV20.c -lC             #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\BV20.lst                       #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\BV20.o                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\Pagamentos\BV20.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  BV20.c
     18          |       Descrição          :  Biblioteca para controle dos meios de pagamento
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  22/02/2017
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *       Includes
     31          ***********************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include <string.h>
     35          #include "..\..\includes.h"
     36          
     37          /***********************************************************************************
     38          *       Definições
     39          ***********************************************************************************/
     40          #define END_NOTEIRO             40
     41          
     42          /***********************************************************************************
     43          *       Constantes
     44          ***********************************************************************************/

   \                                 In section .rodata, align 4
     45          const unsigned short int BV20_valor_canais[QTY_OF_LANGUAGES][7]={
   \                     BV20_valor_canais:
   \   00000000   0x0000 0x0002      DC16 0, 2, 5, 10, 20, 50, 100, 0, 2, 5, 10, 20, 50, 100, 0, 2, 5, 10
   \              0x0005 0x000A
   \              0x0014 0x0032
   \              0x0064 0x0000
   \              0x0002 0x0005
   \              0x000A 0x0014
   \              0x0032 0x0064
   \              0x0000 0x0002
   \              0x0005 0x000A
   \   00000024   0x0014 0x0032      DC16 20, 50, 100, 0, 2, 5, 10, 20, 50, 100, 0, 2, 5, 10, 20, 50, 100, 0
   \              0x0064 0x0000
   \              0x0002 0x0005
   \              0x000A 0x0014
   \              0x0032 0x0064
   \              0x0000 0x0002
   \              0x0005 0x000A
   \              0x0014 0x0032
   \              0x0064 0x0000
   \   00000048   0x0002 0x0005      DC16 2, 5, 10, 20, 50, 100, 0, 2, 5, 10, 20, 50, 100
   \              0x000A 0x0014
   \              0x0032 0x0064
   \              0x0000 0x0002
   \              0x0005 0x000A
   \              0x0014 0x0032
   \              0x0064       
   \   00000062   0x00 0x00          DC8 0, 0
     46            [BRASIL]    = {0,2,5,10,20,50,100},
     47            [URUGUAI]   = {0,2,5,10,20,50,100},
     48            [ARGENTINA] = {0,2,5,10,20,50,100},
     49            [PARAGUAI]  = {0,2,5,10,20,50,100},
     50            [PERU]      = {0,2,5,10,20,50,100},
     51            [EUA]       = {0,2,5,10,20,50,100},
     52            [CANADA]    = {0,2,5,10,20,50,100}
     53          };
     54          
     55          /***********************************************************************************
     56          *       Variaveis locais
     57          ***********************************************************************************/

   \                                 In section .bss, align 1
     58          unsigned char BV20_regiao=BRASIL;
   \                     BV20_regiao:
   \   00000000                      DS8 1

   \                                 In section .data, align 2
     59          unsigned short int BV20_ultima_quantidade_eventos=0xFFFF;
   \                     BV20_ultima_quantidade_eventos:
   \   00000000   0xFFFF             DC16 65535

   \                                 In section .bss, align 1
     60          unsigned char BV20_quantidade_eventos=0;
   \                     BV20_quantidade_eventos:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     61          xSemaphoreHandle BV20_sem_acumulador_dinheiro;
   \                     BV20_sem_acumulador_dinheiro:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     62          xQueueHandle BV20_fila_sinais;
   \                     BV20_fila_sinais:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     63          unsigned short int BV20_valor_acumulado=0;
   \                     BV20_valor_acumulado:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     64          CCTALK_BILL_EVENTS BV20_ultimo_evento;
   \                     BV20_ultimo_evento:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     65          eBV20_state estado_atual=BV20_INICIALIZACAO;
   \                     estado_atual:
   \   00000000   0x02               DC8 2

   \                                 In section .data, align 1
     66          eBV20_state BV20_mensagemExterna=BV20_SEM_EVENTO;
   \                     BV20_mensagemExterna:
   \   00000000   0x06               DC8 6
     67          
     68          /***********************************************************************************
     69          *       Funções locais
     70          ***********************************************************************************/
     71          unsigned char BV20_inicializNoteiro(void);
     72          
     73          eBV20_state BV20_bloqueado(eBV20_state estado);
     74          eBV20_state BV20_offline_bloqueado(eBV20_state estado);
     75          eBV20_state BV20_estado_inicializacao(eBV20_state estado);
     76          eBV20_state BV20_estado_offline(eBV20_state estado);
     77          eBV20_state BV20_estado_le_evento(eBV20_state estado);
     78          eBV20_state BV20_estado_supervisao(eBV20_state estado);
     79          void BV20_decodifica_eventos(unsigned short int evento);
     80          void BV20_decodifica_eventos(unsigned short int evento);
     81          eBV20_state BV20_estado_bloqueio(eBV20_state estado);
     82          
     83          /***********************************************************************************
     84          *       Tabela de funções
     85          ***********************************************************************************/

   \                                 In section .data, align 4
     86          eBV20_state(*BV20_func[])(eBV20_state)={
   \                     BV20_func:
   \   00000000   0x........         DC32 BV20_estado_bloqueio, BV20_estado_inicializacao
   \              0x........   
   \   00000008   0x........         DC32 BV20_estado_inicializacao, BV20_estado_offline
   \              0x........   
   \   00000010   0x........         DC32 BV20_estado_supervisao, BV20_estado_le_evento
   \              0x........   
     87            BV20_estado_bloqueio,
     88            BV20_estado_inicializacao,
     89            BV20_estado_inicializacao,
     90            BV20_estado_offline,
     91            BV20_estado_supervisao,
     92            BV20_estado_le_evento
     93          };
     94          
     95          /***********************************************************************************
     96          *       Implementação das funções
     97          ***********************************************************************************/
     98          
     99          /***********************************************************************************
    100          *       Descrição       :       Função principal do módulo
    101          *       Parametros      :       nenhum
    102          *       Retorno         :       nenhum
    103          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    104          void BV20_main(void*pPar){  
   \                     BV20_main:
   \   00000000   0xB580             PUSH     {R7,LR}
    105            
    106            vTaskDelay(3000);
   \   00000002   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000006   0x.... 0x....      BL       vTaskDelay
    107            BV20_ini();
   \   0000000A   0x.... 0x....      BL       BV20_ini
    108            
    109            for(;;){
    110                if(BV20_mensagemExterna==BV20_BLOQUEADO || BV20_mensagemExterna==BV20_INICIALIZACAO){
   \                     ??BV20_main_0:
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD004             BEQ.N    ??BV20_main_1
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2802             CMP      R0,#+2
   \   00000020   0xD109             BNE.N    ??BV20_main_2
    111                  estado_atual = BV20_mensagemExterna;
   \                     ??BV20_main_1:
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000002A   0x7809             LDRB     R1,[R1, #+0]
   \   0000002C   0x7001             STRB     R1,[R0, #+0]
    112                  BV20_mensagemExterna = BV20_SEM_EVENTO;
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000032   0x2106             MOVS     R1,#+6
   \   00000034   0x7001             STRB     R1,[R0, #+0]
    113                  
    114                }
    115                estado_atual = BV20_func[estado_atual](estado_atual);
   \                     ??BV20_main_2:
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   00000040   0x7809             LDRB     R1,[R1, #+0]
   \   00000042   0x.... 0x....      LDR.W    R2,??DataTable9_2
   \   00000046   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   0000004A   0x4788             BLX      R1
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    116                vTaskDelay(50);
   \   00000052   0x2032             MOVS     R0,#+50
   \   00000054   0x.... 0x....      BL       vTaskDelay
   \   00000058   0xE7D9             B.N      ??BV20_main_0
    117            }    
    118          }
    119          /***********************************************************************************
    120          *       Descrição       :       Inicialização do módulo
    121          *       Parametros      :       nenhum
    122          *       Retorno         :       nenhum
    123          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    124          void BV20_ini(void){
   \                     BV20_ini:
   \   00000000   0xB580             PUSH     {R7,LR}
    125            
    126            vSemaphoreCreateBinary(BV20_sem_acumulador_dinheiro);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      BL       xQueueCreate
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable9_3
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD007             BEQ.N    ??BV20_ini_0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x.... 0x....      BL       xQueueGenericSend
    127            BV20_fila_sinais = xQueueCreate(3,sizeof(sSINAL_PAGAMENTO));  
   \                     ??BV20_ini_0:
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x.... 0x....      BL       xQueueCreate
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   00000036   0x6008             STR      R0,[R1, #+0]
    128            BV20_regiao = APLICACAO_carrega_idioma();  
   \   00000038   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable9_5
   \   00000040   0x7008             STRB     R0,[R1, #+0]
    129          }
   \   00000042   0xBD01             POP      {R0,PC}          ;; return
    130          /***********************************************************************************
    131          *       Descrição       :       Faz a inicialização do noteiro
    132          *       Parametros      :       nenhum
    133          *       Retorno         :       (unsigned char) maior do que zero
    134          *                                               se conseguiu inicializar
    135          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    136          unsigned char BV20_inicializNoteiro(void){
   \                     BV20_inicializNoteiro:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    137            unsigned char canais=0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0xF88D 0x0000      STRB     R0,[SP, #+0]
    138            unsigned char quantidadeEventos;
    139            unsigned short int eventos[7];
    140            
    141            PARAMETROS_le(ADR_NOTAS,(void*)&canais);
   \   0000000A   0xA900             ADD      R1,SP,#+0
   \   0000000C   0x2002             MOVS     R0,#+2
   \   0000000E   0x.... 0x....      BL       PARAMETROS_le
    142            
    143            unsigned short int tentativas=3;
   \   00000012   0x2403             MOVS     R4,#+3
    144            unsigned char flag;
    145            
    146            do flag = CCTALK_leFilaEventos(END_NOTEIRO,&quantidadeEventos,eventos);
   \                     ??BV20_inicializNoteiro_0:
   \   00000014   0xAA01             ADD      R2,SP,#+4
   \   00000016   0xF10D 0x0101      ADD      R1,SP,#+1
   \   0000001A   0x2028             MOVS     R0,#+40
   \   0000001C   0x.... 0x....      BL       CCTALK_leFilaEventos
    147            while(!flag && tentativas--);
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD104             BNE.N    ??BV20_inicializNoteiro_1
   \   00000026   0x0021             MOVS     R1,R4
   \   00000028   0x1E4C             SUBS     R4,R1,#+1
   \   0000002A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD1F1             BNE.N    ??BV20_inicializNoteiro_0
    148            
    149            if(!flag)
   \                     ??BV20_inicializNoteiro_1:
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD101             BNE.N    ??BV20_inicializNoteiro_2
    150              return 0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0xE026             B.N      ??BV20_inicializNoteiro_3
    151            
    152            tentativas=3;
   \                     ??BV20_inicializNoteiro_2:
   \   0000003A   0x2403             MOVS     R4,#+3
    153            do flag = CCTALK_setBitsHabilitacaoCanal(END_NOTEIRO,canais);
   \                     ??BV20_inicializNoteiro_4:
   \   0000003C   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000040   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000042   0x2028             MOVS     R0,#+40
   \   00000044   0x.... 0x....      BL       CCTALK_setBitsHabilitacaoCanal
    154            while(!flag && tentativas--);
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD104             BNE.N    ??BV20_inicializNoteiro_5
   \   0000004E   0x0021             MOVS     R1,R4
   \   00000050   0x1E4C             SUBS     R4,R1,#+1
   \   00000052   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000054   0x2900             CMP      R1,#+0
   \   00000056   0xD1F1             BNE.N    ??BV20_inicializNoteiro_4
    155            
    156            if(!flag)
   \                     ??BV20_inicializNoteiro_5:
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD101             BNE.N    ??BV20_inicializNoteiro_6
    157              return 0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0xE012             B.N      ??BV20_inicializNoteiro_3
    158            
    159            tentativas=3;
   \                     ??BV20_inicializNoteiro_6:
   \   00000062   0x2403             MOVS     R4,#+3
    160            do flag = CCTALK_setFlagHabilitacaoGeral(END_NOTEIRO,255);
   \                     ??BV20_inicializNoteiro_7:
   \   00000064   0x21FF             MOVS     R1,#+255
   \   00000066   0x2028             MOVS     R0,#+40
   \   00000068   0x.... 0x....      BL       CCTALK_setFlagHabilitacaoGeral
    161            while(!flag && tentativas--);
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD104             BNE.N    ??BV20_inicializNoteiro_8
   \   00000072   0x0021             MOVS     R1,R4
   \   00000074   0x1E4C             SUBS     R4,R1,#+1
   \   00000076   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000078   0x2900             CMP      R1,#+0
   \   0000007A   0xD1F3             BNE.N    ??BV20_inicializNoteiro_7
    162            
    163            if(!flag)
   \                     ??BV20_inicializNoteiro_8:
   \   0000007C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD101             BNE.N    ??BV20_inicializNoteiro_9
    164              return 0;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0xE000             B.N      ??BV20_inicializNoteiro_3
    165              
    166            return 255;  
   \                     ??BV20_inicializNoteiro_9:
   \   00000086   0x20FF             MOVS     R0,#+255
   \                     ??BV20_inicializNoteiro_3:
   \   00000088   0xB006             ADD      SP,SP,#+24
   \   0000008A   0xBD10             POP      {R4,PC}          ;; return
    167          }
    168          /***********************************************************************************
    169          *       Descrição       :       Função para o testado onde o noteiro está
    170          *                               bloqueado
    171          *       Parametros      :       (eBV20_state) estado
    172          *       Retorno         :       (eBV20_state) novo estado
    173          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    174          eBV20_state BV20_bloqueado(eBV20_state estado){
    175            
    176            
    177            return estado;
   \                     BV20_bloqueado:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x4770             BX       LR               ;; return
    178          }
    179          /***********************************************************************************
    180          *       Descrição       :       Função para o estado em que o noteiro está
    181          *                               bloqueado e offline
    182          *       Parametros      :       (eBV20_state) estado
    183          *       Retorno         :       (eBV20_state) novo estado
    184          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    185          eBV20_state BV20_offline_bloqueado(eBV20_state estado){
    186            
    187            
    188            return estado;
   \                     BV20_offline_bloqueado:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x4770             BX       LR               ;; return
    189          }
    190          /***********************************************************************************
    191          *       Descrição       :       Função do estado onde ocorre a inicialização
    192          *                               do noteiro BV20
    193          *       Parametros      :       (eBV20_state) estado_atual
    194          *       Retorno         :       (eBV20_state) novo estado
    195          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    196          eBV20_state BV20_estado_inicializacao(eBV20_state estado){
   \                     BV20_estado_inicializacao:
   \   00000000   0xB580             PUSH     {R7,LR}
    197            
    198            if(BV20_inicializNoteiro()){
   \   00000002   0x.... 0x....      BL       BV20_inicializNoteiro
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD001             BEQ.N    ??BV20_estado_inicializacao_0
    199              return BV20_SUPERVISAO;
   \   0000000A   0x2004             MOVS     R0,#+4
   \   0000000C   0xE000             B.N      ??BV20_estado_inicializacao_1
    200            }
    201            
    202            return BV20_OFFLINE;
   \                     ??BV20_estado_inicializacao_0:
   \   0000000E   0x2003             MOVS     R0,#+3
   \                     ??BV20_estado_inicializacao_1:
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
    203          }
    204          /***********************************************************************************
    205          *       Descrição       :       Função para o estado em que o noteiro
    206          *                               está offline
    207          *       Parametros      :       (eBV20_state) estado atual
    208          *       Retorno         :       (eBV20_state) novo estado
    209          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    210          eBV20_state BV20_estado_offline(eBV20_state estado){
    211            
    212            
    213            return estado;
   \                     BV20_estado_offline:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x4770             BX       LR               ;; return
    214          }
    215          /***********************************************************************************
    216          *       Descrição       :       Função em que trata o evento 
    217          *                               de supervisão
    218          *       Parametros      :       (eBV20_state) estado atual
    219          *       Retorno         :       (eBV20_state) novo estado
    220          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    221          eBV20_state BV20_estado_supervisao(eBV20_state estado){
   \                     BV20_estado_supervisao:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
    222            unsigned short int eventos[5];
    223            static unsigned char contador_ciclos=10;
    224            
    225            if(CCTALK_leFilaEventos(END_NOTEIRO,&BV20_quantidade_eventos,eventos)){    
   \   00000006   0xAA00             ADD      R2,SP,#+0
   \   00000008   0x....             LDR.N    R1,??DataTable9_6
   \   0000000A   0x2028             MOVS     R0,#+40
   \   0000000C   0x.... 0x....      BL       CCTALK_leFilaEventos
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD00D             BEQ.N    ??BV20_estado_supervisao_0
    226              contador_ciclos=10;
   \   00000014   0x....             LDR.N    R0,??DataTable9_7
   \   00000016   0x210A             MOVS     R1,#+10
   \   00000018   0x7001             STRB     R1,[R0, #+0]
    227              if(BV20_quantidade_eventos!=BV20_ultima_quantidade_eventos)
   \   0000001A   0x....             LDR.N    R0,??DataTable9_6
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x....             LDR.N    R1,??DataTable9_8
   \   00000020   0x8809             LDRH     R1,[R1, #+0]
   \   00000022   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000024   0x4288             CMP      R0,R1
   \   00000026   0xD001             BEQ.N    ??BV20_estado_supervisao_1
    228                estado = BV20_LE_EVENTO;
   \   00000028   0x2405             MOVS     R4,#+5
   \   0000002A   0xE00C             B.N      ??BV20_estado_supervisao_2
    229              else
    230                estado = BV20_SUPERVISAO;    
   \                     ??BV20_estado_supervisao_1:
   \   0000002C   0x2404             MOVS     R4,#+4
   \   0000002E   0xE00A             B.N      ??BV20_estado_supervisao_2
    231            }
    232            else{
    233              // Se não receber resposta
    234              // 10 vezes, considera o noteiro
    235              // OFFLINE
    236              if(contador_ciclos)
   \                     ??BV20_estado_supervisao_0:
   \   00000030   0x....             LDR.N    R0,??DataTable9_7
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD005             BEQ.N    ??BV20_estado_supervisao_3
    237                contador_ciclos--;
   \   00000038   0x....             LDR.N    R0,??DataTable9_7
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x1E40             SUBS     R0,R0,#+1
   \   0000003E   0x....             LDR.N    R1,??DataTable9_7
   \   00000040   0x7008             STRB     R0,[R1, #+0]
   \   00000042   0xE000             B.N      ??BV20_estado_supervisao_2
    238              else
    239                estado = BV20_OFFLINE;    
   \                     ??BV20_estado_supervisao_3:
   \   00000044   0x2403             MOVS     R4,#+3
    240            }
    241            
    242            return estado;
   \                     ??BV20_estado_supervisao_2:
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0xB004             ADD      SP,SP,#+16
   \   0000004C   0xBD10             POP      {R4,PC}          ;; return
    243          }

   \                                 In section .data, align 1
   \                     ??contador_ciclos:
   \   00000000   0x0A               DC8 10
    244          /***********************************************************************************
    245          *       Descrição       :       Função para o estado em que é iniciada 
    246          *                               a supervisão da fila de eventos
    247          *                               do BV20
    248          *       Parametros      :       (eBV20_state) estado atual
    249          *       Retorno         :       (eBV20_state) novo estado
    250          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    251          eBV20_state BV20_estado_le_evento(eBV20_state estado){
   \                     BV20_estado_le_evento:
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
    252            unsigned short int eventos[5];
    253            unsigned char tentativas=5;
   \   00000002   0x2405             MOVS     R4,#+5
    254            unsigned char flag;
    255            
    256            do flag = CCTALK_leFilaEventos(END_NOTEIRO,&BV20_quantidade_eventos,eventos);
   \                     ??BV20_estado_le_evento_0:
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable9_6
   \   00000008   0x2028             MOVS     R0,#+40
   \   0000000A   0x.... 0x....      BL       CCTALK_leFilaEventos
    257            while(!flag && --tentativas);
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD104             BNE.N    ??BV20_estado_le_evento_1
   \   00000014   0x1E64             SUBS     R4,R4,#+1
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD1F2             BNE.N    ??BV20_estado_le_evento_0
    258              
    259            if(!tentativas)
   \                     ??BV20_estado_le_evento_1:
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2C00             CMP      R4,#+0
   \   00000022   0xD101             BNE.N    ??BV20_estado_le_evento_2
    260              return BV20_OFFLINE;
   \   00000024   0x2003             MOVS     R0,#+3
   \   00000026   0xE031             B.N      ??BV20_estado_le_evento_3
    261              
    262            if(BV20_quantidade_eventos!=BV20_ultima_quantidade_eventos){
   \                     ??BV20_estado_le_evento_2:
   \   00000028   0x....             LDR.N    R0,??DataTable9_6
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x....             LDR.N    R1,??DataTable9_8
   \   0000002E   0x8809             LDRH     R1,[R1, #+0]
   \   00000030   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xD029             BEQ.N    ??BV20_estado_le_evento_4
    263              
    264              unsigned short int diferenca;
    265              if(BV20_quantidade_eventos>BV20_ultima_quantidade_eventos)
   \   00000036   0x....             LDR.N    R0,??DataTable9_8
   \   00000038   0x8800             LDRH     R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable9_6
   \   0000003C   0x7809             LDRB     R1,[R1, #+0]
   \   0000003E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000040   0x4288             CMP      R0,R1
   \   00000042   0xD205             BCS.N    ??BV20_estado_le_evento_5
    266                diferenca = BV20_quantidade_eventos - BV20_ultima_quantidade_eventos;
   \   00000044   0x....             LDR.N    R0,??DataTable9_6
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x....             LDR.N    R1,??DataTable9_8
   \   0000004A   0x8809             LDRH     R1,[R1, #+0]
   \   0000004C   0x1A44             SUBS     R4,R0,R1
   \   0000004E   0xE006             B.N      ??BV20_estado_le_evento_6
    267              else
    268                diferenca = (255 - BV20_ultima_quantidade_eventos) + BV20_quantidade_eventos;
   \                     ??BV20_estado_le_evento_5:
   \   00000050   0x....             LDR.N    R0,??DataTable9_8
   \   00000052   0x8800             LDRH     R0,[R0, #+0]
   \   00000054   0xF1D0 0x00FF      RSBS     R0,R0,#+255
   \   00000058   0x....             LDR.N    R1,??DataTable9_6
   \   0000005A   0x7809             LDRB     R1,[R1, #+0]
   \   0000005C   0x180C             ADDS     R4,R1,R0
    269          
    270              for(unsigned char i=0;i<diferenca && i<5;i++)      
   \                     ??BV20_estado_le_evento_6:
   \   0000005E   0x2500             MOVS     R5,#+0
   \   00000060   0xE006             B.N      ??BV20_estado_le_evento_7
    271                BV20_decodifica_eventos(eventos[i]);    
   \                     ??BV20_estado_le_evento_8:
   \   00000062   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000064   0xA800             ADD      R0,SP,#+0
   \   00000066   0xF830 0x0015      LDRH     R0,[R0, R5, LSL #+1]
   \   0000006A   0x.... 0x....      BL       BV20_decodifica_eventos
   \   0000006E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??BV20_estado_le_evento_7:
   \   00000070   0x0028             MOVS     R0,R5
   \   00000072   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000074   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000076   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000078   0x42A0             CMP      R0,R4
   \   0000007A   0xD202             BCS.N    ??BV20_estado_le_evento_9
   \   0000007C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007E   0x2D05             CMP      R5,#+5
   \   00000080   0xDBEF             BLT.N    ??BV20_estado_le_evento_8
    272              
    273              BV20_ultima_quantidade_eventos = BV20_quantidade_eventos;    
   \                     ??BV20_estado_le_evento_9:
   \   00000082   0x....             LDR.N    R0,??DataTable9_8
   \   00000084   0x....             LDR.N    R1,??DataTable9_6
   \   00000086   0x7809             LDRB     R1,[R1, #+0]
   \   00000088   0x8001             STRH     R1,[R0, #+0]
    274            }
    275            
    276            return BV20_SUPERVISAO;
   \                     ??BV20_estado_le_evento_4:
   \   0000008A   0x2004             MOVS     R0,#+4
   \                     ??BV20_estado_le_evento_3:
   \   0000008C   0xBD3E             POP      {R1-R5,PC}       ;; return
    277          }
    278          /***********************************************************************************
    279          *       Descrição       :       Decodifica os eventos do BV20
    280          *       Parametros      :       (unsigned short int) evento
    281          *       Retorno         :       nenhum
    282          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    283          void BV20_decodifica_eventos(unsigned short int evento){
   \                     BV20_decodifica_eventos:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    284            static unsigned short int valorGolpe = 100;
    285            static CCTALK_BILL_EVENTS last_evento;
    286            unsigned char i;
    287            
    288            switch(evento>>8){
   \   00000004   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000006   0x0A20             LSRS     R0,R4,#+8
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD01D             BEQ.N    ??BV20_decodifica_eventos_0
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0xD01C             BEQ.N    ??BV20_decodifica_eventos_1
   \   00000012   0x1E40             SUBS     R0,R0,#+1
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD959             BLS.N    ??BV20_decodifica_eventos_2
   \   00000018   0x1E80             SUBS     R0,R0,#+2
   \   0000001A   0xF000 0x8080      BEQ.W    ??BV20_decodifica_eventos_3
   \   0000001E   0x1E40             SUBS     R0,R0,#+1
   \   00000020   0xF000 0x809F      BEQ.W    ??BV20_decodifica_eventos_4
   \   00000024   0x1E40             SUBS     R0,R0,#+1
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xF240 0x809C      BLS.W    ??BV20_decodifica_eventos_5
   \   0000002C   0x1E80             SUBS     R0,R0,#+2
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD975             BLS.N    ??BV20_decodifica_eventos_3
   \   00000032   0x1EC0             SUBS     R0,R0,#+3
   \   00000034   0x2804             CMP      R0,#+4
   \   00000036   0xF240 0x8095      BLS.W    ??BV20_decodifica_eventos_5
   \   0000003A   0x1F40             SUBS     R0,R0,#+5
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD96E             BLS.N    ??BV20_decodifica_eventos_3
   \   00000040   0x1E80             SUBS     R0,R0,#+2
   \   00000042   0x2803             CMP      R0,#+3
   \   00000044   0xF240 0x808E      BLS.W    ??BV20_decodifica_eventos_5
   \   00000048   0xE08C             B.N      ??BV20_decodifica_eventos_6
    289              case BILL_VALIDATED_OK:       
    290                   break;
   \                     ??BV20_decodifica_eventos_0:
   \   0000004A   0xE08B             B.N      ??BV20_decodifica_eventos_6
    291              case BILL_VALIDATED_OK_AND_SCROW:                         
    292                        {
    293                            unsigned char tentativas=10;
   \                     ??BV20_decodifica_eventos_1:
   \   0000004C   0x260A             MOVS     R6,#+10
    294                            unsigned char flag;
    295                            i = 0;
   \   0000004E   0x2500             MOVS     R5,#+0
    296                          
    297                            do flag = CCTALK_rotacionaValidador(END_NOTEIRO);
   \                     ??BV20_decodifica_eventos_7:
   \   00000050   0x2028             MOVS     R0,#+40
   \   00000052   0x.... 0x....      BL       CCTALK_rotacionaValidador
    298                            while(!flag && tentativas--);
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xD104             BNE.N    ??BV20_decodifica_eventos_8
   \   0000005C   0x0031             MOVS     R1,R6
   \   0000005E   0x1E4E             SUBS     R6,R1,#+1
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x2900             CMP      R1,#+0
   \   00000064   0xD1F4             BNE.N    ??BV20_decodifica_eventos_7
    299                          
    300                            if(flag){                                                                 
   \                     ??BV20_decodifica_eventos_8:
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD02A             BEQ.N    ??BV20_decodifica_eventos_9
    301                              while(!xSemaphoreTake(BV20_sem_acumulador_dinheiro,portTICK_RATE_MS*1));  
   \                     ??BV20_decodifica_eventos_10:
   \   0000006C   0x2300             MOVS     R3,#+0
   \   0000006E   0x2201             MOVS     R2,#+1
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x....             LDR.N    R0,??DataTable9_3
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x.... 0x....      BL       xQueueGenericReceive
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD0F6             BEQ.N    ??BV20_decodifica_eventos_10
    302                              
    303                              BV20_valor_acumulado += BV20_valor_canais[BV20_regiao][evento&0xFF];    
   \   0000007E   0x....             LDR.N    R0,??DataTable9_9
   \   00000080   0x8800             LDRH     R0,[R0, #+0]
   \   00000082   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000084   0xB2E1             UXTB     R1,R4            ;; ZeroExt  R1,R4,#+24,#+24
   \   00000086   0x....             LDR.N    R2,??DataTable9_5
   \   00000088   0x7812             LDRB     R2,[R2, #+0]
   \   0000008A   0x230E             MOVS     R3,#+14
   \   0000008C   0x....             LDR.N    R6,??DataTable9_10
   \   0000008E   0xFB03 0x6202      MLA      R2,R3,R2,R6
   \   00000092   0xF832 0x1011      LDRH     R1,[R2, R1, LSL #+1]
   \   00000096   0x1808             ADDS     R0,R1,R0
   \   00000098   0x....             LDR.N    R1,??DataTable9_9
   \   0000009A   0x8008             STRH     R0,[R1, #+0]
    304                              valorGolpe = BV20_valor_canais[BV20_regiao][evento&0xFF];    
   \   0000009C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000009E   0xB2E0             UXTB     R0,R4            ;; ZeroExt  R0,R4,#+24,#+24
   \   000000A0   0x....             LDR.N    R1,??DataTable9_5
   \   000000A2   0x7809             LDRB     R1,[R1, #+0]
   \   000000A4   0x220E             MOVS     R2,#+14
   \   000000A6   0x....             LDR.N    R3,??DataTable9_10
   \   000000A8   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   000000AC   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   000000B0   0x....             LDR.N    R1,??DataTable9_11
   \   000000B2   0x8008             STRH     R0,[R1, #+0]
    305                              
    306                              xSemaphoreGive(BV20_sem_acumulador_dinheiro); 
   \   000000B4   0x2300             MOVS     R3,#+0
   \   000000B6   0x2200             MOVS     R2,#+0
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x....             LDR.N    R0,??DataTable9_3
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x.... 0x....      BL       xQueueGenericSend
    307                            }
    308                            
    309                            i++;
   \                     ??BV20_decodifica_eventos_9:
   \   000000C2   0x1C6D             ADDS     R5,R5,#+1
    310                            vTaskDelay(200);
   \   000000C4   0x20C8             MOVS     R0,#+200
   \   000000C6   0x.... 0x....      BL       vTaskDelay
    311                         }
    312                   break;            
   \   000000CA   0xE04B             B.N      ??BV20_decodifica_eventos_6
    313              case MASTER_INHIBIT_ACTIVE:
    314              case BILL_RETURNED_FROM_ESCROW:               
    315                   if(last_evento==BILL_VALIDATED_OK_AND_SCROW){
   \                     ??BV20_decodifica_eventos_2:
   \   000000CC   0x....             LDR.N    R0,??DataTable9_12
   \   000000CE   0x7800             LDRB     R0,[R0, #+0]
   \   000000D0   0x2801             CMP      R0,#+1
   \   000000D2   0xD123             BNE.N    ??BV20_decodifica_eventos_11
    316                   
    317                       while(!xSemaphoreTake(BV20_sem_acumulador_dinheiro,portTICK_RATE_MS*1));      
   \                     ??BV20_decodifica_eventos_12:
   \   000000D4   0x2300             MOVS     R3,#+0
   \   000000D6   0x2201             MOVS     R2,#+1
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x....             LDR.N    R0,??DataTable9_3
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x.... 0x....      BL       xQueueGenericReceive
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xD0F6             BEQ.N    ??BV20_decodifica_eventos_12
    318                              
    319                       if(BV20_valor_acumulado>=valorGolpe) 
   \   000000E6   0x....             LDR.N    R0,??DataTable9_9
   \   000000E8   0x8800             LDRH     R0,[R0, #+0]
   \   000000EA   0x....             LDR.N    R1,??DataTable9_11
   \   000000EC   0x8809             LDRH     R1,[R1, #+0]
   \   000000EE   0x4288             CMP      R0,R1
   \   000000F0   0xD307             BCC.N    ??BV20_decodifica_eventos_13
    320                         BV20_valor_acumulado -= valorGolpe;
   \   000000F2   0x....             LDR.N    R0,??DataTable9_9
   \   000000F4   0x8800             LDRH     R0,[R0, #+0]
   \   000000F6   0x....             LDR.N    R1,??DataTable9_11
   \   000000F8   0x8809             LDRH     R1,[R1, #+0]
   \   000000FA   0x1A40             SUBS     R0,R0,R1
   \   000000FC   0x....             LDR.N    R1,??DataTable9_9
   \   000000FE   0x8008             STRH     R0,[R1, #+0]
   \   00000100   0xE002             B.N      ??BV20_decodifica_eventos_14
    321                       else
    322                         BV20_valor_acumulado = 0;
   \                     ??BV20_decodifica_eventos_13:
   \   00000102   0x....             LDR.N    R0,??DataTable9_9
   \   00000104   0x2100             MOVS     R1,#+0
   \   00000106   0x8001             STRH     R1,[R0, #+0]
    323                           
    324                       xSemaphoreGive(BV20_sem_acumulador_dinheiro);                  
   \                     ??BV20_decodifica_eventos_14:
   \   00000108   0x2300             MOVS     R3,#+0
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0x2100             MOVS     R1,#+0
   \   0000010E   0x....             LDR.N    R0,??DataTable9_3
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x.... 0x....      BL       xQueueGenericSend
    325                       valorGolpe = 0;                                               
   \   00000116   0x....             LDR.N    R0,??DataTable9_11
   \   00000118   0x2100             MOVS     R1,#+0
   \   0000011A   0x8001             STRH     R1,[R0, #+0]
    326                                                               
    327                   }
    328                   break;
   \                     ??BV20_decodifica_eventos_11:
   \   0000011C   0xE022             B.N      ??BV20_decodifica_eventos_6
    329              case BILL_JAMMED_IN_TRANSPORT:           
    330              case BILL_JAMMED_IN_BACKWARDS:                   
    331              case BILL_TAMPER:                                   
    332              case INVALID_BILL_VALIDATION:            
    333              case BILL_JAMMED_IN_TRANSPORT_SAFE:            
    334              case OPTO_FRAUD_DETECTED:            
    335                   last_evento = UNKNOWN_BILL_TYPE_STACKED;
   \                     ??BV20_decodifica_eventos_3:
   \   0000011E   0x....             LDR.N    R0,??DataTable9_12
   \   00000120   0x2115             MOVS     R1,#+21
   \   00000122   0x7001             STRB     R1,[R0, #+0]
    336                   {
    337                     while(!xSemaphoreTake(BV20_sem_acumulador_dinheiro,portTICK_RATE_MS*1));   
   \                     ??BV20_decodifica_eventos_15:
   \   00000124   0x2300             MOVS     R3,#+0
   \   00000126   0x2201             MOVS     R2,#+1
   \   00000128   0x2100             MOVS     R1,#+0
   \   0000012A   0x....             LDR.N    R0,??DataTable9_3
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x.... 0x....      BL       xQueueGenericReceive
   \   00000132   0x2800             CMP      R0,#+0
   \   00000134   0xD0F6             BEQ.N    ??BV20_decodifica_eventos_15
    338                            
    339                     if(BV20_valor_acumulado) 
   \   00000136   0x....             LDR.N    R0,??DataTable9_9
   \   00000138   0x8800             LDRH     R0,[R0, #+0]
   \   0000013A   0x2800             CMP      R0,#+0
   \   0000013C   0xD006             BEQ.N    ??BV20_decodifica_eventos_16
    340                       BV20_valor_acumulado -= valorGolpe;
   \   0000013E   0x....             LDR.N    R0,??DataTable9_9
   \   00000140   0x8800             LDRH     R0,[R0, #+0]
   \   00000142   0x....             LDR.N    R1,??DataTable9_11
   \   00000144   0x8809             LDRH     R1,[R1, #+0]
   \   00000146   0x1A40             SUBS     R0,R0,R1
   \   00000148   0x....             LDR.N    R1,??DataTable9_9
   \   0000014A   0x8008             STRH     R0,[R1, #+0]
    341                            
    342                     xSemaphoreGive(BV20_sem_acumulador_dinheiro);                  
   \                     ??BV20_decodifica_eventos_16:
   \   0000014C   0x2300             MOVS     R3,#+0
   \   0000014E   0x2200             MOVS     R2,#+0
   \   00000150   0x2100             MOVS     R1,#+0
   \   00000152   0x....             LDR.N    R0,??DataTable9_3
   \   00000154   0x6800             LDR      R0,[R0, #+0]
   \   00000156   0x.... 0x....      BL       xQueueGenericSend
    343                     valorGolpe = 0;                  
   \   0000015A   0x....             LDR.N    R0,??DataTable9_11
   \   0000015C   0x2100             MOVS     R1,#+0
   \   0000015E   0x8001             STRH     R1,[R0, #+0]
    344                   } 
    345                   break;
   \   00000160   0xE000             B.N      ??BV20_decodifica_eventos_6
    346              case INVALID_BILL_TRANSPORTATION:
    347                   break;
   \                     ??BV20_decodifica_eventos_4:
   \   00000162   0xE7FF             B.N      ??BV20_decodifica_eventos_6
    348              case INHIBIT_BILL_SERIAL:
    349              case INHIBIT_BILL_DIPSWITCH:
    350              case STACKER_OK: 
    351              case STACKER_INVERTED:   
    352              case STACKER_FAULTY:     
    353              case STACKER_FULL:   
    354              case STACKER_JAMMED:
    355              case STRING_FRAUD_DETECTED:
    356              case ANTI_STRING_MECHANISM_FAULTY: 
    357              case BARCODE_DETECTED:
    358              case UNKNOWN_BILL_TYPE_STACKED:
    359                   break;            
    360            }        
    361            
    362            last_evento = (CCTALK_BILL_EVENTS)(evento>>8);
   \                     ??BV20_decodifica_eventos_5:
   \                     ??BV20_decodifica_eventos_6:
   \   00000164   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000166   0x0A20             LSRS     R0,R4,#+8
   \   00000168   0x....             LDR.N    R1,??DataTable9_12
   \   0000016A   0x7008             STRB     R0,[R1, #+0]
    363            BV20_ultimo_evento = last_evento;
   \   0000016C   0x....             LDR.N    R0,??DataTable9_13
   \   0000016E   0x....             LDR.N    R1,??DataTable9_12
   \   00000170   0x7809             LDRB     R1,[R1, #+0]
   \   00000172   0x7001             STRB     R1,[R0, #+0]
    364          }
   \   00000174   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .data, align 2
   \                     ??valorGolpe:
   \   00000000   0x0064             DC16 100

   \                                 In section .bss, align 1
   \                     ??last_evento:
   \   00000000                      DS8 1
    365          /***********************************************************************************
    366          *       Descrição       :       Lê o valor acumulado de moeda
    367          *       Parametros      :       nenhum
    368          *       Retorno         :       (unsigned short int) valor acumulado
    369          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    370          unsigned short int BV20_get_valor_acumulador(void){
   \                     BV20_get_valor_acumulador:
   \   00000000   0xB510             PUSH     {R4,LR}
    371             unsigned short int valor=0;
   \   00000002   0x2400             MOVS     R4,#+0
    372            
    373             while(!xSemaphoreTake(BV20_sem_acumulador_dinheiro,portTICK_RATE_MS*1));     
   \                     ??BV20_get_valor_acumulador_0:
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x....             LDR.N    R0,??DataTable9_3
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       xQueueGenericReceive
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD0F6             BEQ.N    ??BV20_get_valor_acumulador_0
    374            
    375             valor = BV20_valor_acumulado;
   \   00000016   0x....             LDR.N    R0,??DataTable9_9
   \   00000018   0x8804             LDRH     R4,[R0, #+0]
    376             
    377             xSemaphoreGive(BV20_sem_acumulador_dinheiro);     
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR.N    R0,??DataTable9_3
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x.... 0x....      BL       xQueueGenericSend
    378             
    379             return valor;
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
    380          }
    381          /***********************************************************************************
    382          *       Descrição       :      seter para o acumulado de moeda
    383          *       Parametros      :      (unsigned short int) subtrai o valor do acumulado
    384          *       Retorno         :       nenhum
    385          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    386          void BV20_subtrai_valor_acumulado(unsigned short int valor){
   \                     BV20_subtrai_valor_acumulado:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    387            
    388             while(!xSemaphoreTake(BV20_sem_acumulador_dinheiro,portTICK_RATE_MS*1));     
   \                     ??BV20_subtrai_valor_acumulado_0:
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x....             LDR.N    R0,??DataTable9_3
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       xQueueGenericReceive
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD0F6             BEQ.N    ??BV20_subtrai_valor_acumulado_0
    389             
    390             if(valor>=BV20_valor_acumulado)
   \   00000016   0x....             LDR.N    R0,??DataTable9_9
   \   00000018   0x8800             LDRH     R0,[R0, #+0]
   \   0000001A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001C   0x4284             CMP      R4,R0
   \   0000001E   0xD305             BCC.N    ??BV20_subtrai_valor_acumulado_1
    391               BV20_valor_acumulado -= valor;
   \   00000020   0x....             LDR.N    R0,??DataTable9_9
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0x1B00             SUBS     R0,R0,R4
   \   00000026   0x....             LDR.N    R1,??DataTable9_9
   \   00000028   0x8008             STRH     R0,[R1, #+0]
   \   0000002A   0xE002             B.N      ??BV20_subtrai_valor_acumulado_2
    392             else
    393               BV20_valor_acumulado = 0;
   \                     ??BV20_subtrai_valor_acumulado_1:
   \   0000002C   0x....             LDR.N    R0,??DataTable9_9
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x8001             STRH     R1,[R0, #+0]
    394             
    395             xSemaphoreGive(BV20_sem_acumulador_dinheiro); 
   \                     ??BV20_subtrai_valor_acumulado_2:
   \   00000032   0x2300             MOVS     R3,#+0
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x....             LDR.N    R0,??DataTable9_3
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       xQueueGenericSend
    396          }
   \   00000040   0xBD10             POP      {R4,PC}          ;; return
    397          /***********************************************************************************
    398          *       Descrição       :       Getter para o último evento validado pelo
    399          *                               noteiro
    400          *       Parametros      :       nenhum
    401          *       Retorno         :       (CCTALK_BILL_EVENTS) eventos
    402          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    403          CCTALK_BILL_EVENTS BV20_get_ultimo_evento(void){
    404            
    405            return BV20_ultimo_evento;
   \                     BV20_get_ultimo_evento:
   \   00000000   0x....             LDR.N    R0,??DataTable9_13
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    406          }
    407          /***********************************************************************************
    408          *       Descrição       :       Getter para o estado atual da máquina de 
    409          *                               estados que supervisiona o BV20
    410          *       Parametros      :       nenhum
    411          *       Retorno         :       (eBV20_state) estado atual da máquina
    412          *                                             de estados que supervisona o BV20
    413          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    414          eBV20_state BV20_get_current_state(void){
    415            
    416            return estado_atual;
   \                     BV20_get_current_state:
   \   00000000   0x....             LDR.N    R0,??DataTable9_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    417          }
    418          /***********************************************************************************
    419          *       Descrição       :       Faz o bloqueio do noteiro
    420          *       Parametros      :       nenhum
    421          *       Retorno         :       nenhum
    422          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    423          eBV20_state BV20_estado_bloqueio(eBV20_state estado){
   \                     BV20_estado_bloqueio:
   \   00000000   0xB510             PUSH     {R4,LR}
    424            unsigned int tentativas=3;
   \   00000002   0x2403             MOVS     R4,#+3
    425            unsigned char flag;
    426            
    427            do flag = CCTALK_setBitsHabilitacaoCanal(END_NOTEIRO,0);
   \                     ??BV20_estado_bloqueio_0:
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2028             MOVS     R0,#+40
   \   00000008   0x.... 0x....      BL       CCTALK_setBitsHabilitacaoCanal
    428            while(!flag && tentativas--);  
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD103             BNE.N    ??BV20_estado_bloqueio_1
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x1E44             SUBS     R4,R0,#+1
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD1F4             BNE.N    ??BV20_estado_bloqueio_0
    429            
    430            return BV20_BLOQUEADO;
   \                     ??BV20_estado_bloqueio_1:
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    431          }
    432          /***********************************************************************************
    433          *       Descrição       :       Setter para o bloqueio 
    434          *       Parametros      :       (unsigned char) flag
    435          *       Retorno         :       nenhum
    436          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    437          void BV20_setter_bloqueio(unsigned char flag){
    438            
    439            if(flag)
   \                     BV20_setter_bloqueio:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD003             BEQ.N    ??BV20_setter_bloqueio_0
    440              BV20_mensagemExterna = BV20_BLOQUEADO;
   \   00000006   0x....             LDR.N    R0,??DataTable9
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
   \   0000000C   0xE002             B.N      ??BV20_setter_bloqueio_1
    441            else
    442              BV20_mensagemExterna = BV20_INICIALIZACAO;
   \                     ??BV20_setter_bloqueio_0:
   \   0000000E   0x....             LDR.N    R0,??DataTable9
   \   00000010   0x2102             MOVS     R1,#+2
   \   00000012   0x7001             STRB     R1,[R0, #+0]
    443          }
   \                     ??BV20_setter_bloqueio_1:
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     BV20_mensagemExterna

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     estado_atual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     BV20_func

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     BV20_sem_acumulador_dinheiro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     BV20_fila_sinais

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     BV20_regiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     BV20_quantidade_eventos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x........         DC32     ??contador_ciclos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     BV20_ultima_quantidade_eventos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x........         DC32     BV20_valor_acumulado

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     BV20_valor_canais

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x........         DC32     ??valorGolpe

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x........         DC32     ??last_evento

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x........         DC32     BV20_ultimo_evento
    444          /***********************************************************************************
    445          *       Fim do arquivo
    446          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BV20_bloqueado
      16   BV20_decodifica_eventos
        16   -> CCTALK_rotacionaValidador
        16   -> vTaskDelay
        16   -> xQueueGenericReceive
        16   -> xQueueGenericSend
       8   BV20_estado_bloqueio
         8   -> CCTALK_setBitsHabilitacaoCanal
       8   BV20_estado_inicializacao
         8   -> BV20_inicializNoteiro
      24   BV20_estado_le_evento
        24   -> BV20_decodifica_eventos
        24   -> CCTALK_leFilaEventos
       0   BV20_estado_offline
      24   BV20_estado_supervisao
        24   -> CCTALK_leFilaEventos
       0   BV20_get_current_state
       0   BV20_get_ultimo_evento
       8   BV20_get_valor_acumulador
         8   -> xQueueGenericReceive
         8   -> xQueueGenericSend
       8   BV20_ini
         8   -> APLICACAO_carrega_idioma
         8   -> xQueueCreate
         8   -> xQueueGenericSend
      32   BV20_inicializNoteiro
        32   -> CCTALK_leFilaEventos
        32   -> CCTALK_setBitsHabilitacaoCanal
        32   -> CCTALK_setFlagHabilitacaoGeral
        32   -> PARAMETROS_le
       8   BV20_main
         8   -- Indirect call
         8   -> BV20_ini
         8   -> vTaskDelay
       0   BV20_offline_bloqueado
       0   BV20_setter_bloqueio
       8   BV20_subtrai_valor_acumulado
         8   -> xQueueGenericReceive
         8   -> xQueueGenericSend


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
       4  BV20_bloqueado
     374  BV20_decodifica_eventos
      30  BV20_estado_bloqueio
      18  BV20_estado_inicializacao
     142  BV20_estado_le_evento
       4  BV20_estado_offline
      78  BV20_estado_supervisao
       4  BV20_fila_sinais
      24  BV20_func
       6  BV20_get_current_state
       6  BV20_get_ultimo_evento
      46  BV20_get_valor_acumulador
      68  BV20_ini
     140  BV20_inicializNoteiro
      90  BV20_main
       1  BV20_mensagemExterna
       4  BV20_offline_bloqueado
       1  BV20_quantidade_eventos
       1  BV20_regiao
       4  BV20_sem_acumulador_dinheiro
      22  BV20_setter_bloqueio
      66  BV20_subtrai_valor_acumulado
       2  BV20_ultima_quantidade_eventos
       1  BV20_ultimo_evento
       2  BV20_valor_acumulado
     100  BV20_valor_canais
       1  contador_ciclos
       1  estado_atual
       1  last_evento
       2  valorGolpe

 
    14 bytes in section .bss
    31 bytes in section .data
   100 bytes in section .rodata
 1 154 bytes in section .text
 
 1 154 bytes of CODE  memory
   100 bytes of CONST memory
    45 bytes of DATA  memory

Errors: none
Warnings: none

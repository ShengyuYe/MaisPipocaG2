###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      12/Sep/2017  15:11:51 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\Interfac #
#                    eAjusteRelogio.c                                         #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\Interfac #
#                    eAjusteRelogio.c -lC C:\repositorios\MaisPipocaG2\SOFTWA #
#                    RE\Debug\List\ -lA C:\repositorios\MaisPipocaG2\SOFTWARE #
#                    \Debug\List\ -o C:\repositorios\MaisPipocaG2\SOFTWARE\De #
#                    bug\Obj\ --no_cse --no_unroll --no_inline                #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\Interfa #
#                    ceAjusteRelogio.lst                                      #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\Interfac #
#                    eAjusteRelogio.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\InterfaceAjusteRelogio.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Ltda.
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Produto            :  Tela para o usuário realizar o ajuste do rtc
     18          |                             
     19          |       Arquivo            :  InterfaceAjusteRelogio.c
     20          | 
     21          |       Autor              :  Marcos Aquino
     22          |       Data criação       :  19/06/2014
     23          |
     24          |       Revisões           :  1.0 - primeira versão
     25          |
     26          |
     27          | __________________________________________________________________________________
     28          */
     29          
     30          /***********************************************************************************
     31          *       Includes
     32          ***********************************************************************************/
     33          #include <stdio.h>
     34          #include <stdlib.h>
     35          #include <string.h>

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
     36          #include "InterfaceAJusteRelogio.h"
     37          #include "..\includes.h"
     38          
     39          /***********************************************************************************
     40          *       Definições locais
     41          ***********************************************************************************/
     42          
     43          /***********************************************************************************
     44          *       Constantes locais
     45          ***********************************************************************************/

   \                                 In section .rodata, align 4
     46          const unsigned int limites[6][2]={  
   \                     limites:
   \   00000000   0x00000000         DC32 0, 24, 0, 59, 0, 59, 1, 31, 1, 12, 2014, 2050
   \              0x00000018   
   \              0x00000000   
   \              0x0000003B   
   \              0x00000000   
   \              0x0000003B   
   \              0x00000001   
   \              0x0000001F   
   \              0x00000001   
   \              0x0000000C   
   \              0x000007DE   
   \              0x00000802   
     47            [0]=0,24,
     48            [1]=0,59,
     49            [2]=0,59,
     50            [3]=1,31,
     51            [4]=1,12,
     52            [5]=2014,2050
     53          };
     54          
     55          

   \                                 In section .data, align 4
     56          const char* tracos[]={
   \                     tracos:
   \   00000000   0x........         DC32 `?<Constant "__">`, `?<Constant "__">`, `?<Constant "__">`
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 `?<Constant "__">`, `?<Constant "__">`, `?<Constant "____">`
   \              0x........   
   \              0x........   
     57            [0] = "__",
     58            [1] = "__",
     59            [2] = "__",
     60            [3] = "__",
     61            [4] = "__",
     62            [5] = "____"
     63          };
     64          

   \                                 In section .rodata, align 4
     65          const char tamanhos[6]={
   \                     tamanhos:
   \   00000000   0x03 0x03          DC8 3, 3, 3, 3, 3, 6, 0, 0
   \              0x03 0x03    
   \              0x03 0x06    
   \              0x00 0x00    
     66            3,
     67            3,
     68            3,
     69            3,
     70            3,
     71            6  
     72          };
     73          
     74          /***********************************************************************************
     75          *       Variaveis locais
     76          ***********************************************************************************/
     77          
     78          
     79          /***********************************************************************************
     80          *       Funções locais
     81          ***********************************************************************************/
     82          void IAR_desenhaDados(char *linha1,char* linha2);
     83          
     84          /***********************************************************************************
     85          *       Implementação das funções
     86          ***********************************************************************************/
     87          
     88          /***********************************************************************************
     89          *       Descrição       :       Ponto de entrada da interface para ajuste
     90          *                               do relógio
     91          *       Parametros      :       nenhum
     92          *       Retorno         :       nenhum
     93          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     94          void IAR_entry(void){
   \                     IAR_entry:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB09D             SUB      SP,SP,#+116
     95            eTECLA tecla;
     96            unsigned char hora,minuto,segundo,dia,mes;
     97            unsigned int ano;
     98            unsigned int valores[6];
     99            unsigned char ponteiro=0;
   \   00000004   0x2700             MOVS     R7,#+0
    100            unsigned char refreshTime=1;
   \   00000006   0x2501             MOVS     R5,#+1
    101            unsigned char toogle=0x00;
   \   00000008   0x2600             MOVS     R6,#+0
    102            char strings[6][5];
    103            char bufferLinhas[2][17];
    104            
    105            RTC_getValue(&hora,&minuto,&segundo,&dia,&mes,&ano);
   \   0000000A   0xA804             ADD      R0,SP,#+16
   \   0000000C   0x9001             STR      R0,[SP, #+4]
   \   0000000E   0xA802             ADD      R0,SP,#+8
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0xF10D 0x0309      ADD      R3,SP,#+9
   \   00000016   0xF10D 0x020A      ADD      R2,SP,#+10
   \   0000001A   0xF10D 0x010B      ADD      R1,SP,#+11
   \   0000001E   0xA803             ADD      R0,SP,#+12
   \   00000020   0x.... 0x....      BL       RTC_getValue
    106            
    107            if(hora>23)
   \   00000024   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000028   0x2818             CMP      R0,#+24
   \   0000002A   0xDB02             BLT.N    ??IAR_entry_0
    108              hora=23;
   \   0000002C   0x2017             MOVS     R0,#+23
   \   0000002E   0xF88D 0x000C      STRB     R0,[SP, #+12]
    109            if(minuto>59)
   \                     ??IAR_entry_0:
   \   00000032   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   00000036   0x283C             CMP      R0,#+60
   \   00000038   0xDB02             BLT.N    ??IAR_entry_1
    110              minuto = 59;
   \   0000003A   0x203B             MOVS     R0,#+59
   \   0000003C   0xF88D 0x000B      STRB     R0,[SP, #+11]
    111            if(segundo>59)
   \                     ??IAR_entry_1:
   \   00000040   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   00000044   0x283C             CMP      R0,#+60
   \   00000046   0xDB02             BLT.N    ??IAR_entry_2
    112              segundo = 59;
   \   00000048   0x203B             MOVS     R0,#+59
   \   0000004A   0xF88D 0x000A      STRB     R0,[SP, #+10]
    113            if(!dia)
   \                     ??IAR_entry_2:
   \   0000004E   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD102             BNE.N    ??IAR_entry_3
    114              dia = 1;
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0xF88D 0x0009      STRB     R0,[SP, #+9]
    115            if(dia>31)
   \                     ??IAR_entry_3:
   \   0000005C   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000060   0x2820             CMP      R0,#+32
   \   00000062   0xDB02             BLT.N    ??IAR_entry_4
    116              dia = 31;
   \   00000064   0x201F             MOVS     R0,#+31
   \   00000066   0xF88D 0x0009      STRB     R0,[SP, #+9]
    117            if(!mes)
   \                     ??IAR_entry_4:
   \   0000006A   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD102             BNE.N    ??IAR_entry_5
    118              mes = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0xF88D 0x0008      STRB     R0,[SP, #+8]
    119            if(mes>12)
   \                     ??IAR_entry_5:
   \   00000078   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000007C   0x280D             CMP      R0,#+13
   \   0000007E   0xDB02             BLT.N    ??IAR_entry_6
    120              mes = 12;
   \   00000080   0x200C             MOVS     R0,#+12
   \   00000082   0xF88D 0x0008      STRB     R0,[SP, #+8]
    121            if(ano<2014)
   \                     ??IAR_entry_6:
   \   00000086   0x9804             LDR      R0,[SP, #+16]
   \   00000088   0xF240 0x71DE      MOVW     R1,#+2014
   \   0000008C   0x4288             CMP      R0,R1
   \   0000008E   0xD202             BCS.N    ??IAR_entry_7
    122              ano = 2014;
   \   00000090   0xF240 0x70DE      MOVW     R0,#+2014
   \   00000094   0x9004             STR      R0,[SP, #+16]
    123            if(ano>2050)
   \                     ??IAR_entry_7:
   \   00000096   0x9804             LDR      R0,[SP, #+16]
   \   00000098   0xF640 0x0103      MOVW     R1,#+2051
   \   0000009C   0x4288             CMP      R0,R1
   \   0000009E   0xD302             BCC.N    ??IAR_entry_8
    124              ano = 2050;
   \   000000A0   0xF640 0x0002      MOVW     R0,#+2050
   \   000000A4   0x9004             STR      R0,[SP, #+16]
    125                         
    126            valores[0] = hora;
   \                     ??IAR_entry_8:
   \   000000A6   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   000000AA   0x9005             STR      R0,[SP, #+20]
    127            valores[1] = minuto;
   \   000000AC   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   000000B0   0x9006             STR      R0,[SP, #+24]
    128            valores[2] = segundo;
   \   000000B2   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   000000B6   0x9007             STR      R0,[SP, #+28]
    129            valores[3] = dia;
   \   000000B8   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   000000BC   0x9008             STR      R0,[SP, #+32]
    130            valores[4] = mes;
   \   000000BE   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   000000C2   0x9009             STR      R0,[SP, #+36]
    131            valores[5] = ano;
   \   000000C4   0x9804             LDR      R0,[SP, #+16]
   \   000000C6   0x900A             STR      R0,[SP, #+40]
    132            
    133            
    134            HD44780_clearText();
   \   000000C8   0x200C             MOVS     R0,#+12
   \   000000CA   0x.... 0x....      BL       HD44780_writeChar
    135              
    136            for(;TECLADO_getContadorInatividade();){
   \                     ??IAR_entry_9:
   \   000000CE   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   000000D2   0x2800             CMP      R0,#+0
   \   000000D4   0xF000 0x80D2      BEQ.W    ??IAR_entry_10
    137              
    138              tecla = TECLADO_getch();
   \   000000D8   0x.... 0x....      BL       TECLADO_getch
   \   000000DC   0x0004             MOVS     R4,R0
    139              switch(tecla){
   \   000000DE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E0   0x2C01             CMP      R4,#+1
   \   000000E2   0xD070             BEQ.N    ??IAR_entry_11
   \   000000E4   0xD370             BCC.N    ??IAR_entry_12
   \   000000E6   0x2C03             CMP      R4,#+3
   \   000000E8   0xD025             BEQ.N    ??IAR_entry_13
   \   000000EA   0xD302             BCC.N    ??IAR_entry_14
   \   000000EC   0x2C04             CMP      R4,#+4
   \   000000EE   0xD044             BEQ.N    ??IAR_entry_15
   \   000000F0   0xE06A             B.N      ??IAR_entry_12
    140                case TECLA_INC:
    141                     (valores[ponteiro]>=limites[ponteiro][1])?(valores[ponteiro]=limites[ponteiro][0]):(valores[ponteiro]++);
   \                     ??IAR_entry_14:
   \   000000F2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000F4   0xA805             ADD      R0,SP,#+20
   \   000000F6   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000000FA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000FC   0x....             LDR.N    R1,??DataTable1
   \   000000FE   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000102   0x6849             LDR      R1,[R1, #+4]
   \   00000104   0x4288             CMP      R0,R1
   \   00000106   0xD308             BCC.N    ??IAR_entry_16
   \   00000108   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000010A   0x....             LDR.N    R0,??DataTable1
   \   0000010C   0xF850 0x0037      LDR      R0,[R0, R7, LSL #+3]
   \   00000110   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000112   0xA905             ADD      R1,SP,#+20
   \   00000114   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
   \   00000118   0xE00C             B.N      ??IAR_entry_17
   \                     ??IAR_entry_16:
   \   0000011A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000011C   0xA805             ADD      R0,SP,#+20
   \   0000011E   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000122   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000124   0xA905             ADD      R1,SP,#+20
   \   00000126   0xF851 0x1027      LDR      R1,[R1, R7, LSL #+2]
   \   0000012A   0x1C49             ADDS     R1,R1,#+1
   \   0000012C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000012E   0xAA05             ADD      R2,SP,#+20
   \   00000130   0xF842 0x1027      STR      R1,[R2, R7, LSL #+2]
    142                     break;
   \                     ??IAR_entry_17:
   \   00000134   0xE048             B.N      ??IAR_entry_12
    143                case TECLA_DEC:
    144                     (valores[ponteiro]<=limites[ponteiro][0])?(valores[ponteiro]=limites[ponteiro][1]):(valores[ponteiro]--);
   \                     ??IAR_entry_13:
   \   00000136   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000138   0x....             LDR.N    R0,??DataTable1
   \   0000013A   0xF850 0x0037      LDR      R0,[R0, R7, LSL #+3]
   \   0000013E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000140   0xA905             ADD      R1,SP,#+20
   \   00000142   0xF851 0x1027      LDR      R1,[R1, R7, LSL #+2]
   \   00000146   0x4288             CMP      R0,R1
   \   00000148   0xD309             BCC.N    ??IAR_entry_18
   \   0000014A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000014C   0x....             LDR.N    R0,??DataTable1
   \   0000014E   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   00000152   0x6840             LDR      R0,[R0, #+4]
   \   00000154   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000156   0xA905             ADD      R1,SP,#+20
   \   00000158   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
   \   0000015C   0xE00C             B.N      ??IAR_entry_19
   \                     ??IAR_entry_18:
   \   0000015E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000160   0xA805             ADD      R0,SP,#+20
   \   00000162   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000166   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000168   0xA905             ADD      R1,SP,#+20
   \   0000016A   0xF851 0x1027      LDR      R1,[R1, R7, LSL #+2]
   \   0000016E   0x1E49             SUBS     R1,R1,#+1
   \   00000170   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000172   0xAA05             ADD      R2,SP,#+20
   \   00000174   0xF842 0x1027      STR      R1,[R2, R7, LSL #+2]
    145                     break;
   \                     ??IAR_entry_19:
   \   00000178   0xE026             B.N      ??IAR_entry_12
    146                case TECLA_ENTER:
    147                     if(ponteiro<5)
   \                     ??IAR_entry_15:
   \   0000017A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000017C   0x2F05             CMP      R7,#+5
   \   0000017E   0xDA01             BGE.N    ??IAR_entry_20
    148                       ponteiro++;
   \   00000180   0x1C7F             ADDS     R7,R7,#+1
    149                     else{
    150                       hora = valores[0];
    151                       minuto = valores[1];
    152                       segundo = valores[2];
    153                       dia = valores[3];
    154                       mes = valores[4];
    155                       ano = valores[5];
    156                       RTC_setValue(hora,minuto,segundo,dia,mes,ano);
    157                       return;
    158                     }        
    159                     break;
   \   00000182   0xE021             B.N      ??IAR_entry_12
   \                     ??IAR_entry_20:
   \   00000184   0x9805             LDR      R0,[SP, #+20]
   \   00000186   0xF88D 0x000C      STRB     R0,[SP, #+12]
   \   0000018A   0x9806             LDR      R0,[SP, #+24]
   \   0000018C   0xF88D 0x000B      STRB     R0,[SP, #+11]
   \   00000190   0x9807             LDR      R0,[SP, #+28]
   \   00000192   0xF88D 0x000A      STRB     R0,[SP, #+10]
   \   00000196   0x9808             LDR      R0,[SP, #+32]
   \   00000198   0xF88D 0x0009      STRB     R0,[SP, #+9]
   \   0000019C   0x9809             LDR      R0,[SP, #+36]
   \   0000019E   0xF88D 0x0008      STRB     R0,[SP, #+8]
   \   000001A2   0x980A             LDR      R0,[SP, #+40]
   \   000001A4   0x9004             STR      R0,[SP, #+16]
   \   000001A6   0x9804             LDR      R0,[SP, #+16]
   \   000001A8   0x9001             STR      R0,[SP, #+4]
   \   000001AA   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   000001AE   0x9000             STR      R0,[SP, #+0]
   \   000001B0   0xF89D 0x3009      LDRB     R3,[SP, #+9]
   \   000001B4   0xF89D 0x200A      LDRB     R2,[SP, #+10]
   \   000001B8   0xF89D 0x100B      LDRB     R1,[SP, #+11]
   \   000001BC   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   000001C0   0x.... 0x....      BL       RTC_setValue
   \   000001C4   0xE05A             B.N      ??IAR_entry_21
    160                case TECLA_ESC:
    161                     return;
   \                     ??IAR_entry_11:
   \   000001C6   0xE059             B.N      ??IAR_entry_21
    162              }
    163              
    164              if(!--refreshTime){
   \                     ??IAR_entry_12:
   \   000001C8   0x1E6D             SUBS     R5,R5,#+1
   \   000001CA   0x0028             MOVS     R0,R5
   \   000001CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CE   0x2800             CMP      R0,#+0
   \   000001D0   0xD150             BNE.N    ??IAR_entry_22
    165                refreshTime = 2;
   \   000001D2   0x2002             MOVS     R0,#+2
   \   000001D4   0x0005             MOVS     R5,R0
    166                toogle = ~toogle;
   \   000001D6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001D8   0x43F6             MVNS     R6,R6
    167                
    168                sprintf(strings[0],"%02d",valores[0]);
   \   000001DA   0x9A05             LDR      R2,[SP, #+20]
   \   000001DC   0x....             LDR.N    R1,??DataTable1_1
   \   000001DE   0xA80B             ADD      R0,SP,#+44
   \   000001E0   0x.... 0x....      BL       sprintf
    169                sprintf(strings[1],"%02d",valores[1]);
   \   000001E4   0x9A06             LDR      R2,[SP, #+24]
   \   000001E6   0x....             LDR.N    R1,??DataTable1_1
   \   000001E8   0xF10D 0x0031      ADD      R0,SP,#+49
   \   000001EC   0x.... 0x....      BL       sprintf
    170                sprintf(strings[2],"%02d",valores[2]);
   \   000001F0   0x9A07             LDR      R2,[SP, #+28]
   \   000001F2   0x....             LDR.N    R1,??DataTable1_1
   \   000001F4   0xF10D 0x0036      ADD      R0,SP,#+54
   \   000001F8   0x.... 0x....      BL       sprintf
    171                sprintf(strings[3],"%02d",valores[3]);
   \   000001FC   0x9A08             LDR      R2,[SP, #+32]
   \   000001FE   0x....             LDR.N    R1,??DataTable1_1
   \   00000200   0xF10D 0x003B      ADD      R0,SP,#+59
   \   00000204   0x.... 0x....      BL       sprintf
    172                sprintf(strings[4],"%02d",valores[4]);
   \   00000208   0x9A09             LDR      R2,[SP, #+36]
   \   0000020A   0x....             LDR.N    R1,??DataTable1_1
   \   0000020C   0xA810             ADD      R0,SP,#+64
   \   0000020E   0x.... 0x....      BL       sprintf
    173                sprintf(strings[5],"%04d",valores[5]);
   \   00000212   0x9A0A             LDR      R2,[SP, #+40]
   \   00000214   0x....             LDR.N    R1,??DataTable1_2
   \   00000216   0xF10D 0x0045      ADD      R0,SP,#+69
   \   0000021A   0x.... 0x....      BL       sprintf
    174                  
    175                if(toogle)
   \   0000021E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000220   0x2E00             CMP      R6,#+0
   \   00000222   0xD00D             BEQ.N    ??IAR_entry_23
    176                  memcpy(strings[ponteiro],tracos[ponteiro],tamanhos[ponteiro]);
   \   00000224   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000226   0x....             LDR.N    R0,??DataTable1_3
   \   00000228   0x5C3A             LDRB     R2,[R7, R0]
   \   0000022A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000022C   0x....             LDR.N    R0,??DataTable1_4
   \   0000022E   0xF850 0x1027      LDR      R1,[R0, R7, LSL #+2]
   \   00000232   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000234   0x2005             MOVS     R0,#+5
   \   00000236   0xAB0B             ADD      R3,SP,#+44
   \   00000238   0xFB00 0x3007      MLA      R0,R0,R7,R3
   \   0000023C   0x.... 0x....      BL       memcpy
    177                  
    178                sprintf(bufferLinhas[0],"%s:%s:%s",strings[0],strings[1],strings[2]);
   \                     ??IAR_entry_23:
   \   00000240   0xF10D 0x0036      ADD      R0,SP,#+54
   \   00000244   0x9000             STR      R0,[SP, #+0]
   \   00000246   0xF10D 0x0331      ADD      R3,SP,#+49
   \   0000024A   0xAA0B             ADD      R2,SP,#+44
   \   0000024C   0x....             LDR.N    R1,??DataTable1_5
   \   0000024E   0xA813             ADD      R0,SP,#+76
   \   00000250   0x.... 0x....      BL       sprintf
    179                sprintf(bufferLinhas[1],"%s/%s/%s",strings[3],strings[4],strings[5]);
   \   00000254   0xF10D 0x0045      ADD      R0,SP,#+69
   \   00000258   0x9000             STR      R0,[SP, #+0]
   \   0000025A   0xAB10             ADD      R3,SP,#+64
   \   0000025C   0xF10D 0x023B      ADD      R2,SP,#+59
   \   00000260   0x....             LDR.N    R1,??DataTable1_6
   \   00000262   0xF10D 0x005D      ADD      R0,SP,#+93
   \   00000266   0x.... 0x....      BL       sprintf
    180                  
    181                IAR_desenhaDados(bufferLinhas[0],bufferLinhas[1]);
   \   0000026A   0xF10D 0x015D      ADD      R1,SP,#+93
   \   0000026E   0xA813             ADD      R0,SP,#+76
   \   00000270   0x.... 0x....      BL       IAR_desenhaDados
    182              }
    183                         
    184              vTaskDelay(50);
   \                     ??IAR_entry_22:
   \   00000274   0x2032             MOVS     R0,#+50
   \   00000276   0x.... 0x....      BL       vTaskDelay
   \   0000027A   0xE728             B.N      ??IAR_entry_9
    185              
    186            }// Fim do for;; 
    187          }
   \                     ??IAR_entry_10:
   \                     ??IAR_entry_21:
   \   0000027C   0xB01D             ADD      SP,SP,#+116
   \   0000027E   0xBDF0             POP      {R4-R7,PC}       ;; return
    188          /***********************************************************************************
    189          *       Descrição       :       Desenha os dados no LCD
    190          *       Parametros      :       (char*) linha 1
    191          *                               (char*) linha 2)
    192          *       Retorno         :       nenhum
    193          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    194          void IAR_desenhaDados(char *linha1,char* linha2){
   \                     IAR_desenhaDados:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    195            
    196            HD44780_posicionaTexto(4,0);
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2004             MOVS     R0,#+4
   \   0000000A   0x.... 0x....      BL       HD44780_posicionaTexto
    197            HD44780_writeString((char*)linha1);
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       HD44780_writeString
    198            HD44780_posicionaTexto(3,1);
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0x.... 0x....      BL       HD44780_posicionaTexto
    199            HD44780_writeString((char*)linha2);  
   \   0000001C   0x0028             MOVS     R0,R5
   \   0000001E   0x.... 0x....      BL       HD44780_writeString
    200          }
   \   00000022   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    201          /***********************************************************************************
    202          *       Descrição       :       Interface para o teste do RTC
    203          *       Parametros      :       nenhum
    204          *       Retorno         :       nenhum
    205          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    206          void IAR_testeRTC(void){
   \                     IAR_testeRTC:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB09D             SUB      SP,SP,#+116
    207            eTECLA tecla;
    208            unsigned char hora,minuto,segundo,dia,mes;
    209            unsigned int ano;
    210            unsigned int valores[6];
    211            unsigned char ponteiro=0;
   \   00000004   0x2500             MOVS     R5,#+0
    212            unsigned char refreshTime=1;
   \   00000006   0x2601             MOVS     R6,#+1
    213            unsigned char toogle=0x00;
   \   00000008   0x2700             MOVS     R7,#+0
    214            char strings[6][5];
    215            char bufferLinhas[2][17];
    216            
    217            RTC_getValue(&hora,&minuto,&segundo,&dia,&mes,&ano);
   \   0000000A   0xA804             ADD      R0,SP,#+16
   \   0000000C   0x9001             STR      R0,[SP, #+4]
   \   0000000E   0xA802             ADD      R0,SP,#+8
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0xF10D 0x0309      ADD      R3,SP,#+9
   \   00000016   0xF10D 0x020A      ADD      R2,SP,#+10
   \   0000001A   0xF10D 0x010B      ADD      R1,SP,#+11
   \   0000001E   0xA803             ADD      R0,SP,#+12
   \   00000020   0x.... 0x....      BL       RTC_getValue
    218            
    219            if(hora>23)
   \   00000024   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000028   0x2818             CMP      R0,#+24
   \   0000002A   0xDB02             BLT.N    ??IAR_testeRTC_0
    220              hora=23;
   \   0000002C   0x2017             MOVS     R0,#+23
   \   0000002E   0xF88D 0x000C      STRB     R0,[SP, #+12]
    221            if(minuto>59)
   \                     ??IAR_testeRTC_0:
   \   00000032   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   00000036   0x283C             CMP      R0,#+60
   \   00000038   0xDB02             BLT.N    ??IAR_testeRTC_1
    222              minuto = 59;
   \   0000003A   0x203B             MOVS     R0,#+59
   \   0000003C   0xF88D 0x000B      STRB     R0,[SP, #+11]
    223            if(segundo>59)
   \                     ??IAR_testeRTC_1:
   \   00000040   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   00000044   0x283C             CMP      R0,#+60
   \   00000046   0xDB02             BLT.N    ??IAR_testeRTC_2
    224              segundo = 59;
   \   00000048   0x203B             MOVS     R0,#+59
   \   0000004A   0xF88D 0x000A      STRB     R0,[SP, #+10]
    225            if(!dia)
   \                     ??IAR_testeRTC_2:
   \   0000004E   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD102             BNE.N    ??IAR_testeRTC_3
    226              dia = 1;
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0xF88D 0x0009      STRB     R0,[SP, #+9]
    227            if(dia>31)
   \                     ??IAR_testeRTC_3:
   \   0000005C   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000060   0x2820             CMP      R0,#+32
   \   00000062   0xDB02             BLT.N    ??IAR_testeRTC_4
    228              dia = 31;
   \   00000064   0x201F             MOVS     R0,#+31
   \   00000066   0xF88D 0x0009      STRB     R0,[SP, #+9]
    229            if(!mes)
   \                     ??IAR_testeRTC_4:
   \   0000006A   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD102             BNE.N    ??IAR_testeRTC_5
    230              mes = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0xF88D 0x0008      STRB     R0,[SP, #+8]
    231            if(mes>12)
   \                     ??IAR_testeRTC_5:
   \   00000078   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000007C   0x280D             CMP      R0,#+13
   \   0000007E   0xDB02             BLT.N    ??IAR_testeRTC_6
    232              mes = 12;
   \   00000080   0x200C             MOVS     R0,#+12
   \   00000082   0xF88D 0x0008      STRB     R0,[SP, #+8]
    233            if(ano<2014)
   \                     ??IAR_testeRTC_6:
   \   00000086   0x9804             LDR      R0,[SP, #+16]
   \   00000088   0xF240 0x71DE      MOVW     R1,#+2014
   \   0000008C   0x4288             CMP      R0,R1
   \   0000008E   0xD202             BCS.N    ??IAR_testeRTC_7
    234              ano = 2014;
   \   00000090   0xF240 0x70DE      MOVW     R0,#+2014
   \   00000094   0x9004             STR      R0,[SP, #+16]
    235            if(ano>2050)
   \                     ??IAR_testeRTC_7:
   \   00000096   0x9804             LDR      R0,[SP, #+16]
   \   00000098   0xF640 0x0103      MOVW     R1,#+2051
   \   0000009C   0x4288             CMP      R0,R1
   \   0000009E   0xD302             BCC.N    ??IAR_testeRTC_8
    236              ano = 2050;
   \   000000A0   0xF640 0x0002      MOVW     R0,#+2050
   \   000000A4   0x9004             STR      R0,[SP, #+16]
    237                         
    238            valores[0] = hora;
   \                     ??IAR_testeRTC_8:
   \   000000A6   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   000000AA   0x9005             STR      R0,[SP, #+20]
    239            valores[1] = minuto;
   \   000000AC   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   000000B0   0x9006             STR      R0,[SP, #+24]
    240            valores[2] = segundo;
   \   000000B2   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   000000B6   0x9007             STR      R0,[SP, #+28]
    241            valores[3] = dia;
   \   000000B8   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   000000BC   0x9008             STR      R0,[SP, #+32]
    242            valores[4] = mes;
   \   000000BE   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   000000C2   0x9009             STR      R0,[SP, #+36]
    243            valores[5] = ano;
   \   000000C4   0x9804             LDR      R0,[SP, #+16]
   \   000000C6   0x900A             STR      R0,[SP, #+40]
    244            
    245            
    246            HD44780_clearText();
   \   000000C8   0x200C             MOVS     R0,#+12
   \   000000CA   0x.... 0x....      BL       HD44780_writeChar
    247              
    248            for(;TECLADO_getContadorInatividade();){
   \                     ??IAR_testeRTC_9:
   \   000000CE   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   000000D2   0x2800             CMP      R0,#+0
   \   000000D4   0xD07D             BEQ.N    ??IAR_testeRTC_10
    249              
    250              tecla = TECLADO_getch();
   \   000000D6   0x.... 0x....      BL       TECLADO_getch
   \   000000DA   0x0004             MOVS     R4,R0
    251              switch(tecla){      
   \   000000DC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DE   0x2C01             CMP      R4,#+1
   \   000000E0   0xD077             BEQ.N    ??IAR_testeRTC_11
    252                case TECLA_ESC:
    253                  return;
    254              }
    255              
    256              RTC_getValue(&hora,&minuto,&segundo,&dia,&mes,&ano);
   \                     ??IAR_testeRTC_12:
   \   000000E2   0xA804             ADD      R0,SP,#+16
   \   000000E4   0x9001             STR      R0,[SP, #+4]
   \   000000E6   0xA802             ADD      R0,SP,#+8
   \   000000E8   0x9000             STR      R0,[SP, #+0]
   \   000000EA   0xF10D 0x0309      ADD      R3,SP,#+9
   \   000000EE   0xF10D 0x020A      ADD      R2,SP,#+10
   \   000000F2   0xF10D 0x010B      ADD      R1,SP,#+11
   \   000000F6   0xA803             ADD      R0,SP,#+12
   \   000000F8   0x.... 0x....      BL       RTC_getValue
    257              valores[0] = hora;
   \   000000FC   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000100   0x9005             STR      R0,[SP, #+20]
    258              valores[1] = minuto;
   \   00000102   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   00000106   0x9006             STR      R0,[SP, #+24]
    259              valores[2] = segundo;
   \   00000108   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   0000010C   0x9007             STR      R0,[SP, #+28]
    260              valores[3] = dia;
   \   0000010E   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000112   0x9008             STR      R0,[SP, #+32]
    261              valores[4] = mes;
   \   00000114   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000118   0x9009             STR      R0,[SP, #+36]
    262              valores[5] = ano;    
   \   0000011A   0x9804             LDR      R0,[SP, #+16]
   \   0000011C   0x900A             STR      R0,[SP, #+40]
    263              
    264              if(!--refreshTime){
   \   0000011E   0x1E76             SUBS     R6,R6,#+1
   \   00000120   0x0030             MOVS     R0,R6
   \   00000122   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD150             BNE.N    ??IAR_testeRTC_13
    265                refreshTime = 2;
   \   00000128   0x2002             MOVS     R0,#+2
   \   0000012A   0x0006             MOVS     R6,R0
    266                toogle = ~toogle;
   \   0000012C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000012E   0x43FF             MVNS     R7,R7
    267                
    268                sprintf(strings[0],"%02d",valores[0]);
   \   00000130   0x9A05             LDR      R2,[SP, #+20]
   \   00000132   0x....             LDR.N    R1,??DataTable1_1
   \   00000134   0xA80B             ADD      R0,SP,#+44
   \   00000136   0x.... 0x....      BL       sprintf
    269                sprintf(strings[1],"%02d",valores[1]);
   \   0000013A   0x9A06             LDR      R2,[SP, #+24]
   \   0000013C   0x....             LDR.N    R1,??DataTable1_1
   \   0000013E   0xF10D 0x0031      ADD      R0,SP,#+49
   \   00000142   0x.... 0x....      BL       sprintf
    270                sprintf(strings[2],"%02d",valores[2]);
   \   00000146   0x9A07             LDR      R2,[SP, #+28]
   \   00000148   0x....             LDR.N    R1,??DataTable1_1
   \   0000014A   0xF10D 0x0036      ADD      R0,SP,#+54
   \   0000014E   0x.... 0x....      BL       sprintf
    271                sprintf(strings[3],"%02d",valores[3]);
   \   00000152   0x9A08             LDR      R2,[SP, #+32]
   \   00000154   0x....             LDR.N    R1,??DataTable1_1
   \   00000156   0xF10D 0x003B      ADD      R0,SP,#+59
   \   0000015A   0x.... 0x....      BL       sprintf
    272                sprintf(strings[4],"%02d",valores[4]);
   \   0000015E   0x9A09             LDR      R2,[SP, #+36]
   \   00000160   0x....             LDR.N    R1,??DataTable1_1
   \   00000162   0xA810             ADD      R0,SP,#+64
   \   00000164   0x.... 0x....      BL       sprintf
    273                sprintf(strings[5],"%04d",valores[5]);
   \   00000168   0x9A0A             LDR      R2,[SP, #+40]
   \   0000016A   0x....             LDR.N    R1,??DataTable1_2
   \   0000016C   0xF10D 0x0045      ADD      R0,SP,#+69
   \   00000170   0x.... 0x....      BL       sprintf
    274                  
    275                if(toogle)
   \   00000174   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000176   0x2F00             CMP      R7,#+0
   \   00000178   0xD00D             BEQ.N    ??IAR_testeRTC_14
    276                  memcpy(strings[ponteiro],tracos[ponteiro],tamanhos[ponteiro]);
   \   0000017A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000017C   0x....             LDR.N    R0,??DataTable1_3
   \   0000017E   0x5C2A             LDRB     R2,[R5, R0]
   \   00000180   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000182   0x....             LDR.N    R0,??DataTable1_4
   \   00000184   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000188   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000018A   0x2005             MOVS     R0,#+5
   \   0000018C   0xAB0B             ADD      R3,SP,#+44
   \   0000018E   0xFB00 0x3005      MLA      R0,R0,R5,R3
   \   00000192   0x.... 0x....      BL       memcpy
    277                  
    278                sprintf(bufferLinhas[0],"%s:%s:%s",strings[0],strings[1],strings[2]);
   \                     ??IAR_testeRTC_14:
   \   00000196   0xF10D 0x0036      ADD      R0,SP,#+54
   \   0000019A   0x9000             STR      R0,[SP, #+0]
   \   0000019C   0xF10D 0x0331      ADD      R3,SP,#+49
   \   000001A0   0xAA0B             ADD      R2,SP,#+44
   \   000001A2   0x....             LDR.N    R1,??DataTable1_5
   \   000001A4   0xA813             ADD      R0,SP,#+76
   \   000001A6   0x.... 0x....      BL       sprintf
    279                sprintf(bufferLinhas[1],"%s/%s/%s",strings[3],strings[4],strings[5]);
   \   000001AA   0xF10D 0x0045      ADD      R0,SP,#+69
   \   000001AE   0x9000             STR      R0,[SP, #+0]
   \   000001B0   0xAB10             ADD      R3,SP,#+64
   \   000001B2   0xF10D 0x023B      ADD      R2,SP,#+59
   \   000001B6   0x....             LDR.N    R1,??DataTable1_6
   \   000001B8   0xF10D 0x005D      ADD      R0,SP,#+93
   \   000001BC   0x.... 0x....      BL       sprintf
    280                  
    281                IAR_desenhaDados(bufferLinhas[0],bufferLinhas[1]);
   \   000001C0   0xF10D 0x015D      ADD      R1,SP,#+93
   \   000001C4   0xA813             ADD      R0,SP,#+76
   \   000001C6   0x.... 0x....      BL       IAR_desenhaDados
    282              }
    283                         
    284              vTaskDelay(50);
   \                     ??IAR_testeRTC_13:
   \   000001CA   0x2032             MOVS     R0,#+50
   \   000001CC   0x.... 0x....      BL       vTaskDelay
   \   000001D0   0xE77D             B.N      ??IAR_testeRTC_9
    285              
    286            }// Fim do for;; 
    287          }
   \                     ??IAR_testeRTC_10:
   \                     ??IAR_testeRTC_11:
   \   000001D2   0xB01D             ADD      SP,SP,#+116
   \   000001D4   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     limites

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     `?<Constant "%02d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     `?<Constant "%04d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     tamanhos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     tracos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     `?<Constant "%s:%s:%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     `?<Constant "%s/%s/%s">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "__">`:
   \   00000000   0x5F 0x5F          DC8 "__"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "____">`:
   \   00000000   0x5F 0x5F          DC8 "____"
   \              0x5F 0x5F    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%02d">`:
   \   00000000   0x25 0x30          DC8 "%02d"
   \              0x32 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%04d">`:
   \   00000000   0x25 0x30          DC8 "%04d"
   \              0x34 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s:%s:%s">`:
   \   00000000   0x25 0x73          DC8 "%s:%s:%s"
   \              0x3A 0x25    
   \              0x73 0x3A    
   \              0x25 0x73    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s/%s/%s">`:
   \   00000000   0x25 0x73          DC8 "%s/%s/%s"
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    288          /***********************************************************************************
    289          *       Fim do arquivo
    290          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   IAR_desenhaDados
        16   -> HD44780_posicionaTexto
        16   -> HD44780_writeString
     136   IAR_entry
       136   -> HD44780_writeChar
       136   -> IAR_desenhaDados
       136   -> RTC_getValue
       136   -> RTC_setValue
       136   -> TECLADO_getContadorInatividade
       136   -> TECLADO_getch
       136   -> memcpy
       136   -> sprintf
       136   -> vTaskDelay
     136   IAR_testeRTC
       136   -> HD44780_writeChar
       136   -> IAR_desenhaDados
       136   -> RTC_getValue
       136   -> TECLADO_getContadorInatividade
       136   -> TECLADO_getch
       136   -> memcpy
       136   -> sprintf
       136   -> vTaskDelay
      16   memcpy
        16   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "%02d">
       8  ?<Constant "%04d">
      12  ?<Constant "%s/%s/%s">
      12  ?<Constant "%s:%s:%s">
       4  ?<Constant "__">
       8  ?<Constant "____">
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      36  IAR_desenhaDados
     640  IAR_entry
     470  IAR_testeRTC
      48  limites
      22  memcpy
       8  tamanhos
      24  tracos

 
    24 bytes in section .data
   108 bytes in section .rodata
 1 196 bytes in section .text
 
 1 174 bytes of CODE  memory (+ 22 bytes shared)
   108 bytes of CONST memory
    24 bytes of DATA  memory

Errors: none
Warnings: none

###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      17/Jul/2017  10:55:01 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c               #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c -lC           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\diskio.lst                     #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\diskio.o                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c
      1          /*__________________________________________________________________________________
      2          |	Dextro soluções tecnológicas.
      3          |       
      4          |       Itajaí/SC
      5          |       www.dextro-st.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Dextro and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Dextro
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Dextro e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Dextro ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  diskio.c
     18          |       Descrição          :  Camada de acesso à mídia
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  17/07/2017
     22          |
     23          |       Revisões           :  1.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *       Includes
     31          ***********************************************************************************/
     32          #include "diskio.h"		/* FatFs lower layer API */
     33          
     34          
     35          
     36          /***********************************************************************************
     37          *       Definições
     38          ***********************************************************************************/
     39          /* Definitions of physical drive number for each drive */
     40          #define DEV_RAM		0	/* Example: Map Ramdisk to physical drive 0 */
     41          #define DEV_MMC		1	/* Example: Map MMC/SD card to physical drive 1 */
     42          #define DEV_USB		2	/* Example: Map USB MSD to physical drive 2 */
     43          
     44          /***********************************************************************************
     45          *       Implementação das funções
     46          ***********************************************************************************/
     47          
     48          /***********************************************************************************
     49          *       Descrição       :       Get drive status
     50          *       Parametros      :       nenhum
     51          *       Retorno         :       nenhum
     52          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     53          DSTATUS disk_status(BYTE pdrv){
   \                     disk_status:
   \   00000000   0xB580             PUSH     {R7,LR}
     54            DSTATUS stat;
     55            int result;
     56          
     57            switch (pdrv) {
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD003             BEQ.N    ??disk_status_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD008             BEQ.N    ??disk_status_1
   \   0000000C   0xD304             BCC.N    ??disk_status_2
   \   0000000E   0xE009             B.N      ??disk_status_3
     58              case DEV_RAM :
     59                   return DF_disk_status();
                                 ^
Warning[Pe223]: function "DF_disk_status" declared implicitly
   \                     ??disk_status_0:
   \   00000010   0x.... 0x....      BL       DF_disk_status
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0xE006             B.N      ??disk_status_4
     60              case DEV_MMC :
     61          	 //result = MMC_disk_status();
     62                   // translate the reslut code here
     63                   return stat;
                                 ^
Warning[Pe549]: variable "stat" is used before its value is set

    int result;
        ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c",55  Warning[Pe177]: 
          variable "result" was declared but never referenced
   \                     ??disk_status_2:
   \   00000018   0x0008             MOVS     R0,R1
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0xE003             B.N      ??disk_status_4
     64              case DEV_USB :
     65                   //result = USB_disk_status();
     66                   // translate the reslut code here
     67                   return stat;
   \                     ??disk_status_1:
   \   0000001E   0x0008             MOVS     R0,R1
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0xE000             B.N      ??disk_status_4
     68             }
     69            
     70             return STA_NOINIT;
   \                     ??disk_status_3:
   \   00000024   0x2001             MOVS     R0,#+1
   \                     ??disk_status_4:
   \   00000026   0xBD02             POP      {R1,PC}          ;; return
     71          }
     72          /***********************************************************************************
     73          *       Descrição       :       Inicialização do disco
     74          *       Parametros      :       nenhum
     75          *       Retorno         :       nenhum
     76          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     77          DSTATUS disk_initialize(BYTE pdrv){
   \                     disk_initialize:
   \   00000000   0xB580             PUSH     {R7,LR}
     78            DSTATUS stat;
     79            int result;
     80          
     81            switch (pdrv) {
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD003             BEQ.N    ??disk_initialize_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD008             BEQ.N    ??disk_initialize_1
   \   0000000C   0xD304             BCC.N    ??disk_initialize_2
   \   0000000E   0xE009             B.N      ??disk_initialize_3
     82              case DEV_RAM :
     83                   //result = RAM_disk_initialize();
     84                   // translate the reslut code here
     85                   return DF_disk_initialize();
                                 ^
Warning[Pe223]: function "DF_disk_initialize" declared implicitly
   \                     ??disk_initialize_0:
   \   00000010   0x.... 0x....      BL       DF_disk_initialize
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0xE006             B.N      ??disk_initialize_4
     86              case DEV_MMC :
     87                   //result = MMC_disk_initialize();
     88                   // translate the reslut code here
     89                   return stat;
                                 ^
Warning[Pe549]: variable "stat" is used before its value is set

    int result;
        ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c",79  Warning[Pe177]: 
          variable "result" was declared but never referenced
   \                     ??disk_initialize_2:
   \   00000018   0x0008             MOVS     R0,R1
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0xE003             B.N      ??disk_initialize_4
     90              case DEV_USB :
     91                   //result = USB_disk_initialize();
     92                   // translate the reslut code here
     93                   return stat;
   \                     ??disk_initialize_1:
   \   0000001E   0x0008             MOVS     R0,R1
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0xE000             B.N      ??disk_initialize_4
     94             }
     95            
     96             return STA_NOINIT;
   \                     ??disk_initialize_3:
   \   00000024   0x2001             MOVS     R0,#+1
   \                     ??disk_initialize_4:
   \   00000026   0xBD02             POP      {R1,PC}          ;; return
     97          }
     98          /***********************************************************************************
     99          *       Descrição       :       Lê um bloco do disco
    100          *       Parametros      :       nenhum
    101          *       Retorno         :       nenhum
    102          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    103          DRESULT disk_read(BYTE pdrv,BYTE *buff,DWORD sector,UINT count){
   \                     disk_read:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0011             MOVS     R1,R2
   \   00000006   0x001A             MOVS     R2,R3
    104            DRESULT res;
    105            int result;
    106          
    107            switch (pdrv) {
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD003             BEQ.N    ??disk_read_0
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD00B             BEQ.N    ??disk_read_1
   \   00000012   0xD307             BCC.N    ??disk_read_2
   \   00000014   0xE00C             B.N      ??disk_read_3
    108              case DEV_RAM :
    109                            // translate the arguments here
    110          		  result = DF_disk_read(buff, sector, count);
                 		           ^
Warning[Pe223]: function "DF_disk_read" declared implicitly
   \                     ??disk_read_0:
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x.... 0x....      BL       DF_disk_read
   \   0000001C   0x0001             MOVS     R1,R0
    111          		  // translate the reslut code here
    112          		  return res; 
                 		         ^
Warning[Pe549]: variable "res" is used before its value is set

    int result;
        ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c",105  Warning[Pe550]: 
          variable "result" was set but never used
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0xE006             B.N      ??disk_read_4
    113              case DEV_MMC :
    114          	  	  // translate the arguments here
    115          		  //result = MMC_disk_read(buff, sector, count);
    116          		  // translate the reslut code here
    117          		  return res; 
   \                     ??disk_read_2:
   \   00000024   0x0028             MOVS     R0,R5
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0xE003             B.N      ??disk_read_4
    118              case DEV_USB :
    119          	  	  // translate the arguments here
    120          	          //result = USB_disk_read(buff, sector, count);
    121          		  // translate the reslut code here
    122          		  return res;
   \                     ??disk_read_1:
   \   0000002A   0x0028             MOVS     R0,R5
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0xE000             B.N      ??disk_read_4
    123            }
    124          
    125            return RES_PARERR;
   \                     ??disk_read_3:
   \   00000030   0x2004             MOVS     R0,#+4
   \                     ??disk_read_4:
   \   00000032   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    126          }
    127          /***********************************************************************************
    128          *       Descrição       :       Escreve um bloco no disco
    129          *       Parametros      :       nenhum
    130          *       Retorno         :       nenhum
    131          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    132          DRESULT disk_write(BYTE pdrv,const BYTE *buff,DWORD sector,UINT count){
   \                     disk_write:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0011             MOVS     R1,R2
   \   00000006   0x001A             MOVS     R2,R3
    133            DRESULT res;
    134            int result;
    135            
    136            switch (pdrv) {
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD003             BEQ.N    ??disk_write_0
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD00B             BEQ.N    ??disk_write_1
   \   00000012   0xD307             BCC.N    ??disk_write_2
   \   00000014   0xE00C             B.N      ??disk_write_3
    137              case DEV_RAM :
    138          		// translate the arguments here
    139          		result = DF_disk_write(buff, sector, count);
                 		         ^
Warning[Pe223]: function "DF_disk_write" declared implicitly
   \                     ??disk_write_0:
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x.... 0x....      BL       DF_disk_write
   \   0000001C   0x0001             MOVS     R1,R0
    140          		// translate the reslut code here
    141          		return res;
                 		       ^
Warning[Pe549]: variable "res" is used before its value is set

    int result;
        ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c",134  Warning[Pe550]: 
          variable "result" was set but never used
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0xE006             B.N      ??disk_write_4
    142              case DEV_MMC :
    143          		// translate the arguments here
    144          		//result = MMC_disk_write(buff, sector, count);
    145          		// translate the reslut code here
    146          		return res;
   \                     ??disk_write_2:
   \   00000024   0x0028             MOVS     R0,R5
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0xE003             B.N      ??disk_write_4
    147              case DEV_USB :
    148          		// translate the arguments here
    149          		//result = USB_disk_write(buff, sector, count);
    150          		// translate the reslut code here
    151          		return res;
   \                     ??disk_write_1:
   \   0000002A   0x0028             MOVS     R0,R5
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0xE000             B.N      ??disk_write_4
    152            }
    153          
    154            return RES_PARERR;
   \                     ??disk_write_3:
   \   00000030   0x2004             MOVS     R0,#+4
   \                     ??disk_write_4:
   \   00000032   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    155          }
    156          /***********************************************************************************
    157          *       Descrição       :       Verifica o status do disco
    158          *       Parametros      :       nenhum
    159          *       Retorno         :       nenhum
    160          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    161          DRESULT disk_ioctl(BYTE pdrv,BYTE cmd,void *buff){
   \                     disk_ioctl:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0003             MOVS     R3,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0011             MOVS     R1,R2
    162            DRESULT res;
    163            int result;
    164          
    165            switch (pdrv) {
   \   00000008   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD003             BEQ.N    ??disk_ioctl_0
   \   0000000E   0x2B02             CMP      R3,#+2
   \   00000010   0xD009             BEQ.N    ??disk_ioctl_1
   \   00000012   0xD306             BCC.N    ??disk_ioctl_2
   \   00000014   0xE009             B.N      ??disk_ioctl_3
    166              case DEV_RAM :
    167          		// Process of the command for the RAM drive
    168                          res = DF_disk_ioctl(cmd,buff);
                                       ^
Warning[Pe223]: function "DF_disk_ioctl" declared implicitly

                  res = DF_disk_ioctl(cmd,buff);
                      ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c",168  Warning[Pe188]: 
          enumerated type mixed with another type

    int result;
        ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\diskio.c",163  Warning[Pe177]: 
          variable "result" was declared but never referenced
   \                     ??disk_ioctl_0:
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       DF_disk_ioctl
    169          		return res;
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0xE004             B.N      ??disk_ioctl_4
    170              case DEV_MMC :
    171          		// Process of the command for the MMC/SD card
    172          		return res; 
   \                     ??disk_ioctl_2:
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0xE002             B.N      ??disk_ioctl_4
    173              case DEV_USB :
    174          		// Process of the command the USB drive
    175          		return res;
   \                     ??disk_ioctl_1:
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0xE000             B.N      ??disk_ioctl_4
    176            }
    177          
    178            return RES_PARERR;
   \                     ??disk_ioctl_3:
   \   0000002A   0x2004             MOVS     R0,#+4
   \                     ??disk_ioctl_4:
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
    179          }
    180          /***********************************************************************************
    181          *   Descrição   :   Função para leitura do relógio
    182          *   Parametros  :   nenhum
    183          *   Retorno     :   nenhum
    184          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    185          DWORD get_fattime(void){
   \                     get_fattime:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    186            unsigned char hora,minuto,segundo,dia,mes;
    187            unsigned int ano;  
    188            DWORD relogio=0;
   \   00000004   0x2400             MOVS     R4,#+0
    189            
    190            RTC_getValue(&hora,&minuto,&segundo,&dia,&mes,&ano);
                   ^
Warning[Pe223]: function "RTC_getValue" declared implicitly
   \   00000006   0xA804             ADD      R0,SP,#+16
   \   00000008   0x9001             STR      R0,[SP, #+4]
   \   0000000A   0xA802             ADD      R0,SP,#+8
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0xF10D 0x030A      ADD      R3,SP,#+10
   \   00000012   0xF10D 0x0209      ADD      R2,SP,#+9
   \   00000016   0xF10D 0x010B      ADD      R1,SP,#+11
   \   0000001A   0xA803             ADD      R0,SP,#+12
   \   0000001C   0x.... 0x....      BL       RTC_getValue
    191            
    192            if(ano>2000)
   \   00000020   0x9804             LDR      R0,[SP, #+16]
   \   00000022   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00000026   0xD904             BLS.N    ??get_fattime_0
    193              ano-=2000;
   \   00000028   0x9804             LDR      R0,[SP, #+16]
   \   0000002A   0xF5B0 0x60FA      SUBS     R0,R0,#+2000
   \   0000002E   0x9004             STR      R0,[SP, #+16]
   \   00000030   0xE001             B.N      ??get_fattime_1
    194            else
    195              ano = 32;
   \                     ??get_fattime_0:
   \   00000032   0x2020             MOVS     R0,#+32
   \   00000034   0x9004             STR      R0,[SP, #+16]
    196            ano&= 0x7F;
   \                     ??get_fattime_1:
   \   00000036   0x9804             LDR      R0,[SP, #+16]
   \   00000038   0xF010 0x007F      ANDS     R0,R0,#0x7F
   \   0000003C   0x9004             STR      R0,[SP, #+16]
    197            relogio = ano;
   \   0000003E   0x9C04             LDR      R4,[SP, #+16]
    198          
    199            if(mes>12)
   \   00000040   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000044   0x280D             CMP      R0,#+13
   \   00000046   0xDB02             BLT.N    ??get_fattime_2
    200              mes = 12;
   \   00000048   0x200C             MOVS     R0,#+12
   \   0000004A   0xF88D 0x0008      STRB     R0,[SP, #+8]
    201            mes &= 0x0F;
   \                     ??get_fattime_2:
   \   0000004E   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000052   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000056   0xF88D 0x0008      STRB     R0,[SP, #+8]
    202            relogio<<=4;
   \   0000005A   0x0124             LSLS     R4,R4,#+4
    203            relogio|= mes;
   \   0000005C   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000060   0x4304             ORRS     R4,R0,R4
    204            
    205            if(dia>31)
   \   00000062   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   00000066   0x2820             CMP      R0,#+32
   \   00000068   0xDB02             BLT.N    ??get_fattime_3
    206              dia =31;
   \   0000006A   0x201F             MOVS     R0,#+31
   \   0000006C   0xF88D 0x000A      STRB     R0,[SP, #+10]
    207            relogio<<=5;
   \                     ??get_fattime_3:
   \   00000070   0x0164             LSLS     R4,R4,#+5
    208            relogio|=dia;
   \   00000072   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   00000076   0x4304             ORRS     R4,R0,R4
    209            
    210            if(hora>23)
   \   00000078   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   0000007C   0x2818             CMP      R0,#+24
   \   0000007E   0xDB02             BLT.N    ??get_fattime_4
    211              hora=23;
   \   00000080   0x2017             MOVS     R0,#+23
   \   00000082   0xF88D 0x000C      STRB     R0,[SP, #+12]
    212            relogio<<=5;
   \                     ??get_fattime_4:
   \   00000086   0x0164             LSLS     R4,R4,#+5
    213            relogio |= hora;
   \   00000088   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   0000008C   0x4304             ORRS     R4,R0,R4
    214            
    215            if(minuto>59)
   \   0000008E   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   00000092   0x283C             CMP      R0,#+60
   \   00000094   0xDB02             BLT.N    ??get_fattime_5
    216              minuto = 59;
   \   00000096   0x203B             MOVS     R0,#+59
   \   00000098   0xF88D 0x000B      STRB     R0,[SP, #+11]
    217            relogio<<=5;
   \                     ??get_fattime_5:
   \   0000009C   0x0164             LSLS     R4,R4,#+5
    218            relogio|=minuto;
   \   0000009E   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   000000A2   0x4304             ORRS     R4,R0,R4
    219            
    220            if(segundo>59)
   \   000000A4   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   000000A8   0x283C             CMP      R0,#+60
   \   000000AA   0xDB02             BLT.N    ??get_fattime_6
    221              segundo=59;
   \   000000AC   0x203B             MOVS     R0,#+59
   \   000000AE   0xF88D 0x0009      STRB     R0,[SP, #+9]
    222            segundo>>=1;
   \                     ??get_fattime_6:
   \   000000B2   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x0840             LSRS     R0,R0,#+1
   \   000000BA   0xF88D 0x0009      STRB     R0,[SP, #+9]
    223            relogio<<=4;
   \   000000BE   0x0124             LSLS     R4,R4,#+4
    224            relogio|= segundo;
   \   000000C0   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   000000C4   0x4304             ORRS     R4,R0,R4
    225            
    226            return relogio; 
   \   000000C6   0x0020             MOVS     R0,R4
   \   000000C8   0xB006             ADD      SP,SP,#+24
   \   000000CA   0xBD10             POP      {R4,PC}          ;; return
    227          }
    228          /***********************************************************************************
    229          *       Fim do arquivo
    230          ***********************************************************************************/
    231          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   disk_initialize
         8   -> DF_disk_initialize
       8   disk_ioctl
         8   -> DF_disk_ioctl
      16   disk_read
        16   -> DF_disk_read
       8   disk_status
         8   -> DF_disk_status
      16   disk_write
        16   -> DF_disk_write
      32   get_fattime
        32   -> RTC_getValue


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      40  disk_initialize
      46  disk_ioctl
      52  disk_read
      40  disk_status
      52  disk_write
     204  get_fattime

 
 434 bytes in section .text
 
 434 bytes of CODE memory

Errors: none
Warnings: 16

###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      12/Jul/2017  11:51:17 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\SDCARD\SPI_WRAPPER_SD.C           #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\SDCARD\SPI_WRAPPER_SD.C -lC       #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\SPI_WRAPPER_SD.lst             #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\SPI_WRAPPER_SD.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\SDCARD\SPI_WRAPPER_SD.C
      1          /*__________________________________________________________________________________
      2          |	Chave Digital Tecnologia Eletronica Ltda. 
      3          |       
      4          |       Balneário Camboriú - SC
      5          |       www.chavedigital.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Chave Digital and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Chave Digital
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Chave Digital e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Chave Digital ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :
     18          |       Descrição          :
     19          | 
     20          |       Autor              :
     21          |       Data criação       :
     22          |
     23          |       Revisões           :
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *   Includes
     31          ***********************************************************************************/
     32          #include <nxp\iolpc1768.h>

   \                                 In section .noinit, at 0x400fc1a8
   \   __absolute union <unnamed> volatile _A_PCLKSEL0
   \                     _A_PCLKSEL0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x400fc0c4
   \   __absolute union <unnamed> volatile _A_PCONP
   \                     _A_PCONP:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4002c000
   \   __absolute union <unnamed> volatile _A_PINSEL0
   \                     _A_PINSEL0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c000
   \   __absolute union <unnamed> volatile _A_FIO0DIR
   \                     _A_FIO0DIR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c018
   \   __absolute union <unnamed> volatile _A_FIO0SET
   \                     _A_FIO0SET:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c01c
   \   __absolute union <unnamed> volatile _A_FIO0CLR
   \                     _A_FIO0CLR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x40030000
   \   __absolute union <unnamed> volatile _A_SSP1CR0
   \                     _A_SSP1CR0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x40030004
   \   __absolute union <unnamed> volatile _A_SSP1CR1
   \                     _A_SSP1CR1:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x40030008
   \   __absolute union <unnamed> volatile _A_SSP1DR
   \                     _A_SSP1DR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4003000c
   \   __absolute union <unnamed> const volatile _A_SSP1SR
   \                     _A_SSP1SR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x40030010
   \   __absolute union <unnamed> volatile _A_SSP1CPSR
   \                     _A_SSP1CPSR:
   \   00000000                      DS8 4
     33          #include "spi_wrapper_sd.h"
     34          
     35          /***********************************************************************************
     36          *   Definições
     37          ***********************************************************************************/
     38          #define SSP_SR_TFE            ((unsigned int)(1<<0)) 
     39          #define SSP_SR_TNF            ((unsigned int)(1<<1)) 
     40          #define SSP_SR_RNE            ((unsigned int)(1<<2)) 
     41          #define SSP_SR_RFF            ((unsigned int)(1<<3)) 
     42          #define SSP_SR_BSY            ((unsigned int)(1<<4)) 
     43          #define SSP_SR_BITMASK	      ((unsigned int)(0x1F)) 
     44          
     45          #define CS_PIN_               (0x01)<<6
     46          #define SPI_PCLK              64000000
     47          /***********************************************************************************
     48          *   Implementação
     49          ***********************************************************************************/
     50          
     51          /***********************************************************************************
     52          * @brief  Initializes the SSP0.
     53          *
     54          * @param  None
     55          * @retval None 
     56          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     57          void SPI_Init (void){
   \                     SPI_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     58            
     59            // Liga a energia pro módulo  
     60            PCONP_bit.PCSSP1 = 1;
   \   00000002   0x....             LDR.N    R0,??DataTable4  ;; 0x400fc0c4
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   0000000A   0x....             LDR.N    R1,??DataTable4  ;; 0x400fc0c4
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     61            
     62            // Inicia o chipselect em nível alto
     63            FIO0DIR |= CS_PIN_;
   \   0000000E   0x....             LDR.N    R0,??DataTable4_1  ;; 0x2009c000
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000016   0x....             LDR.N    R1,??DataTable4_1  ;; 0x2009c000
   \   00000018   0x6008             STR      R0,[R1, #+0]
     64            FIO0SET |= CS_PIN_;    
   \   0000001A   0x....             LDR.N    R0,??DataTable4_2  ;; 0x2009c018
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000022   0x....             LDR.N    R1,??DataTable4_2  ;; 0x2009c018
   \   00000024   0x6008             STR      R0,[R1, #+0]
     65            
     66            // Configura a função SPI1 para os pinos
     67            PINSEL0_bit.P0_7 = 0x02;
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x....             LDR.N    R1,??DataTable4_3  ;; 0x4002c000
   \   0000002A   0x6809             LDR      R1,[R1, #+0]
   \   0000002C   0xF360 0x318F      BFI      R1,R0,#+14,#+2
   \   00000030   0x....             LDR.N    R0,??DataTable4_3  ;; 0x4002c000
   \   00000032   0x6001             STR      R1,[R0, #+0]
     68            PINSEL0_bit.P0_8 = 0x02;
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0x....             LDR.N    R1,??DataTable4_3  ;; 0x4002c000
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0xF360 0x4111      BFI      R1,R0,#+16,#+2
   \   0000003E   0x....             LDR.N    R0,??DataTable4_3  ;; 0x4002c000
   \   00000040   0x6001             STR      R1,[R0, #+0]
     69            PINSEL0_bit.P0_9 = 0x02;
   \   00000042   0x2002             MOVS     R0,#+2
   \   00000044   0x....             LDR.N    R1,??DataTable4_3  ;; 0x4002c000
   \   00000046   0x6809             LDR      R1,[R1, #+0]
   \   00000048   0xF360 0x4193      BFI      R1,R0,#+18,#+2
   \   0000004C   0x....             LDR.N    R0,??DataTable4_3  ;; 0x4002c000
   \   0000004E   0x6001             STR      R1,[R0, #+0]
     70              
     71            /* Configure SSP0_PCLK to CCLK(100MHz), default value is CCLK/4 */    
     72            //LPC_SC->PCLKSEL1 &= ~(3 << 10);
     73            //LPC_SC->PCLKSEL1 |=  (1 << 10);  /* SSP0_PCLK=CCLK */
     74            PCLKSEL0_bit.PCLK_SSP1 = 0;//1;
   \   00000050   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400fc1a8
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF430 0x1040      BICS     R0,R0,#0x300000
   \   00000058   0x....             LDR.N    R1,??DataTable4_4  ;; 0x400fc1a8
   \   0000005A   0x6008             STR      R0,[R1, #+0]
     75              
     76            /* 8bit, SPI frame format, CPOL=0, CPHA=0, SCR=0 */  
     77            //LPC_SSP1->CR0 = (0x07 << 0) |     /* data width: 8bit*/
     78            //                (0x00 << 4) |     /* frame format: SPI */
     79            //                (0x00 << 6) |     /* CPOL: low level */
     80            //                (0x00 << 7) |     /* CPHA: first edge */
     81            //                (0x00 << 8);      /* SCR = 0 */
     82            SSP1CR0 = (0x07 << 0) |     /* data width: 8bit*/
     83                      (0x00 << 4) |     /* frame format: SPI */
     84                      (0x00 << 6) |     /* CPOL: low level */
     85                      (0x00 << 7) |     /* CPHA: first edge */
     86                      (0x00 << 8);      /* SCR = 0 */
   \   0000005C   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40030000
   \   0000005E   0x2107             MOVS     R1,#+7
   \   00000060   0x6001             STR      R1,[R0, #+0]
     87            
     88            /* Enable SSP0 as a master */
     89            //LPC_SSP1->CR1 = (0x00 << 0) |   /* Normal mode */
     90            //                (0x01 << 1) |   /* Enable SSP0 */
     91            //                (0x00 << 2) |   /* Master */
     92            //                (0x00 << 3);    /* slave output disabled */
     93            
     94            SSP1CR1 = (0x00 << 0) |   /* Normal mode */
     95                      (0x01 << 1) |   /* Enable SSP0 */
     96                      (0x00 << 2) |   /* Master */
     97                      (0x00 << 3);    /* slave output disabled */    
   \   00000062   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40030004
   \   00000064   0x2102             MOVS     R1,#+2
   \   00000066   0x6001             STR      R1,[R0, #+0]
     98          
     99            /* Configure SSP1 clock rate to 400kHz (100MHz/250) */
    100            SPI_ConfigClockRate (SPI_CLOCKRATE_LOW);
   \   00000068   0x....             LDR.N    R0,??DataTable4_7  ;; 0x3d0900
   \   0000006A   0x.... 0x....      BL       SPI_ConfigClockRate
    101            
    102            /* Set SSEL to high */
    103            SPI_CS_High ();
   \   0000006E   0x.... 0x....      BL       SPI_CS_High
    104          }
   \   00000072   0xBD01             POP      {R0,PC}          ;; return
   \   00000074                      REQUIRE _A_PCONP
   \   00000074                      REQUIRE _A_FIO0DIR
   \   00000074                      REQUIRE _A_FIO0SET
   \   00000074                      REQUIRE _A_PINSEL0
   \   00000074                      REQUIRE _A_PCLKSEL0
   \   00000074                      REQUIRE _A_SSP1CR0
   \   00000074                      REQUIRE _A_SSP1CR1
    105          /***********************************************************************************
    106          * @brief  Configure SSP0 clock rate.
    107          *
    108          * @param  SPI_CLOCKRATE: Specifies the SPI clock rate.
    109          *         The value should be SPI_CLOCKRATE_LOW or SPI_CLOCKRATE_HIGH.
    110          * @retval None 
    111          *
    112          * SSP0_CLK = CCLK / SPI_CLOCKRATE
    113          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    114          void SPI_ConfigClockRate (unsigned int SPI_CLOCKRATE){
    115            unsigned int divisor;
    116            
    117            divisor = SPI_PCLK/SPI_CLOCKRATE;
   \                     SPI_ConfigClockRate:
   \   00000000   0x....             LDR.N    R1,??DataTable4_8  ;; 0x3d09000
   \   00000002   0xFBB1 0xF0F0      UDIV     R0,R1,R0
    118            divisor &=~(0x01); // Aham!!!! Me diga o que isso faz!!!!! Se souber, está contratado!!!!
   \   00000006   0x0840             LSRS     R0,R0,#+1
   \   00000008   0x0040             LSLS     R0,R0,#+1
    119            
    120            SSP1CR0_bit.SCR = divisor<<8;  
   \   0000000A   0x0201             LSLS     R1,R0,#+8
   \   0000000C   0x....             LDR.N    R2,??DataTable4_5  ;; 0x40030000
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0xF432 0x427F      BICS     R2,R2,#0xFF00
   \   00000014   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40030000
   \   00000016   0x601A             STR      R2,[R3, #+0]
    121            SSP1CPSR = divisor;  
   \   00000018   0x....             LDR.N    R2,??DataTable4_9  ;; 0x40030010
   \   0000001A   0x6010             STR      R0,[R2, #+0]
    122          }
   \   0000001C   0x4770             BX       LR               ;; return
   \   0000001E                      REQUIRE _A_SSP1CR0
   \   0000001E                      REQUIRE _A_SSP1CPSR
    123          /***********************************************************************************
    124          * @brief  Set SSEL to low: select spi slave.
    125          *
    126          * @param  None.
    127          * @retval None 
    128          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    129          void SPI_CS_Low (void){
    130          
    131            FIO0CLR |= CS_PIN_;
   \                     SPI_CS_Low:
   \   00000000   0x....             LDR.N    R0,??DataTable4_10  ;; 0x2009c01c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000008   0x....             LDR.N    R1,??DataTable4_10  ;; 0x2009c01c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    132          }
   \   0000000C   0x4770             BX       LR               ;; return
   \   0000000E                      REQUIRE _A_FIO0CLR
    133          /***********************************************************************************
    134          * @brief  Set SSEL to high: de-select spi slave.
    135          *
    136          * @param  None.
    137          * @retval None 
    138          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    139          void SPI_CS_High (void){
    140            
    141            FIO0SET |= CS_PIN_;
   \                     SPI_CS_High:
   \   00000000   0x....             LDR.N    R0,??DataTable4_2  ;; 0x2009c018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000008   0x....             LDR.N    R1,??DataTable4_2  ;; 0x2009c018
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    142          }
   \   0000000C   0x4770             BX       LR               ;; return
   \   0000000E                      REQUIRE _A_FIO0SET
    143          /***********************************************************************************
    144          * @brief  Send one byte via MOSI and simutaniously receive one byte via MISO.
    145          *
    146          * @param  data: Specifies the byte to be sent out.
    147          * @retval Returned byte.
    148          *
    149          * Note: Each time send out one byte at MOSI, Rx FIFO will receive one byte. 
    150          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    151          unsigned char SPI_SendByte (unsigned char data){ 
    152            unsigned char temp;
    153            
    154            while(! (SSP1SR & 0x02));//Se está setado é pq o buffer está cheio
   \                     SPI_SendByte:
   \                     ??SPI_SendByte_0:
   \   00000000   0x....             LDR.N    R1,??DataTable4_11  ;; 0x4003000c
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0x0789             LSLS     R1,R1,#+30
   \   00000006   0xD5FB             BPL.N    ??SPI_SendByte_0
    155            SSP1DR = data;
   \   00000008   0x....             LDR.N    R1,??DataTable4_12  ;; 0x40030008
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    156            while(! (SSP1SR & 0x04));//
   \                     ??SPI_SendByte_1:
   \   0000000E   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4003000c
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x0740             LSLS     R0,R0,#+29
   \   00000014   0xD5FB             BPL.N    ??SPI_SendByte_1
    157            temp = SSP1DR;  
   \   00000016   0x....             LDR.N    R0,??DataTable4_12  ;; 0x40030008
   \   00000018   0x6800             LDR      R0,[R0, #+0]
    158            
    159            return temp;
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x4770             BX       LR               ;; return
   \   0000001E                      REQUIRE _A_SSP1SR
   \   0000001E                      REQUIRE _A_SSP1DR
    160          }
    161          /***********************************************************************************
    162          * @brief  Receive one byte via MISO.
    163          *
    164          * @param  None.
    165          * @retval Returned received byte.
    166          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    167          unsigned char SPI_RecvByte (void){
   \                     SPI_RecvByte:
   \   00000000   0xB580             PUSH     {R7,LR}
    168          
    169            return SPI_SendByte (0xFF);
   \   00000002   0x20FF             MOVS     R0,#+255
   \   00000004   0x.... 0x....      BL       SPI_SendByte
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    170          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x400FC0C4         DC32     0x400fc0c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x2009C000         DC32     0x2009c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x2009C018         DC32     0x2009c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x4002C000         DC32     0x4002c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x400FC1A8         DC32     0x400fc1a8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40030000         DC32     0x40030000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40030004         DC32     0x40030004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x003D0900         DC32     0x3d0900

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x03D09000         DC32     0x3d09000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x40030010         DC32     0x40030010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x2009C01C         DC32     0x2009c01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x4003000C         DC32     0x4003000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x40030008         DC32     0x40030008
    171          /***********************************************************************************
    172          * Fim do arquivo
    173          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SPI_CS_High
       0   SPI_CS_Low
       0   SPI_ConfigClockRate
       8   SPI_Init
         8   -> SPI_CS_High
         8   -> SPI_ConfigClockRate
       8   SPI_RecvByte
         8   -> SPI_SendByte
       0   SPI_SendByte


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      14  SPI_CS_High
      14  SPI_CS_Low
      30  SPI_ConfigClockRate
     116  SPI_Init
      10  SPI_RecvByte
      30  SPI_SendByte
       4  _A_FIO0CLR
       4  _A_FIO0DIR
       4  _A_FIO0SET
       4  _A_PCLKSEL0
       4  _A_PCONP
       4  _A_PINSEL0
       4  _A_SSP1CPSR
       4  _A_SSP1CR0
       4  _A_SSP1CR1
       4  _A_SSP1DR
       4  _A_SSP1SR

 
  44 bytes in section .noinit (abs)
 266 bytes in section .text
 
 266 bytes of CODE memory
   0 bytes of DATA memory (+ 44 bytes shared)

Errors: none
Warnings: none

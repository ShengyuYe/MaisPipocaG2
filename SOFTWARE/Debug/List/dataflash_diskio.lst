###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      17/Jul/2017  11:26:48 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\FILESYSTEM\dataflash_diskio.c     #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\FILESYSTEM\dataflash_diskio.c     #
#                    -lC C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\Mai #
#                    sPipocaG2\SOFTWARE\Debug\List\ -lA                       #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\dataflash_diskio.lst           #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\dataflash_diskio.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\dataflash_diskio.c
      1          /*__________________________________________________________________________________
      2          |	Dextro soluções tecnológicas.
      3          |       
      4          |       Itajaí/SC
      5          |       www.dextro-st.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Dextro and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Dextro
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Dextro e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Dextro ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  flash_diskio.c
     18          |       Descrição          :  Camada de acesso à memória flash
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  11/07/2017
     22          |
     23          |       Revisões           :  1.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          /**********************************************************************************
     29          *       Includes
     30          **********************************************************************************/
     31          #include <stdio.h>
     32          #include <stdlib.h>
     33          #include <string.h>
     34          #include "diskio.h"
     35          #include "integer.h"
     36          #include "..\..\includes.h"
     37          
     38          /**********************************************************************************
     39          *       Definições
     40          **********************************************************************************/
     41          #define DF_SECTOR_SIZE                  4096
     42          
     43          /**********************************************************************************
     44          *       Variaveis locais
     45          **********************************************************************************/
     46          DSTATUS dfStatus=STA_NOINIT;
     47          
     48          /**********************************************************************************
     49          *       Funções locais
     50          **********************************************************************************/
     51          
     52          
     53          /**********************************************************************************
     54          *       Implementação das funções
     55          **********************************************************************************/
     56          
     57          /***********************************************************************************
     58          *   Descrição   :   Inicialização dos drives do sistema
     59          *   Parametros  :   (unsigned char) número do drive
     60          *   Retorno     :   (DSTATUS) 
     61          ***********************************************************************************/
     62          unsigned int DF_disk_initialize(void){
     63              
     64            dfStatus |= STA_NOINIT;    
     65            return STA_NOINIT;
     66          }
     67          /***********************************************************************************
     68          *     Descrição   :   Lê o status do disco passado no parametro
     69          *     Parametros  :   (unsigned char) número do drive
     70          *     Retorno     :   nenhum
     71          ***********************************************************************************/
     72          DSTATUS DF_disk_status (void){
     73          
     74            return dfStatus;
     75          }
     76          /***********************************************************************************
     77          *     Descrição   :   Lê um setor de uma das unidades de disco
     78          *     Parametros  :   (unsigned char) drive
     79          *                     (unsigned char*) buffer
     80          *                     (unsigned long int) setor
     81          *                     (unsigned char) tamanho do bloco lido
     82          *     Retorno     :   (DRESULT)
     83          ***********************************************************************************/
     84          DRESULT DF_disk_read (unsigned char *buffer,DWORD sector,unsigned char count){
     85            
     86            MEMORYWRAPPER_readBytes(sector*DF_SECTOR_SIZE,buffer,count);
     87            return RES_OK;  
     88          }
     89          /***********************************************************************************
     90          *     Descrição   :   Escreve em um setor de um determinado disco
     91          *     Parametros  :   (unsigned char) drive
     92          *                     (unsigned char*) buffer
     93          *                     (unsigned int) número do setor
     94          *                     (unsigned char) tamanho do bloco escrito
     95          *     Retorno     :   (DRESULT)
     96          ***********************************************************************************/
     97          DRESULT DF_disk_write(unsigned char *buff,DWORD sector,unsigned char byte){
     98          
     99            MEMORYWRAPPER_writeBytes(sector*DF_SECTOR_SIZE,buff,byte);
    100            return RES_OK;  
    101          }
    102          /***********************************************************************************
    103          *   Descrição   :   Controle de funções específicas do disco
    104          *   Parametros  :   (unsigned char) drive
    105          *                   (unsigned char) comando
    106          *                   (void*) ponteiro para a estrutura de controle do 
    107          *                   comando que será executado
    108          *   Retorno     :   nenhum
    109          ***********************************************************************************/
    110          DRESULT DF_disk_ioctl(unsigned char ctrl,void *buff){
    111          
    112            if(ctrl==GET_BLOCK_SIZE)
    113              *(unsigned int*)buff = DF_SECTOR_SIZE;
    114            
    115            return RES_ERROR;
    116          }
    117          /**********************************************************************************
    118          *       Fim do arquivo
    119          **********************************************************************************/
    120          void DF_teste_file_system(void){
    121              DWORD plist[] = {50, 50, 0, 0};  /* Divide drive into two partitions */
    122              BYTE work[32];
    123          
    124              f_fdisk(0, plist, work);                    /* Divide physical drive 0 */
    125          
    126              //f_mkfs("0:", FM_ANY, work, 32);
    127              f_mkfs("0:", FM_ANY,(void*)work,32);
                                         ^
Error[Pe167]: argument of type "void *" is incompatible with parameter of type
          "DWORD"

      f_mkfs("0:", FM_ANY,(void*)work,32);
                                      ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\dataflash_diskio.c",127  Error[Pe167]: 
          argument of type "int" is incompatible with parameter of type
          "void *"

      f_mkfs("0:", FM_ANY,(void*)work,32);
                                        ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\FILESYSTEM\dataflash_diskio.c",127  Error[Pe165]: 
          too few arguments in function call
    128              //f_mkfs("1:", FM_ANY, work, sizeof work);    /* Create FAT volume on the logical drive 1 */
    129          }

Errors: 3
Warnings: none

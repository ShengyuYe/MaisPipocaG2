###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      13/Sep/2017  18:09:24 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\menu_ser #
#                    vico.c                                                   #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\menu_ser #
#                    vico.c -lC C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\L #
#                    ist\ -lA C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Lis #
#                    t\ -o C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\   #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\menu_se #
#                    rvico.lst                                                #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\menu_ser #
#                    vico.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\menu_servico.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  menu_servico.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :  23/04/2017
     21          |
     22          |       Revisões           :  001
     23          |
     24          |                             (23/04/2017) criado menu para acesso às funções
     25          |                              de limpeza, resfriamento, dose e embalagem
     26          |
     27          |
     28          | __________________________________________________________________________________
     29          */
     30          
     31          /***********************************************************************************
     32          *       Includes
     33          ***********************************************************************************/
     34          #include <stdio.h>
     35          #include <stdlib.h>
     36          #include <string.h>
     37          #include "..\includes.h"
     38          #include "menu_servico.h"
     39          #include "preparacao.h"
     40          
     41          /***********************************************************************************
     42          *       Definfições locais
     43          ***********************************************************************************/
     44          
     45          
     46          
     47          /***********************************************************************************
     48          *       Constantes
     49          ***********************************************************************************/
     50          
     51          
     52          /***********************************************************************************
     53          *       Variaveis locais
     54          ***********************************************************************************/
     55          
     56          
     57          /***********************************************************************************
     58          *       Funções locais
     59          ***********************************************************************************/
     60          void MSERVICO_limpeza(void);
     61          void MSERVICO_libera_embalagem(void);
     62          void MSERVICO_dosa_porcao(void);
     63          void MSERVICO_resfriamento(void);
     64          void MSERVICO_preparacao(void);
     65          
     66          /***********************************************************************************
     67          *       tabela de funções
     68          ***********************************************************************************/

   \                                 In section .rodata, align 4
     69          void(*const MSERVICO_funcs[])(void)={
   \                     MSERVICO_funcs:
   \   00000000   0x........         DC32 MSERVICO_limpeza, MSERVICO_libera_embalagem, MSERVICO_dosa_porcao
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 MSERVICO_resfriamento, MSERVICO_preparacao, 0H
   \              0x........   
   \              0x00000000   
     70            MSERVICO_limpeza,
     71            MSERVICO_libera_embalagem,
     72            MSERVICO_dosa_porcao,
     73            MSERVICO_resfriamento,
     74            MSERVICO_preparacao,
     75            NULL  
     76          };
     77          
     78          /***********************************************************************************
     79          *       Implementação das funções
     80          ***********************************************************************************/
     81          
     82          /***********************************************************************************
     83          *       Descrição       :       Ponto de entrada do menu de serviço
     84          *       Parametros      :       nenhum
     85          *       Retorno         :       nenhum
     86          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     87          void MSERVICO_entry(void){
   \                     MSERVICO_entry:
   \   00000000   0xB510             PUSH     {R4,LR}
     88            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
     89            
     90            MENUROLAGEM_show((char*)STRING_titulo_menu_servico[idioma],
                   ^
Warning[Pe223]: function "MENUROLAGEM_show" declared implicitly
     91                             (char**)STRING_menu_servico[idioma],
     92                             QTD_OPCOES_SERVICO,
     93                             (void(**)(void))MSERVICO_funcs);   
   \   00000008   0x....             LDR.N    R3,??DataTable4
   \   0000000A   0x2206             MOVS     R2,#+6
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2018             MOVS     R0,#+24
   \   00000010   0x....             LDR.N    R1,??DataTable4_1
   \   00000012   0xFB00 0x1104      MLA      R1,R0,R4,R1
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x....             LDR.N    R0,??DataTable4_2
   \   0000001A   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000001E   0x.... 0x....      BL       MENUROLAGEM_show
     94          }
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
     95          /***********************************************************************************
     96          *       Descrição       :       Executa a limpeza 
     97          *       Parametors      :       nenhum
     98          *       Retorno         :       nenhum
     99          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          void MSERVICO_limpeza(void){
   \                     MSERVICO_limpeza:
   \   00000000   0xB510             PUSH     {R4,LR}
    101            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    102            
    103            STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_limpeza_inicial[idioma][0],(char*)STRING_mensagem_limpeza_inicial[idioma][1]);
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x....             LDR.N    R0,??DataTable4_3
   \   0000000C   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000010   0x6842             LDR      R2,[R0, #+4]
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x....             LDR.N    R0,??DataTable4_3
   \   00000016   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       STRING_write_to_external
    104            PREPARACAO_limpeza(idioma);
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x.... 0x....      BL       PREPARACAO_limpeza
    105            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);  
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       STRING_write_to_internal
    106          }
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    107          /***********************************************************************************
    108          *       Descrição       :       Faz o avanço das embalagens
    109          *       Parametros      :       nenhum
    110          *       Retorno         :       nenhum
    111          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    112          void MSERVICO_libera_embalagem(void){
   \                     MSERVICO_libera_embalagem:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    113            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0004             MOVS     R4,R0
    114            unsigned int tempo;
    115            
    116            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       STRING_write_to_internal
    117            STRING_write_to_internal(NO_CLEAR,(char*)STRING_mensagem_libera_embalagem[idioma][0],(char*)STRING_mensagem_libera_embalagem[idioma][1]);
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x....             LDR.N    R0,??DataTable4_4
   \   00000018   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001C   0x6842             LDR      R2,[R0, #+4]
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x....             LDR.N    R0,??DataTable4_4
   \   00000022   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       STRING_write_to_internal
    118            
    119            PARAMETROS_le(ADR_TEMPO_EMBALAGEM,(void*)&tempo);
   \   0000002C   0xA900             ADD      R1,SP,#+0
   \   0000002E   0x201C             MOVS     R0,#+28
   \   00000030   0x.... 0x....      BL       PARAMETROS_le
    120            
    121            EMBALAGEM_libera_pacote(tempo);  
   \   00000034   0x9800             LDR      R0,[SP, #+0]
   \   00000036   0x.... 0x....      BL       EMBALAGEM_libera_pacote
    122            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x.... 0x....      BL       STRING_write_to_internal
    123          }
   \   00000044   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    124          /***********************************************************************************
    125          *       Descrição       :       Faz a dosagem de uma porção de milho
    126          *       Parametros      :       nenhum
    127          *       Retorno         :       nenhum
    128          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    129          void MSERVICO_dosa_porcao(void){
   \                     MSERVICO_dosa_porcao:
   \   00000000   0xB510             PUSH     {R4,LR}
    130            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    131              
    132            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       STRING_write_to_internal
    133            STRING_write_to_internal(NO_CLEAR,(char*)STRING_mensagem_dosando_milho[idioma][0],(char*)STRING_mensagem_dosando_milho[idioma][1]);
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x....             LDR.N    R0,??DataTable4_5
   \   00000016   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001A   0x6842             LDR      R2,[R0, #+4]
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x....             LDR.N    R0,??DataTable4_5
   \   00000020   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       STRING_write_to_internal
    134            
    135            PREPARACAO_dosagem_milho();
                   ^
Warning[Pe223]: function "PREPARACAO_dosagem_milho" declared implicitly
   \   0000002A   0x.... 0x....      BL       PREPARACAO_dosagem_milho
    136            
    137            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);    
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       STRING_write_to_internal
    138          }
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    139          /***********************************************************************************
    140          *       Descrição       :       Faz o processo de resfriamento da resistência
    141          *       Parametros      :       nenhum
    142          *       Retorno         :       nenhum
    143          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    144          void MSERVICO_resfriamento(void){
   \                     MSERVICO_resfriamento:
   \   00000000   0xB510             PUSH     {R4,LR}
    145            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    146            
    147            PREPARACAO_resfriamento(idioma);
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       PREPARACAO_resfriamento
    148          }
   \   00000010   0xBD10             POP      {R4,PC}          ;; return
    149          /***********************************************************************************
    150          *       Descrição       :       Faz a preparação de uma pipoca
    151          *       Parametros      :       nenhum
    152          *       Retorno         :       nenhum
    153          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    154          void MSERVICO_preparacao(void){
   \                     MSERVICO_preparacao:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    155            unsigned int temp;
    156            unsigned char idioma = APLICACAO_carrega_idioma();  
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0004             MOVS     R4,R0
    157            ePREPARACAO_RESULT resultado;
    158            eTECLA tecla;
    159            
    160            resultado = PREPARACAO_entry(&temp,NAO_CONTABILIZA);
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       PREPARACAO_entry
   \   00000012   0x0005             MOVS     R5,R0
    161            
    162            switch(resultado){
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2D01             CMP      R5,#+1
   \   00000018   0xD007             BEQ.N    ??MSERVICO_preparacao_0
   \   0000001A   0xD32A             BCC.N    ??MSERVICO_preparacao_1
   \   0000001C   0x2D03             CMP      R5,#+3
   \   0000001E   0xD00E             BEQ.N    ??MSERVICO_preparacao_2
   \   00000020   0xD304             BCC.N    ??MSERVICO_preparacao_3
   \   00000022   0x2D05             CMP      R5,#+5
   \   00000024   0xD01D             BEQ.N    ??MSERVICO_preparacao_4
   \   00000026   0xD313             BCC.N    ??MSERVICO_preparacao_5
   \   00000028   0xE023             B.N      ??MSERVICO_preparacao_1
    163              case FALHA_VENTILADOR:      
    164                   break;
   \                     ??MSERVICO_preparacao_0:
   \   0000002A   0xE022             B.N      ??MSERVICO_preparacao_1
    165              case FALHA_RESISTENCIA:
    166                   STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E0:VENTILADOR");                       
   \                     ??MSERVICO_preparacao_3:
   \   0000002C   0x....             LDR.N    R2,??DataTable4_6
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0x....             LDR.N    R0,??DataTable4_7
   \   00000032   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       STRING_write_to_external
    167                   break;
   \   0000003C   0xE019             B.N      ??MSERVICO_preparacao_1
    168              case FALHA_DOSE:
    169                   STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E1:AQUECIMENTO");
   \                     ??MSERVICO_preparacao_2:
   \   0000003E   0x....             LDR.N    R2,??DataTable4_8
   \   00000040   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000042   0x....             LDR.N    R0,??DataTable4_7
   \   00000044   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      BL       STRING_write_to_external
    170                   break;
   \   0000004E   0xE010             B.N      ??MSERVICO_preparacao_1
    171              case FALHA_EMBALAGEM:
    172                   STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E2:DOSADOR");          
   \                     ??MSERVICO_preparacao_5:
   \   00000050   0x....             LDR.N    R2,??DataTable4_9
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0x....             LDR.N    R0,??DataTable4_7
   \   00000056   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       STRING_write_to_external
    173                   break;
   \   00000060   0xE007             B.N      ??MSERVICO_preparacao_1
    174              case FALHA_FALTA_TROCO:
    175                   STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E3:EMBALAGEM");                                                 
   \                     ??MSERVICO_preparacao_4:
   \   00000062   0x....             LDR.N    R2,??DataTable4_10
   \   00000064   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000066   0x....             LDR.N    R0,??DataTable4_7
   \   00000068   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       STRING_write_to_external
    176                   break;
    177            }
    178            PREPARACAO_resfriamento(idioma);
   \                     ??MSERVICO_preparacao_1:
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       PREPARACAO_resfriamento
    179            
    180            STRING_write_to_internal(CLEAR_DISPLAY,"FALHA","PROCESSO");
   \   0000007A   0x....             LDR.N    R2,??DataTable4_11
   \   0000007C   0x....             LDR.N    R1,??DataTable4_12
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      BL       STRING_write_to_internal
    181            
    182            while(resultado != SUCESSO){
   \                     ??MSERVICO_preparacao_6:
   \   00000084   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000086   0x2D00             CMP      R5,#+0
   \   00000088   0xD008             BEQ.N    ??MSERVICO_preparacao_7
    183              
    184              tecla = TECLADO_getch();
   \   0000008A   0x.... 0x....      BL       TECLADO_getch
   \   0000008E   0x0006             MOVS     R6,R0
    185              switch(tecla){
   \   00000090   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000092   0x2E01             CMP      R6,#+1
   \   00000094   0xD1F6             BNE.N    ??MSERVICO_preparacao_6
    186                case TECLA_ESC: resultado = SUCESSO;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x0005             MOVS     R5,R0
    187                     break;
   \   0000009A   0xE7F3             B.N      ??MSERVICO_preparacao_6
    188              }
    189            }
    190          }
   \                     ??MSERVICO_preparacao_7:
   \   0000009C   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     MSERVICO_funcs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     STRING_menu_servico

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     STRING_titulo_menu_servico

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     STRING_mensagem_limpeza_inicial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     STRING_mensagem_libera_embalagem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     STRING_mensagem_dosando_milho

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     `?<Constant "E0:VENTILADOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     STRING_mensagem_fora_servico

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     `?<Constant "E1:AQUECIMENTO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     `?<Constant "E2:DOSADOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant "E3:EMBALAGEM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     `?<Constant "PROCESSO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     `?<Constant "FALHA">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "E0:VENTILADOR">`:
   \   00000000   0x45 0x30          DC8 "E0:VENTILADOR"
   \              0x3A 0x56    
   \              0x45 0x4E    
   \              0x54 0x49    
   \              0x4C 0x41    
   \              0x44 0x4F    
   \              0x52 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E1:AQUECIMENTO">`:
   \   00000000   0x45 0x31          DC8 "E1:AQUECIMENTO"
   \              0x3A 0x41    
   \              0x51 0x55    
   \              0x45 0x43    
   \              0x49 0x4D    
   \              0x45 0x4E    
   \              0x54 0x4F    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E2:DOSADOR">`:
   \   00000000   0x45 0x32          DC8 "E2:DOSADOR"
   \              0x3A 0x44    
   \              0x4F 0x53    
   \              0x41 0x44    
   \              0x4F 0x52    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E3:EMBALAGEM">`:
   \   00000000   0x45 0x33          DC8 "E3:EMBALAGEM"
   \              0x3A 0x45    
   \              0x4D 0x42    
   \              0x41 0x4C    
   \              0x41 0x47    
   \              0x45 0x4D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "FALHA">`:
   \   00000000   0x46 0x41          DC8 "FALHA"
   \              0x4C 0x48    
   \              0x41 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "PROCESSO">`:
   \   00000000   0x50 0x52          DC8 "PROCESSO"
   \              0x4F 0x43    
   \              0x45 0x53    
   \              0x53 0x4F    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    191          /***********************************************************************************
    192          *       Fim do arquivo
    193          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MSERVICO_dosa_porcao
         8   -> APLICACAO_carrega_idioma
         8   -> PREPARACAO_dosagem_milho
         8   -> STRING_write_to_internal
       8   MSERVICO_entry
         8   -> APLICACAO_carrega_idioma
         8   -> MENUROLAGEM_show
      16   MSERVICO_libera_embalagem
        16   -> APLICACAO_carrega_idioma
        16   -> EMBALAGEM_libera_pacote
        16   -> PARAMETROS_le
        16   -> STRING_write_to_internal
       8   MSERVICO_limpeza
         8   -> APLICACAO_carrega_idioma
         8   -> PREPARACAO_limpeza
         8   -> STRING_write_to_external
         8   -> STRING_write_to_internal
      24   MSERVICO_preparacao
        24   -> APLICACAO_carrega_idioma
        24   -> PREPARACAO_entry
        24   -> PREPARACAO_resfriamento
        24   -> STRING_write_to_external
        24   -> STRING_write_to_internal
        24   -> TECLADO_getch
       8   MSERVICO_resfriamento
         8   -> APLICACAO_carrega_idioma
         8   -> PREPARACAO_resfriamento


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "E0:VENTILADOR">
      16  ?<Constant "E1:AQUECIMENTO">
      12  ?<Constant "E2:DOSADOR">
      16  ?<Constant "E3:EMBALAGEM">
       8  ?<Constant "FALHA">
      12  ?<Constant "PROCESSO">
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      58  MSERVICO_dosa_porcao
      36  MSERVICO_entry
      24  MSERVICO_funcs
      70  MSERVICO_libera_embalagem
      52  MSERVICO_limpeza
     158  MSERVICO_preparacao
      18  MSERVICO_resfriamento

 
 104 bytes in section .rodata
 444 bytes in section .text
 
 444 bytes of CODE  memory
 104 bytes of CONST memory

Errors: none
Warnings: 2

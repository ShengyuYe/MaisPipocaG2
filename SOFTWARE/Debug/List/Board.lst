###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      13/Sep/2017  17:36:49 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Board\Board.c      #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Board\Board.c -lC  #
#                    C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\ -lA    #
#                    C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\ -o     #
#                    C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\         #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\Board.l #
#                    st                                                       #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\Board.o  #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Board\Board.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  board.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :
     21          |
     22          |       Revisões           :  001
     23          |
     24          |
     25          | __________________________________________________________________________________
     26          */
     27          
     28          /***********************************************************************************
     29          *       Includes
     30          ***********************************************************************************/
     31          #include <stdio.h>
     32          #include <stdlib.h>
     33          #include <string.h>
     34          #include <nxp\iolpc1768.h>

   \                                 In section .noinit, at 0x2009c014
   \   __absolute union <unnamed> volatile _A_FIO0PIN
   \                     _A_FIO0PIN:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c020
   \   __absolute union <unnamed> volatile _A_FIO1DIR
   \                     _A_FIO1DIR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c034
   \   __absolute union <unnamed> volatile _A_FIO1PIN
   \                     _A_FIO1PIN:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c038
   \   __absolute union <unnamed> volatile _A_FIO1SET
   \                     _A_FIO1SET:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c03c
   \   __absolute union <unnamed> volatile _A_FIO1CLR
   \                     _A_FIO1CLR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c080
   \   __absolute union <unnamed> volatile _A_FIO4DIR
   \                     _A_FIO4DIR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c098
   \   __absolute union <unnamed> volatile _A_FIO4SET
   \                     _A_FIO4SET:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c09c
   \   __absolute union <unnamed> volatile _A_FIO4CLR
   \                     _A_FIO4CLR:
   \   00000000                      DS8 4
     35          #include "..\includes.h"
     36          
     37          /***********************************************************************************
     38          *       Definições
     39          ***********************************************************************************/
     40          #define TAM_BUFFER_SENSORES             16
     41          
     42          #define LED_STATUS_PIN                  (0x01)<<16
     43          #define INI_LED_PINS()                  FIO1DIR|=LED_STATUS_PIN
     44          #define SET_LED_STATUS(X)               X?(FIO1SET|=LED_STATUS_PIN):(FIO1CLR|=LED_STATUS_PIN)
     45          
     46          #define SENSOR_BARREIRA_PAPEL_PIN       (0x01)<<25
     47          #define GET_BARREIRA_SAIDA_PAPEL_PIN()  FIO0PIN&SENSOR_BARREIRA_PAPEL_PIN?0:1
     48          
     49          
     50          #define MOTOR_EMBALAGEM_PIN             (0x01)<<0
     51          #define INI_MOTOR_EMBALAGEM_PIN()       FIO1DIR|=MOTOR_EMBALAGEM_PIN
     52          #define SET_MOTOR_EMBALAGEM_PIN(X)      X?(FIO1SET|=MOTOR_EMBALAGEM_PIN):(FIO1CLR|=MOTOR_EMBALAGEM_PIN)
     53          
     54          
     55          #define FIM_DO_PAPEL_PIN                (0x01)<<1
     56          #define GET_SENSOR_FIM_PAPEL_PIN()      (FIO1PIN&FIM_DO_PAPEL_PIN)?0:1
     57          
     58          #define HIGH_SIDE_ESQUERDA              (0x01)<<28
     59          #define LOW_SIDE_ESQUERDA               (0x01)<<29
     60          
     61          #define HIGH_SIDE_DIREITA               (0x01)<<30
     62          #define LOW_SIDE_DIREITA                ((unsigned int)(0x01)<<31)
     63          
     64          #define INI_EMBALAGEM_PINS()            FIO1DIR|=HIGH_SIDE_ESQUERDA|LOW_SIDE_ESQUERDA|HIGH_SIDE_DIREITA|LOW_SIDE_DIREITA;FIO1CLR|=HIGH_SIDE_ESQUERDA|LOW_SIDE_ESQUERDA|HIGH_SIDE_DIREITA|LOW_SIDE_DIREITA
     65          
     66          #define SET_HIGH_SIDE_ESQUERDA(X)       X?(FIO1SET|=HIGH_SIDE_ESQUERDA):(FIO1CLR|=HIGH_SIDE_ESQUERDA)
     67          #define SET_LOW_SIDE_ESQUERDA(X)        X?(FIO1SET|=LOW_SIDE_ESQUERDA):(FIO1CLR|=LOW_SIDE_ESQUERDA)
     68          
     69          #define SET_HIGH_SIDE_DIREITA(X)        X?(FIO1SET|=HIGH_SIDE_DIREITA):(FIO1CLR|=HIGH_SIDE_DIREITA)
     70          #define SET_LOW_SIDE_DIREITA(X)         X?(FIO1SET|=LOW_SIDE_DIREITA):(FIO1CLR|=LOW_SIDE_DIREITA)
     71          
     72          #define SENSOR_DOSE_PIN                 (0x01)<<15
     73          #define GET_SENSOR_DOSE_PIN()           (FIO1PIN&SENSOR_DOSE_PIN)?0:1
     74          
     75          
     76          #define FITA_LED_01_PIN                 (0x01)<<28
     77          #define SET_FITA_LED_01(X)              X?(FIO4SET|=FITA_LED_01_PIN):(FIO4CLR|=FITA_LED_01_PIN)
     78          
     79          #define FITA_LED_02_PIN                 (0x01)<<29
     80          #define SET_FITA_LED_02(X)              X?(FIO4SET|=FITA_LED_02_PIN):(FIO4CLR|=FITA_LED_02_PIN)
     81          
     82          #define FITA_LED_INI()                  FIO4DIR |= FITA_LED_01_PIN | FITA_LED_02_PIN
     83          
     84          /***********************************************************************************
     85          *       Variaveis locais
     86          ***********************************************************************************/

   \                                 In section .bss, align 4
     87          unsigned short int BOARD_buffer_entradas_digitais[TAM_BUFFER_SENSORES]={0};
   \                     BOARD_buffer_entradas_digitais:
   \   00000000                      DS8 32

   \                                 In section .bss, align 4
     88          unsigned int BOARD_general_purpose_counter=0;
   \                     BOARD_general_purpose_counter:
   \   00000000                      DS8 4
     89          extern unsigned int PREPARACAO_cnt_preparo;
     90          extern unsigned int PREPARACAO_cnt_rampa;

   \                                 In section .data, align 1
     91          unsigned char BOARD_leds_instrucao=1;
   \                     BOARD_leds_instrucao:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 4
     92          eLED_STATE BOARD_estado_leds[8]={APAGADO};
   \                     BOARD_estado_leds:
   \   00000000                      DS8 8
     93          extern unsigned int PAGAMENTOS_timeout_pagamento;

   \                                 In section .data, align 4
     94          unsigned int BOARD_contador_propaganda=10*60000;
   \                     BOARD_contador_propaganda:
   \   00000000   0x000927C0         DC32 600000

   \                                 In section .bss, align 4
     95          unsigned int BOARD_intervalo_propaganda=0;
   \                     BOARD_intervalo_propaganda:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     96          unsigned int BOARD_lock_timer;
   \                     BOARD_lock_timer:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     97          unsigned int APLICACAO_tempo_compensacao;
   \                     APLICACAO_tempo_compensacao:
   \   00000000                      DS8 4
     98          extern unsigned int MCS_contadorSemente;
     99          extern unsigned int HD44780_2_tempoRefreshSegundoLCD;
    100          extern unsigned int PREPARACAO_contador_compensacao;
    101          extern unsigned int APLICACAO_tempo_desumidificador;
    102          extern unsigned int SMC_contador;
    103          extern unsigned int APLICACAO_tempo_mensagem;
    104          extern unsigned int PREPARACAO_compensador;
    105          extern unsigned int HD44780_tempoRefreshSegundoLCD;
    106          
    107          /***********************************************************************************
    108          *       Funções locais
    109          ***********************************************************************************/
    110          void BOARD_instrucao_leds(void);
    111          
    112          /***********************************************************************************
    113          *       Implementação das funções
    114          ***********************************************************************************/
    115          
    116          /***********************************************************************************
    117          *       Descrição       :       Inicialização da camada board
    118          *       Parametros      :       nenhum
    119          *       Retorno         :       nenhum
    120          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    121          void BOARD_ini(void){  
   \                     BOARD_ini:
   \   00000000   0xB580             PUSH     {R7,LR}
    122            INI_MOTOR_EMBALAGEM_PIN();
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x2009c020
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable12  ;; 0x2009c020
   \   00000010   0x6008             STR      R0,[R1, #+0]
    123              
    124            CCTALK_ini();
   \   00000012   0x.... 0x....      BL       CCTALK_ini
    125            PAGAMENTOS_ini();
   \   00000016   0x.... 0x....      BL       PAGAMENTOS_ini
    126            PAGAMENTOS_set_bloqueio(1);
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    127            BOARD_set_motor_dose(PARADO);
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       BOARD_set_motor_dose
    128            INI_EMBALAGEM_PINS();
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x2009c020
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF050 0x4070      ORRS     R0,R0,#0xF0000000
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable12  ;; 0x2009c020
   \   00000034   0x6008             STR      R0,[R1, #+0]
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x2009c03c
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x4070      ORRS     R0,R0,#0xF0000000
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable12_1  ;; 0x2009c03c
   \   00000044   0x6008             STR      R0,[R1, #+0]
    129            INI_MOTOR_EMBALAGEM_PIN();
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x2009c020
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable12  ;; 0x2009c020
   \   00000054   0x6008             STR      R0,[R1, #+0]
    130            INI_LED_PINS();    
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x2009c020
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable12  ;; 0x2009c020
   \   00000064   0x6008             STR      R0,[R1, #+0]
    131            PARAMETROS_ini();
   \   00000066   0x.... 0x....      BL       PARAMETROS_ini
    132            AA_ini();
   \   0000006A   0x.... 0x....      BL       AA_ini
    133            POTENCIA_ini();
   \   0000006E   0x.... 0x....      BL       POTENCIA_ini
    134            CT_ini();
   \   00000072   0x.... 0x....      BL       CT_ini
    135            LEDS_ini();
   \   00000076   0x.... 0x....      BL       LEDS_ini
    136            MDB_ini();
   \   0000007A   0x.... 0x....      BL       MDB_ini
    137            FITA_LED_INI();
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x2009c080
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0xF050 0x5040      ORRS     R0,R0,#0x30000000
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable12_2  ;; 0x2009c080
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    138            PLAYERWAVE_ini();
   \   0000008E   0x.... 0x....      BL       PLAYERWAVE_ini
    139            SERIALMUX_ini();
   \   00000092   0x.... 0x....      BL       SERIALMUX_ini
    140            // Deixa a porta serial RS232
    141            // habilitada direto
    142            SERIALMUX_seleciona(SERIALMUX_USB);
   \   00000096   0x2002             MOVS     R0,#+2
   \   00000098   0x.... 0x....      BL       SERIALMUX_seleciona
    143          }
   \   0000009C   0xBD01             POP      {R0,PC}          ;; return
   \   0000009E                      REQUIRE _A_FIO1DIR
   \   0000009E                      REQUIRE _A_FIO1CLR
   \   0000009E                      REQUIRE _A_FIO4DIR
    144          /***********************************************************************************
    145          *       Descrição       :       Tick de timer para o módulo board
    146          *       Parametros      :       nenhum
    147          *       Retorno         :       nenhum
    148          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    149          void BOARD_timer_tick(void){
   \                     BOARD_timer_tick:
   \   00000000   0xB510             PUSH     {R4,LR}
    150            static unsigned char indice=0;  
    151            unsigned short int temp=0;
   \   00000002   0x2400             MOVS     R4,#+0
    152            
    153            POTENCIA_timerTick();
   \   00000004   0x.... 0x....      BL       POTENCIA_timerTick
    154            TECLADO_timerTick();  
   \   00000008   0x.... 0x....      BL       TECLADO_timerTick
    155            RTC_init();
   \   0000000C   0x.... 0x....      BL       RTC_init
    156            AA_amostragemAnalogica();
   \   00000010   0x.... 0x....      BL       AA_amostragemAnalogica
    157            CT_timer_tick();
   \   00000014   0x.... 0x....      BL       CT_timer_tick
    158            PAGAMENTOS_timer_tick();
   \   00000018   0x.... 0x....      BL       PAGAMENTOS_timer_tick
    159            
    160            if(BOARD_general_purpose_counter)
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD006             BEQ.N    ??BOARD_timer_tick_0
    161              BOARD_general_purpose_counter--;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x1E40             SUBS     R0,R0,#+1
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   00000032   0x6008             STR      R0,[R1, #+0]
    162            
    163            if(PREPARACAO_cnt_preparo)
   \                     ??BOARD_timer_tick_0:
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD006             BEQ.N    ??BOARD_timer_tick_1
    164              PREPARACAO_cnt_preparo--;
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    165            
    166            if(PREPARACAO_cnt_rampa)
   \                     ??BOARD_timer_tick_1:
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD006             BEQ.N    ??BOARD_timer_tick_2
    167              PREPARACAO_cnt_rampa--;
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x1E40             SUBS     R0,R0,#+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000062   0x6008             STR      R0,[R1, #+0]
    168            
    169            if(PAGAMENTOS_timeout_pagamento)
   \                     ??BOARD_timer_tick_2:
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD006             BEQ.N    ??BOARD_timer_tick_3
    170              PAGAMENTOS_timeout_pagamento--;
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x1E40             SUBS     R0,R0,#+1
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    171            
    172            if(BOARD_contador_propaganda)
   \                     ??BOARD_timer_tick_3:
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD006             BEQ.N    ??BOARD_timer_tick_4
    173              BOARD_contador_propaganda--;
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0x1E40             SUBS     R0,R0,#+1
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000092   0x6008             STR      R0,[R1, #+0]
    174            
    175            if(BOARD_lock_timer)
   \                     ??BOARD_timer_tick_4:
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD006             BEQ.N    ??BOARD_timer_tick_5
    176              BOARD_lock_timer--;
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x1E40             SUBS     R0,R0,#+1
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000000AA   0x6008             STR      R0,[R1, #+0]
    177            
    178            if(HD44780_2_tempoRefreshSegundoLCD)
   \                     ??BOARD_timer_tick_5:
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD006             BEQ.N    ??BOARD_timer_tick_6
    179              HD44780_2_tempoRefreshSegundoLCD--;
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x1E40             SUBS     R0,R0,#+1
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   000000C2   0x6008             STR      R0,[R1, #+0]
    180            
    181            if(PREPARACAO_contador_compensacao)
   \                     ??BOARD_timer_tick_6:
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD006             BEQ.N    ??BOARD_timer_tick_7
    182              PREPARACAO_contador_compensacao--;
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0x1E40             SUBS     R0,R0,#+1
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    183            
    184            if(APLICACAO_tempo_desumidificador)
   \                     ??BOARD_timer_tick_7:
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xD006             BEQ.N    ??BOARD_timer_tick_8
    185              APLICACAO_tempo_desumidificador--;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x1E40             SUBS     R0,R0,#+1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   000000F2   0x6008             STR      R0,[R1, #+0]
    186            
    187            if(SMC_contador)
   \                     ??BOARD_timer_tick_8:
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x2800             CMP      R0,#+0
   \   000000FC   0xD006             BEQ.N    ??BOARD_timer_tick_9
    188              SMC_contador--;
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0x1E40             SUBS     R0,R0,#+1
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   0000010A   0x6008             STR      R0,[R1, #+0]
    189            
    190            if(APLICACAO_tempo_mensagem)
   \                     ??BOARD_timer_tick_9:
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xD006             BEQ.N    ??BOARD_timer_tick_10
    191              APLICACAO_tempo_mensagem--;
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000011A   0x6800             LDR      R0,[R0, #+0]
   \   0000011C   0x1E40             SUBS     R0,R0,#+1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   00000122   0x6008             STR      R0,[R1, #+0]
    192            
    193            if(HD44780_tempoRefreshSegundoLCD)
   \                     ??BOARD_timer_tick_10:
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   00000128   0x6800             LDR      R0,[R0, #+0]
   \   0000012A   0x2800             CMP      R0,#+0
   \   0000012C   0xD006             BEQ.N    ??BOARD_timer_tick_11
    194              HD44780_tempoRefreshSegundoLCD--;
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x1E40             SUBS     R0,R0,#+1
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable12_14
   \   0000013A   0x6008             STR      R0,[R1, #+0]
    195            
    196            if(!APLICACAO_tempo_compensacao){
   \                     ??BOARD_timer_tick_11:
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xD111             BNE.N    ??BOARD_timer_tick_12
    197              APLICACAO_tempo_compensacao = 3*60*1000;
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable12_16  ;; 0x2bf20
   \   0000014E   0x6001             STR      R1,[R0, #+0]
    198              if(PREPARACAO_compensador)
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000154   0x6800             LDR      R0,[R0, #+0]
   \   00000156   0x2800             CMP      R0,#+0
   \   00000158   0xD00E             BEQ.N    ??BOARD_timer_tick_13
    199                PREPARACAO_compensador--;
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000015E   0x6800             LDR      R0,[R0, #+0]
   \   00000160   0x1E40             SUBS     R0,R0,#+1
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000166   0x6008             STR      R0,[R1, #+0]
   \   00000168   0xE006             B.N      ??BOARD_timer_tick_13
    200            }
    201            else
    202              APLICACAO_tempo_compensacao--;
   \                     ??BOARD_timer_tick_12:
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   0000016E   0x6800             LDR      R0,[R0, #+0]
   \   00000170   0x1E40             SUBS     R0,R0,#+1
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable12_15
   \   00000176   0x6008             STR      R0,[R1, #+0]
    203            
    204            MCS_contadorSemente++;
   \                     ??BOARD_timer_tick_13:
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0x1C40             ADDS     R0,R0,#+1
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000184   0x6008             STR      R0,[R1, #+0]
    205            
    206            // Reedswitch que detecta
    207            // a posição da dosador do milho
    208            temp |= GET_SENSOR_DOSE_PIN();
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable12_19  ;; 0x2009c034
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0xF3C0 0x30C0      UBFX     R0,R0,#+15,#+1
   \   00000190   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000194   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000198   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019A   0x4304             ORRS     R4,R0,R4
    209            temp<<=1;
   \   0000019C   0x0064             LSLS     R4,R4,#+1
    210            
    211            // Sensor da chave de fim de curso
    212            // que indica a reserva do papel
    213            temp |= GET_SENSOR_FIM_PAPEL_PIN();
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable12_19  ;; 0x2009c034
   \   000001A2   0x6800             LDR      R0,[R0, #+0]
   \   000001A4   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   000001A8   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000001AC   0xF090 0x0001      EORS     R0,R0,#0x1
   \   000001B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B2   0x4304             ORRS     R4,R0,R4
    214            temp<<=1;
   \   000001B4   0x0064             LSLS     R4,R4,#+1
    215            
    216            // Sensor da barreira óptica
    217            temp |= GET_BARREIRA_SAIDA_PAPEL_PIN();  
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable12_20  ;; 0x2009c014
   \   000001BA   0x6800             LDR      R0,[R0, #+0]
   \   000001BC   0xF3C0 0x6040      UBFX     R0,R0,#+25,#+1
   \   000001C0   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000001C4   0xF090 0x0001      EORS     R0,R0,#0x1
   \   000001C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CA   0x4304             ORRS     R4,R0,R4
    218            
    219            BOARD_buffer_entradas_digitais[indice] = temp;
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   000001D0   0x7800             LDRB     R0,[R0, #+0]
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   000001D6   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
    220            indice = (indice+1) % TAM_BUFFER_SENSORES;
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   000001DE   0x7800             LDRB     R0,[R0, #+0]
   \   000001E0   0x1C40             ADDS     R0,R0,#+1
   \   000001E2   0x2110             MOVS     R1,#+16
   \   000001E4   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000001E8   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000001EC   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   000001F0   0x7002             STRB     R2,[R0, #+0]
    221          }
   \   000001F2   0xBD10             POP      {R4,PC}          ;; return
   \   000001F4                      REQUIRE _A_FIO1PIN
   \   000001F4                      REQUIRE _A_FIO0PIN

   \                                 In section .bss, align 1
   \                     ??indice:
   \   00000000                      DS8 1
    222          /***********************************************************************************
    223          *       Descrição       :       Função principal da thread board
    224          *       Parametros      :       nenhum
    225          *       Retorno         :       nenhum
    226          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    227          void BOARD_main(void*pPar){
   \                     BOARD_main:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    228            unsigned char toggle=0;
   \   00000004   0x2500             MOVS     R5,#+0
    229            unsigned char flag;
    230            
    231            PARAMETROS_le(ADR_INTERVALO_TEMPO_PROP,(void*)&BOARD_intervalo_propaganda);
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable12_23
   \   0000000A   0x201F             MOVS     R0,#+31
   \   0000000C   0x.... 0x....      BL       PARAMETROS_le
    232            if(BOARD_intervalo_propaganda>60)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x283D             CMP      R0,#+61
   \   00000018   0xD303             BCC.N    ??BOARD_main_0
    233              BOARD_intervalo_propaganda = 60;
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   0000001E   0x213C             MOVS     R1,#+60
   \   00000020   0x6001             STR      R1,[R0, #+0]
    234            
    235            PARAMETROS_le(ADR_FLAG_FITA_LED,(void*)&flag);
   \                     ??BOARD_main_0:
   \   00000022   0xA900             ADD      R1,SP,#+0
   \   00000024   0x2021             MOVS     R0,#+33
   \   00000026   0x.... 0x....      BL       PARAMETROS_le
    236            
    237            for(;;){
    238            
    239              toggle ^= 255;
   \                     ??BOARD_main_1:
   \   0000002A   0xF095 0x05FF      EORS     R5,R5,#0xFF
    240              
    241              if(flag){
   \   0000002E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD034             BEQ.N    ??BOARD_main_2
    242                if(toggle){
   \   00000036   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000038   0x2D00             CMP      R5,#+0
   \   0000003A   0xD018             BEQ.N    ??BOARD_main_3
    243                  SET_LED_STATUS(1);
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable12_24  ;; 0x2009c038
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable12_24  ;; 0x2009c038
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    244                  SET_FITA_LED_01(1);
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable12_25  ;; 0x2009c098
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable12_25  ;; 0x2009c098
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    245                  SET_FITA_LED_02(0);
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable12_26  ;; 0x2009c09c
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable12_26  ;; 0x2009c09c
   \   0000006A   0x6008             STR      R0,[R1, #+0]
   \   0000006C   0xE03C             B.N      ??BOARD_main_4
    246                }
    247                else{           
    248                  SET_LED_STATUS(0);
   \                     ??BOARD_main_3:
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x2009c03c
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable12_1  ;; 0x2009c03c
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    249                  SET_FITA_LED_01(0);
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable12_26  ;; 0x2009c09c
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable12_26  ;; 0x2009c09c
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    250                  SET_FITA_LED_02(1);      
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable12_25  ;; 0x2009c098
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable12_25  ;; 0x2009c098
   \   0000009C   0x6008             STR      R0,[R1, #+0]
   \   0000009E   0xE023             B.N      ??BOARD_main_4
    251                }
    252              }
    253              else{
    254                SET_FITA_LED_01(0);      
   \                     ??BOARD_main_2:
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable12_26  ;; 0x2009c09c
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable12_26  ;; 0x2009c09c
   \   000000AE   0x6008             STR      R0,[R1, #+0]
    255                SET_FITA_LED_02(0);
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable12_26  ;; 0x2009c09c
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable12_26  ;; 0x2009c09c
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    256                SET_LED_STATUS(toggle);
   \   000000C0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C2   0x2D00             CMP      R5,#+0
   \   000000C4   0xD008             BEQ.N    ??BOARD_main_5
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable12_24  ;; 0x2009c038
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable12_24  ;; 0x2009c038
   \   000000D4   0x6008             STR      R0,[R1, #+0]
   \   000000D6   0xE007             B.N      ??BOARD_main_4
   \                     ??BOARD_main_5:
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x2009c03c
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable12_1  ;; 0x2009c03c
   \   000000E6   0x6008             STR      R0,[R1, #+0]
    257              }
    258              
    259              vTaskDelay(250);       
   \                     ??BOARD_main_4:
   \   000000E8   0x20FA             MOVS     R0,#+250
   \   000000EA   0x.... 0x....      BL       vTaskDelay
    260                
    261              BOARD_instrucao_leds();
   \   000000EE   0x.... 0x....      BL       BOARD_instrucao_leds
    262              
    263              // Roda a propaganda no intervalo
    264              // de tempo programaddo
    265              if(!BOARD_contador_propaganda){      
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   000000F6   0x6800             LDR      R0,[R0, #+0]
   \   000000F8   0x2800             CMP      R0,#+0
   \   000000FA   0xD196             BNE.N    ??BOARD_main_1
    266                if(BOARD_intervalo_propaganda){
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD003             BEQ.N    ??BOARD_main_6
    267                  PLAYERWAVE_iniciaMusica(AUDIO_PROPAGANDA,0);        
   \   00000106   0x2100             MOVS     R1,#+0
   \   00000108   0x2003             MOVS     R0,#+3
   \   0000010A   0x.... 0x....      BL       PLAYERWAVE_iniciaMusica
    268                }
    269                BOARD_contador_propaganda = BOARD_intervalo_propaganda*60000;
   \                     ??BOARD_main_6:
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000112   0x6800             LDR      R0,[R0, #+0]
   \   00000114   0xF64E 0x2160      MOVW     R1,#+60000
   \   00000118   0x4348             MULS     R0,R1,R0
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   0000011E   0x6008             STR      R0,[R1, #+0]
   \   00000120   0xE783             B.N      ??BOARD_main_1
   \   00000122                      REQUIRE _A_FIO1SET
   \   00000122                      REQUIRE _A_FIO4SET
   \   00000122                      REQUIRE _A_FIO4CLR
   \   00000122                      REQUIRE _A_FIO1CLR
    270              }
    271              
    272            }// Fim for(;;)
    273          }
    274          /***********************************************************************************
    275          *       Descrição       :       Verifica se um dos sinais está ativo
    276          *       Parametros      :       (unsigned char) bit
    277          *       Retorno         :       (unsigned char) maior do que zero
    278          *                               se a entrada estiver acionada
    279          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    280          unsigned char BOARD_get_sinal(eSINAL sinal){
   \                     BOARD_get_sinal:
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x0001             MOVS     R1,R0
    281            unsigned char contador=0;  
   \   00000004   0x2200             MOVS     R2,#+0
    282            
    283            for(unsigned char i=0;i<TAM_BUFFER_SENSORES;i++)
   \   00000006   0x2000             MOVS     R0,#+0
   \                     ??BOARD_get_sinal_0:
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x2810             CMP      R0,#+16
   \   0000000C   0xDA0B             BGE.N    ??BOARD_get_sinal_1
    284              if(BOARD_buffer_entradas_digitais[i]&(0x01<<sinal))
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      LDR.W    R3,??DataTable12_22
   \   00000014   0xF833 0x3010      LDRH     R3,[R3, R0, LSL #+1]
   \   00000018   0x2401             MOVS     R4,#+1
   \   0000001A   0x408C             LSLS     R4,R4,R1
   \   0000001C   0x4223             TST      R3,R4
   \   0000001E   0xD000             BEQ.N    ??BOARD_get_sinal_2
    285                contador++;
   \   00000020   0x1C52             ADDS     R2,R2,#+1
   \                     ??BOARD_get_sinal_2:
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0xE7F0             B.N      ??BOARD_get_sinal_0
    286            
    287            if(contador>(TAM_BUFFER_SENSORES>>1))
   \                     ??BOARD_get_sinal_1:
   \   00000026   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000028   0x2A09             CMP      R2,#+9
   \   0000002A   0xDB01             BLT.N    ??BOARD_get_sinal_3
    288              return 1;
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0xE000             B.N      ??BOARD_get_sinal_4
    289            
    290            return 0;
   \                     ??BOARD_get_sinal_3:
   \   00000030   0x2000             MOVS     R0,#+0
   \                     ??BOARD_get_sinal_4:
   \   00000032   0xBC10             POP      {R4}
   \   00000034   0x4770             BX       LR               ;; return
    291          }
    292          /***********************************************************************************
    293          *       Descrição       :       Liga o mosfet da saída de embalagem
    294          *       Parametros      :       (unsigned char) valor
    295          *       Retorno         :       nenhum
    296          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    297          void BOARD_set_motor_embalagem(unsigned char flag){
    298            
    299            SET_MOTOR_EMBALAGEM_PIN(flag);
   \                     BOARD_set_motor_embalagem:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD008             BEQ.N    ??BOARD_set_motor_embalagem_0
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable12_24  ;; 0x2009c038
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable12_24  ;; 0x2009c038
   \   00000014   0x6011             STR      R1,[R2, #+0]
   \   00000016   0xE005             B.N      ??BOARD_set_motor_embalagem_1
   \                     ??BOARD_set_motor_embalagem_0:
   \   00000018   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   0000001A   0x6809             LDR      R1,[R1, #+0]
   \   0000001C   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   00000020   0x....             LDR.N    R2,??DataTable12_1  ;; 0x2009c03c
   \   00000022   0x6011             STR      R1,[R2, #+0]
    300          }
   \                     ??BOARD_set_motor_embalagem_1:
   \   00000024   0x4770             BX       LR               ;; return
   \   00000026                      REQUIRE _A_FIO1SET
   \   00000026                      REQUIRE _A_FIO1CLR
    301          /***********************************************************************************
    302          *       Descrição       :       Setter para o controle do motor da embalagem
    303          *       Parametros      :       (eMOTOR_DOSE) estado do motor
    304          *       Retorno         :       nenhum
    305          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    306          void BOARD_set_motor_dose(eMOTOR_DOSE sentido){
   \                     BOARD_set_motor_dose:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    307            
    308            switch(sentido){
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD003             BEQ.N    ??BOARD_set_motor_dose_0
   \   0000000A   0x2C02             CMP      R4,#+2
   \   0000000C   0xD036             BEQ.N    ??BOARD_set_motor_dose_1
   \   0000000E   0xD319             BCC.N    ??BOARD_set_motor_dose_2
   \   00000010   0xE04F             B.N      ??BOARD_set_motor_dose_3
    309              case PARADO:  
    310                   SET_HIGH_SIDE_ESQUERDA(0);
   \                     ??BOARD_set_motor_dose_0:
   \   00000012   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    311                   SET_LOW_SIDE_ESQUERDA(0);
   \   0000001E   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   00000026   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   00000028   0x6008             STR      R0,[R1, #+0]
    312                   SET_HIGH_SIDE_DIREITA(0);
   \   0000002A   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   00000032   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   00000034   0x6008             STR      R0,[R1, #+0]
    313                   SET_LOW_SIDE_DIREITA(0);
   \   00000036   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000003E   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   00000040   0x6008             STR      R0,[R1, #+0]
    314                   break;
   \   00000042   0xE036             B.N      ??BOARD_set_motor_dose_3
    315              case DOSAR:
    316                   SET_HIGH_SIDE_DIREITA(0);
   \                     ??BOARD_set_motor_dose_2:
   \   00000044   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   0000004C   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   0000004E   0x6008             STR      R0,[R1, #+0]
    317                   SET_LOW_SIDE_ESQUERDA(0);
   \   00000050   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   00000058   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    318                   vTaskDelay(50);
   \   0000005C   0x2032             MOVS     R0,#+50
   \   0000005E   0x.... 0x....      BL       vTaskDelay
    319                   SET_HIGH_SIDE_ESQUERDA(1);
   \   00000062   0x....             LDR.N    R0,??DataTable12_24  ;; 0x2009c038
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000006A   0x....             LDR.N    R1,??DataTable12_24  ;; 0x2009c038
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    320                   SET_LOW_SIDE_DIREITA(1);
   \   0000006E   0x....             LDR.N    R0,??DataTable12_24  ;; 0x2009c038
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   00000076   0x....             LDR.N    R1,??DataTable12_24  ;; 0x2009c038
   \   00000078   0x6008             STR      R0,[R1, #+0]
    321                   break;
   \   0000007A   0xE01A             B.N      ??BOARD_set_motor_dose_3
    322              case REVERTER:
    323                   SET_HIGH_SIDE_ESQUERDA(0);
   \                     ??BOARD_set_motor_dose_1:
   \   0000007C   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000084   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   00000086   0x6008             STR      R0,[R1, #+0]
    324                   SET_LOW_SIDE_DIREITA(0);     
   \   00000088   0x....             LDR.N    R0,??DataTable12_1  ;; 0x2009c03c
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   00000090   0x....             LDR.N    R1,??DataTable12_1  ;; 0x2009c03c
   \   00000092   0x6008             STR      R0,[R1, #+0]
    325                   vTaskDelay(50);         
   \   00000094   0x2032             MOVS     R0,#+50
   \   00000096   0x.... 0x....      BL       vTaskDelay
    326                   SET_HIGH_SIDE_DIREITA(1);
   \   0000009A   0x....             LDR.N    R0,??DataTable12_24  ;; 0x2009c038
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   000000A2   0x....             LDR.N    R1,??DataTable12_24  ;; 0x2009c038
   \   000000A4   0x6008             STR      R0,[R1, #+0]
    327                   SET_LOW_SIDE_ESQUERDA(1);         
   \   000000A6   0x....             LDR.N    R0,??DataTable12_24  ;; 0x2009c038
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   000000AE   0x....             LDR.N    R1,??DataTable12_24  ;; 0x2009c038
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    328                   break;
    329            }
    330          }
   \                     ??BOARD_set_motor_dose_3:
   \   000000B2   0xBD10             POP      {R4,PC}          ;; return
   \   000000B4                      REQUIRE _A_FIO1CLR
   \   000000B4                      REQUIRE _A_FIO1SET
    331          /***********************************************************************************
    332          *       Descrição       :       Setter para o contador de uso geral
    333          *       Parametros      :       (unsigned int) valor de preset
    334          *       Retorno         :       nenhum
    335          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    336          void BOARD_setter_general_purpose_counter(unsigned int preset){
    337            
    338            BOARD_general_purpose_counter = preset;
   \                     BOARD_setter_general_purpose_counter:
   \   00000000   0x....             LDR.N    R1,??DataTable12_3
   \   00000002   0x6008             STR      R0,[R1, #+0]
    339          }
   \   00000004   0x4770             BX       LR               ;; return
    340          /***********************************************************************************
    341          *       Descrição       :       Getter para o contador de uso geral
    342          *       Parametros      :       (nenhum)
    343          *       Retorno         :       (unsigned int) valor da contagem
    344          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    345          unsigned int BOARD_getter_general_purpose_counter(void){
    346            
    347            return BOARD_general_purpose_counter;
   \                     BOARD_getter_general_purpose_counter:
   \   00000000   0x....             LDR.N    R0,??DataTable12_3
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    348          }
    349          /***********************************************************************************
    350          *       Descrição       :       Controla a piscada dos leds da placa de 
    351          *                               instrução
    352          *       Parametros      :       nenhum
    353          *       Retorno         :       nenhum
    354          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    355          void BOARD_instrucao_leds(void){
   \                     BOARD_instrucao_leds:
   \   00000000   0xB580             PUSH     {R7,LR}
    356            static unsigned char toggle=0;
    357            
    358            if(!BOARD_leds_instrucao)
   \   00000002   0x....             LDR.N    R0,??DataTable12_27
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xF000 0x80BC      BEQ.W    ??BOARD_instrucao_leds_0
    359              return;
    360            
    361            toggle ^= 255;
   \                     ??BOARD_instrucao_leds_1:
   \   0000000C   0x....             LDR.N    R0,??DataTable12_28
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0xF090 0x00FF      EORS     R0,R0,#0xFF
   \   00000014   0x....             LDR.N    R1,??DataTable12_28
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    362            //---------------------------------------------------
    363            if(BOARD_estado_leds[LED_INSIRA_DINHEIRO] == APAGADO)
   \   00000018   0x....             LDR.N    R0,??DataTable12_29
   \   0000001A   0x7880             LDRB     R0,[R0, #+2]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD104             BNE.N    ??BOARD_instrucao_leds_2
    364              LEDS_setter_led(LED_INSIRA_DINHEIRO,0);
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x2002             MOVS     R0,#+2
   \   00000024   0x.... 0x....      BL       LEDS_setter_led
   \   00000028   0xE00D             B.N      ??BOARD_instrucao_leds_3
    365            else
    366              if(BOARD_estado_leds[LED_INSIRA_DINHEIRO] == ACESO)
   \                     ??BOARD_instrucao_leds_2:
   \   0000002A   0x....             LDR.N    R0,??DataTable12_29
   \   0000002C   0x7880             LDRB     R0,[R0, #+2]
   \   0000002E   0x2801             CMP      R0,#+1
   \   00000030   0xD104             BNE.N    ??BOARD_instrucao_leds_4
    367                LEDS_setter_led(LED_INSIRA_DINHEIRO,1);
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0x.... 0x....      BL       LEDS_setter_led
   \   0000003A   0xE004             B.N      ??BOARD_instrucao_leds_3
    368              else
    369                LEDS_setter_led(LED_INSIRA_DINHEIRO,toggle);
   \                     ??BOARD_instrucao_leds_4:
   \   0000003C   0x....             LDR.N    R0,??DataTable12_28
   \   0000003E   0x7801             LDRB     R1,[R0, #+0]
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0x.... 0x....      BL       LEDS_setter_led
    370            //---------------------------------------------------
    371            if(BOARD_estado_leds[LED_PEGUE_PACOTE] == APAGADO)
   \                     ??BOARD_instrucao_leds_3:
   \   00000046   0x....             LDR.N    R0,??DataTable12_29
   \   00000048   0x78C0             LDRB     R0,[R0, #+3]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD104             BNE.N    ??BOARD_instrucao_leds_5
    372              LEDS_setter_led(LED_PEGUE_PACOTE,0);
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x2003             MOVS     R0,#+3
   \   00000052   0x.... 0x....      BL       LEDS_setter_led
   \   00000056   0xE00D             B.N      ??BOARD_instrucao_leds_6
    373            else
    374              if(BOARD_estado_leds[LED_PEGUE_PACOTE] == ACESO)
   \                     ??BOARD_instrucao_leds_5:
   \   00000058   0x....             LDR.N    R0,??DataTable12_29
   \   0000005A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD104             BNE.N    ??BOARD_instrucao_leds_7
    375                LEDS_setter_led(LED_PEGUE_PACOTE,1);
   \   00000060   0x2101             MOVS     R1,#+1
   \   00000062   0x2003             MOVS     R0,#+3
   \   00000064   0x.... 0x....      BL       LEDS_setter_led
   \   00000068   0xE004             B.N      ??BOARD_instrucao_leds_6
    376              else
    377                LEDS_setter_led(LED_PEGUE_PACOTE,toggle);  
   \                     ??BOARD_instrucao_leds_7:
   \   0000006A   0x....             LDR.N    R0,??DataTable12_28
   \   0000006C   0x7801             LDRB     R1,[R0, #+0]
   \   0000006E   0x2003             MOVS     R0,#+3
   \   00000070   0x.... 0x....      BL       LEDS_setter_led
    378            //---------------------------------------------------
    379            if(BOARD_estado_leds[LED_MONTE_PACOTE] == APAGADO)
   \                     ??BOARD_instrucao_leds_6:
   \   00000074   0x....             LDR.N    R0,??DataTable12_29
   \   00000076   0x7900             LDRB     R0,[R0, #+4]
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD104             BNE.N    ??BOARD_instrucao_leds_8
    380              LEDS_setter_led(LED_MONTE_PACOTE,0);
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0x2004             MOVS     R0,#+4
   \   00000080   0x.... 0x....      BL       LEDS_setter_led
   \   00000084   0xE00D             B.N      ??BOARD_instrucao_leds_9
    381            else
    382              if(BOARD_estado_leds[LED_MONTE_PACOTE] == ACESO)
   \                     ??BOARD_instrucao_leds_8:
   \   00000086   0x....             LDR.N    R0,??DataTable12_29
   \   00000088   0x7900             LDRB     R0,[R0, #+4]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD104             BNE.N    ??BOARD_instrucao_leds_10
    383                LEDS_setter_led(LED_MONTE_PACOTE,1);
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x2004             MOVS     R0,#+4
   \   00000092   0x.... 0x....      BL       LEDS_setter_led
   \   00000096   0xE004             B.N      ??BOARD_instrucao_leds_9
    384              else
    385                LEDS_setter_led(LED_MONTE_PACOTE,toggle);      
   \                     ??BOARD_instrucao_leds_10:
   \   00000098   0x....             LDR.N    R0,??DataTable12_28
   \   0000009A   0x7801             LDRB     R1,[R0, #+0]
   \   0000009C   0x2004             MOVS     R0,#+4
   \   0000009E   0x.... 0x....      BL       LEDS_setter_led
    386            //---------------------------------------------------
    387            if(BOARD_estado_leds[LED_INSIRA_PACOTE] == APAGADO)
   \                     ??BOARD_instrucao_leds_9:
   \   000000A2   0x....             LDR.N    R0,??DataTable12_29
   \   000000A4   0x7940             LDRB     R0,[R0, #+5]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD104             BNE.N    ??BOARD_instrucao_leds_11
    388              LEDS_setter_led(LED_INSIRA_PACOTE,0);
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x2005             MOVS     R0,#+5
   \   000000AE   0x.... 0x....      BL       LEDS_setter_led
   \   000000B2   0xE00D             B.N      ??BOARD_instrucao_leds_12
    389            else
    390              if(BOARD_estado_leds[LED_INSIRA_PACOTE] == ACESO)
   \                     ??BOARD_instrucao_leds_11:
   \   000000B4   0x....             LDR.N    R0,??DataTable12_29
   \   000000B6   0x7940             LDRB     R0,[R0, #+5]
   \   000000B8   0x2801             CMP      R0,#+1
   \   000000BA   0xD104             BNE.N    ??BOARD_instrucao_leds_13
    391                LEDS_setter_led(LED_INSIRA_PACOTE,1);
   \   000000BC   0x2101             MOVS     R1,#+1
   \   000000BE   0x2005             MOVS     R0,#+5
   \   000000C0   0x.... 0x....      BL       LEDS_setter_led
   \   000000C4   0xE004             B.N      ??BOARD_instrucao_leds_12
    392              else
    393                LEDS_setter_led(LED_INSIRA_PACOTE,toggle);   
   \                     ??BOARD_instrucao_leds_13:
   \   000000C6   0x....             LDR.N    R0,??DataTable12_28
   \   000000C8   0x7801             LDRB     R1,[R0, #+0]
   \   000000CA   0x2005             MOVS     R0,#+5
   \   000000CC   0x.... 0x....      BL       LEDS_setter_led
    394            //---------------------------------------------------
    395            if(BOARD_estado_leds[LED_FORA_SERVICO] == APAGADO)
   \                     ??BOARD_instrucao_leds_12:
   \   000000D0   0x....             LDR.N    R0,??DataTable12_29
   \   000000D2   0x7980             LDRB     R0,[R0, #+6]
   \   000000D4   0x2800             CMP      R0,#+0
   \   000000D6   0xD104             BNE.N    ??BOARD_instrucao_leds_14
    396              LEDS_setter_led(LED_FORA_SERVICO,0);
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x2006             MOVS     R0,#+6
   \   000000DC   0x.... 0x....      BL       LEDS_setter_led
   \   000000E0   0xE00D             B.N      ??BOARD_instrucao_leds_15
    397            else
    398              if(BOARD_estado_leds[LED_FORA_SERVICO] == ACESO)
   \                     ??BOARD_instrucao_leds_14:
   \   000000E2   0x....             LDR.N    R0,??DataTable12_29
   \   000000E4   0x7980             LDRB     R0,[R0, #+6]
   \   000000E6   0x2801             CMP      R0,#+1
   \   000000E8   0xD104             BNE.N    ??BOARD_instrucao_leds_16
    399                LEDS_setter_led(LED_FORA_SERVICO,1);
   \   000000EA   0x2101             MOVS     R1,#+1
   \   000000EC   0x2006             MOVS     R0,#+6
   \   000000EE   0x.... 0x....      BL       LEDS_setter_led
   \   000000F2   0xE004             B.N      ??BOARD_instrucao_leds_15
    400              else
    401                LEDS_setter_led(LED_FORA_SERVICO,toggle);        
   \                     ??BOARD_instrucao_leds_16:
   \   000000F4   0x....             LDR.N    R0,??DataTable12_28
   \   000000F6   0x7801             LDRB     R1,[R0, #+0]
   \   000000F8   0x2006             MOVS     R0,#+6
   \   000000FA   0x.... 0x....      BL       LEDS_setter_led
    402             //--------------------------------------------------
    403             if(BOARD_estado_leds[LED_VERMELHO_GRELHA] == APAGADO)
   \                     ??BOARD_instrucao_leds_15:
   \   000000FE   0x....             LDR.N    R0,??DataTable12_29
   \   00000100   0x7840             LDRB     R0,[R0, #+1]
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD104             BNE.N    ??BOARD_instrucao_leds_17
    404               LEDS_setter_led(LED_VERMELHO_GRELHA,0);
   \   00000106   0x2100             MOVS     R1,#+0
   \   00000108   0x2001             MOVS     R0,#+1
   \   0000010A   0x.... 0x....      BL       LEDS_setter_led
   \   0000010E   0xE00D             B.N      ??BOARD_instrucao_leds_18
    405             else
    406               if(BOARD_estado_leds[LED_VERMELHO_GRELHA] == ACESO)
   \                     ??BOARD_instrucao_leds_17:
   \   00000110   0x....             LDR.N    R0,??DataTable12_29
   \   00000112   0x7840             LDRB     R0,[R0, #+1]
   \   00000114   0x2801             CMP      R0,#+1
   \   00000116   0xD104             BNE.N    ??BOARD_instrucao_leds_19
    407                 LEDS_setter_led(LED_VERMELHO_GRELHA,1);
   \   00000118   0x2101             MOVS     R1,#+1
   \   0000011A   0x2001             MOVS     R0,#+1
   \   0000011C   0x.... 0x....      BL       LEDS_setter_led
   \   00000120   0xE004             B.N      ??BOARD_instrucao_leds_18
    408               else
    409                 LEDS_setter_led(LED_VERMELHO_GRELHA,toggle);
   \                     ??BOARD_instrucao_leds_19:
   \   00000122   0x....             LDR.N    R0,??DataTable12_28
   \   00000124   0x7801             LDRB     R1,[R0, #+0]
   \   00000126   0x2001             MOVS     R0,#+1
   \   00000128   0x.... 0x....      BL       LEDS_setter_led
    410             //--------------------------------------------------
    411             if(BOARD_estado_leds[LED_VERDE_GRELHA] == APAGADO)
   \                     ??BOARD_instrucao_leds_18:
   \   0000012C   0x....             LDR.N    R0,??DataTable12_29
   \   0000012E   0x7800             LDRB     R0,[R0, #+0]
   \   00000130   0x2800             CMP      R0,#+0
   \   00000132   0xD104             BNE.N    ??BOARD_instrucao_leds_20
    412               LEDS_setter_led(LED_VERDE_GRELHA,0);
   \   00000134   0x2100             MOVS     R1,#+0
   \   00000136   0x2000             MOVS     R0,#+0
   \   00000138   0x.... 0x....      BL       LEDS_setter_led
   \   0000013C   0xE00D             B.N      ??BOARD_instrucao_leds_21
    413             else
    414               if(BOARD_estado_leds[LED_VERDE_GRELHA] == ACESO)
   \                     ??BOARD_instrucao_leds_20:
   \   0000013E   0x....             LDR.N    R0,??DataTable12_29
   \   00000140   0x7800             LDRB     R0,[R0, #+0]
   \   00000142   0x2801             CMP      R0,#+1
   \   00000144   0xD104             BNE.N    ??BOARD_instrucao_leds_22
    415                 LEDS_setter_led(LED_VERDE_GRELHA,1);
   \   00000146   0x2101             MOVS     R1,#+1
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x.... 0x....      BL       LEDS_setter_led
   \   0000014E   0xE004             B.N      ??BOARD_instrucao_leds_21
    416               else
    417                 LEDS_setter_led(LED_VERDE_GRELHA,toggle);
   \                     ??BOARD_instrucao_leds_22:
   \   00000150   0x....             LDR.N    R0,??DataTable12_28
   \   00000152   0x7801             LDRB     R1,[R0, #+0]
   \   00000154   0x2000             MOVS     R0,#+0
   \   00000156   0x.... 0x....      BL       LEDS_setter_led
    418             //--------------------------------------------------
    419               
    420             if(toggle){
   \                     ??BOARD_instrucao_leds_21:
   \   0000015A   0x....             LDR.N    R0,??DataTable12_28
   \   0000015C   0x7800             LDRB     R0,[R0, #+0]
   \   0000015E   0x2800             CMP      R0,#+0
   \   00000160   0xD008             BEQ.N    ??BOARD_instrucao_leds_23
    421               LEDS_setter_led(LED_VERMELHO_GRELHA,1);
   \   00000162   0x2101             MOVS     R1,#+1
   \   00000164   0x2001             MOVS     R0,#+1
   \   00000166   0x.... 0x....      BL       LEDS_setter_led
    422               LEDS_setter_led(LED_VERDE_GRELHA,0);
   \   0000016A   0x2100             MOVS     R1,#+0
   \   0000016C   0x2000             MOVS     R0,#+0
   \   0000016E   0x.... 0x....      BL       LEDS_setter_led
   \   00000172   0xE007             B.N      ??BOARD_instrucao_leds_24
    423             }
    424             else{
    425               LEDS_setter_led(LED_VERMELHO_GRELHA,0);
   \                     ??BOARD_instrucao_leds_23:
   \   00000174   0x2100             MOVS     R1,#+0
   \   00000176   0x2001             MOVS     R0,#+1
   \   00000178   0x.... 0x....      BL       LEDS_setter_led
    426               LEDS_setter_led(LED_VERDE_GRELHA,1);     
   \   0000017C   0x2101             MOVS     R1,#+1
   \   0000017E   0x2000             MOVS     R0,#+0
   \   00000180   0x.... 0x....      BL       LEDS_setter_led
    427             }
    428          }
   \                     ??BOARD_instrucao_leds_24:
   \                     ??BOARD_instrucao_leds_0:
   \   00000184   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??toggle:
   \   00000000                      DS8 1
    429          /***********************************************************************************
    430          *       Descrição       :       Setter para a variavel que guarda o estado
    431          *                               dos leds da placa de instrução
    432          *       Parametros      :       (unsigned char) led
    433          *                               (eLED_STATE) estado do led
    434          *       Retorno         :       nenhum
    435          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    436          void BOARD_setter_led_instrucao(unsigned char led,eLED_STATE estado){
    437            
    438            BOARD_estado_leds[led] = estado;    
   \                     BOARD_setter_led_instrucao:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x....             LDR.N    R2,??DataTable12_29
   \   00000004   0x5481             STRB     R1,[R0, R2]
    439          }
   \   00000006   0x4770             BX       LR               ;; return
    440          /***********************************************************************************
    441          *       Descrição       :       Setter ara a variavel que controla a placa
    442          *                               de instrução
    443          *       Parametros      :       (unsigned char) estado
    444          *       Retorno         :       nenhum
    445          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    446          void BOARD_liga_placa_instrucao(unsigned char flag){
   \                     BOARD_liga_placa_instrucao:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    447            
    448            for(unsigned char i=0;i<8;i++)
   \   00000004   0x2500             MOVS     R5,#+0
   \                     ??BOARD_liga_placa_instrucao_0:
   \   00000006   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000008   0x2D08             CMP      R5,#+8
   \   0000000A   0xDA06             BGE.N    ??BOARD_liga_placa_instrucao_1
    449              LEDS_setter_led(i,0);
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x0028             MOVS     R0,R5
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       LEDS_setter_led
   \   00000016   0x1C6D             ADDS     R5,R5,#+1
   \   00000018   0xE7F5             B.N      ??BOARD_liga_placa_instrucao_0
    450            
    451            if(!flag)
   \                     ??BOARD_liga_placa_instrucao_1:
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD109             BNE.N    ??BOARD_liga_placa_instrucao_2
    452              for(unsigned char i=0;i<8;i++)
   \   00000020   0x2000             MOVS     R0,#+0
   \                     ??BOARD_liga_placa_instrucao_3:
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x2808             CMP      R0,#+8
   \   00000026   0xDA05             BGE.N    ??BOARD_liga_placa_instrucao_2
    453                BOARD_estado_leds[i] = APAGADO;
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x....             LDR.N    R1,??DataTable12_29
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x5442             STRB     R2,[R0, R1]
   \   00000030   0x1C40             ADDS     R0,R0,#+1
   \   00000032   0xE7F6             B.N      ??BOARD_liga_placa_instrucao_3
    454            
    455            BOARD_leds_instrucao = flag;
   \                     ??BOARD_liga_placa_instrucao_2:
   \   00000034   0x....             LDR.N    R0,??DataTable12_27
   \   00000036   0x7004             STRB     R4,[R0, #+0]
    456          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    457          /***********************************************************************************
    458          *       Descrição       :       Setter para o contador de propaganda
    459          *       Parametros      :       nenhum
    460          *       Retorno         :       nenhum
    461          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    462          void BOARD_setter_contador_propaganda(unsigned int contagem){
    463            
    464            if(!contagem)
   \                     BOARD_setter_contador_propaganda:
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD107             BNE.N    ??BOARD_setter_contador_propaganda_0
    465              BOARD_contador_propaganda = 60000*BOARD_intervalo_propaganda;
   \   00000004   0x....             LDR.N    R1,??DataTable12_23
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0xF64E 0x2260      MOVW     R2,#+60000
   \   0000000C   0x4351             MULS     R1,R2,R1
   \   0000000E   0x....             LDR.N    R2,??DataTable12_7
   \   00000010   0x6011             STR      R1,[R2, #+0]
   \   00000012   0xE001             B.N      ??BOARD_setter_contador_propaganda_1
    466            else
    467              BOARD_contador_propaganda = contagem;
   \                     ??BOARD_setter_contador_propaganda_0:
   \   00000014   0x....             LDR.N    R1,??DataTable12_7
   \   00000016   0x6008             STR      R0,[R1, #+0]
    468          }
   \                     ??BOARD_setter_contador_propaganda_1:
   \   00000018   0x4770             BX       LR               ;; return
    469          /***********************************************************************************
    470          *       Descrição       :       Setter para o tempo da propaganda
    471          *       Parametros      :       nenhum
    472          *       Retorno         :       nenhum
    473          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    474          void BOARD_reset_tempo_propaganda(void){
    475            
    476            BOARD_contador_propaganda = BOARD_intervalo_propaganda*60000;
   \                     BOARD_reset_tempo_propaganda:
   \   00000000   0x....             LDR.N    R0,??DataTable12_23
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF64E 0x2160      MOVW     R1,#+60000
   \   00000008   0x4348             MULS     R0,R1,R0
   \   0000000A   0x....             LDR.N    R1,??DataTable12_7
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    477          }
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x2009C020         DC32     0x2009c020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x2009C03C         DC32     0x2009c03c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x2009C080         DC32     0x2009c080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     BOARD_general_purpose_counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     PREPARACAO_cnt_preparo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     PREPARACAO_cnt_rampa

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     PAGAMENTOS_timeout_pagamento

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     BOARD_contador_propaganda

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     BOARD_lock_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     HD44780_2_tempoRefreshSegundoLCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     PREPARACAO_contador_compensacao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     APLICACAO_tempo_desumidificador

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     SMC_contador

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     APLICACAO_tempo_mensagem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     HD44780_tempoRefreshSegundoLCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     APLICACAO_tempo_compensacao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x0002BF20         DC32     0x2bf20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     PREPARACAO_compensador

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     MCS_contadorSemente

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x2009C034         DC32     0x2009c034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x2009C014         DC32     0x2009c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     ??indice

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     BOARD_buffer_entradas_digitais

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x........         DC32     BOARD_intervalo_propaganda

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x2009C038         DC32     0x2009c038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0x2009C098         DC32     0x2009c098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x2009C09C         DC32     0x2009c09c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     BOARD_leds_instrucao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0x........         DC32     ??toggle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_29:
   \   00000000   0x........         DC32     BOARD_estado_leds
    478          /***********************************************************************************
    479          *       Fim do arquivo
    480          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   BOARD_get_sinal
       0   BOARD_getter_general_purpose_counter
       8   BOARD_ini
         8   -> AA_ini
         8   -> BOARD_set_motor_dose
         8   -> CCTALK_ini
         8   -> CT_ini
         8   -> LEDS_ini
         8   -> MDB_ini
         8   -> PAGAMENTOS_ini
         8   -> PAGAMENTOS_set_bloqueio
         8   -> PARAMETROS_ini
         8   -> PLAYERWAVE_ini
         8   -> POTENCIA_ini
         8   -> SERIALMUX_ini
         8   -> SERIALMUX_seleciona
       8   BOARD_instrucao_leds
         8   -> LEDS_setter_led
      16   BOARD_liga_placa_instrucao
        16   -> LEDS_setter_led
      16   BOARD_main
        16   -> BOARD_instrucao_leds
        16   -> PARAMETROS_le
        16   -> PLAYERWAVE_iniciaMusica
        16   -> vTaskDelay
       0   BOARD_reset_tempo_propaganda
       8   BOARD_set_motor_dose
         8   -> vTaskDelay
       0   BOARD_set_motor_embalagem
       0   BOARD_setter_contador_propaganda
       0   BOARD_setter_general_purpose_counter
       0   BOARD_setter_led_instrucao
       8   BOARD_timer_tick
         8   -> AA_amostragemAnalogica
         8   -> CT_timer_tick
         8   -> PAGAMENTOS_timer_tick
         8   -> POTENCIA_timerTick
         8   -> RTC_init
         8   -> TECLADO_timerTick


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_29
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  APLICACAO_tempo_compensacao
      32  BOARD_buffer_entradas_digitais
       4  BOARD_contador_propaganda
       8  BOARD_estado_leds
       4  BOARD_general_purpose_counter
      54  BOARD_get_sinal
       6  BOARD_getter_general_purpose_counter
     158  BOARD_ini
     390  BOARD_instrucao_leds
       4  BOARD_intervalo_propaganda
       1  BOARD_leds_instrucao
      58  BOARD_liga_placa_instrucao
       4  BOARD_lock_timer
     290  BOARD_main
      16  BOARD_reset_tempo_propaganda
     180  BOARD_set_motor_dose
      38  BOARD_set_motor_embalagem
      26  BOARD_setter_contador_propaganda
       6  BOARD_setter_general_purpose_counter
       8  BOARD_setter_led_instrucao
     500  BOARD_timer_tick
       4  _A_FIO0PIN
       4  _A_FIO1CLR
       4  _A_FIO1DIR
       4  _A_FIO1PIN
       4  _A_FIO1SET
       4  _A_FIO4CLR
       4  _A_FIO4DIR
       4  _A_FIO4SET
       1  indice
       1  toggle

 
    58 bytes in section .bss
     5 bytes in section .data
    32 bytes in section .noinit (abs)
 1 850 bytes in section .text
 
 1 850 bytes of CODE memory
    63 bytes of DATA memory (+ 32 bytes shared)

Errors: none
Warnings: none

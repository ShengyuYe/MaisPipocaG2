###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      20/Jul/2017  13:55:56 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\menu_avancado.c                 #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\menu_avancado.c -lC             #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\menu_avancado.lst              #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\menu_avancado.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\menu_avancado.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  menu_avancado.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :  30/05/2017
     21          |
     22          |       Revisões           :  001
     23          |
     24          |
     25          | __________________________________________________________________________________
     26          */
     27          
     28          /***********************************************************************************
     29          *       Includes
     30          ***********************************************************************************/
     31          #include <stdio.h>
     32          #include <stdlib.h>
     33          #include <string.h>
     34          #include "..\includes.h"
     35          #include "menu_rolagem.h"
     36          #include "menu_ajuste_relogio.h"
     37          
     38          /***********************************************************************************
     39          *       Definições locais
     40          ***********************************************************************************/
     41          
     42          
     43          /***********************************************************************************
     44          *       Macros locais
     45          ***********************************************************************************/
     46          
     47          
     48          /***********************************************************************************
     49          *       Constantes locais
     50          ***********************************************************************************/
     51          
     52          
     53          /***********************************************************************************
     54          *       Variaveis locais
     55          ***********************************************************************************/
     56          
     57          
     58          /***********************************************************************************
     59          *       Funções locais
     60          ***********************************************************************************/
     61          void MENUAVANCADO_padrao_fabrica(void);
     62          void MENUAVANCADO_cadastra_senha_admin(void);
     63          void MENUAVANCADO_reset_totalizadores_permanentes(void);
     64          void MENUAVANCADO_configura_numero_serie(void);
     65          void MENUAVANCADO_menu_ganhos_PID(void);
     66          void MENUAVANCADO_configura_hora_data(void);
     67          void MENUAVANCADO_configura_flag_correcao_erro(void);
     68          
     69          /***********************************************************************************
     70          *       Tabela de funções
     71          ***********************************************************************************/

   \                                 In section .rodata, align 4
     72          void(*const MENUAVANCADO_func[])(void)={
   \                     MENUAVANCADO_func:
   \   00000000   0x........         DC32 MENUAVANCADO_padrao_fabrica, MENUAVANCADO_cadastra_senha_admin
   \              0x........   
   \   00000008   0x........         DC32 MENUAVANCADO_reset_totalizadores_permanentes
   \   0000000C   0x........         DC32 MENUAVANCADO_menu_ganhos_PID, MENUAVANCADO_configura_numero_serie
   \              0x........   
   \   00000014   0x........         DC32 MENUAVANCADO_configura_hora_data
   \   00000018   0x........         DC32 MENUAVANCADO_configura_flag_correcao_erro, 0H
   \              0x00000000   
     73            MENUAVANCADO_padrao_fabrica,
     74            MENUAVANCADO_cadastra_senha_admin,
     75            MENUAVANCADO_reset_totalizadores_permanentes,
     76            MENUAVANCADO_menu_ganhos_PID,
     77            MENUAVANCADO_configura_numero_serie,
     78            MENUAVANCADO_configura_hora_data,
     79            MENUAVANCADO_configura_flag_correcao_erro,
     80            NULL
     81          };
     82          /***********************************************************************************
     83          *       Implementação das funções
     84          ***********************************************************************************/
     85          
     86          /***********************************************************************************
     87          *       Descrição       :       Ponto de entrada para o menu avançado
     88          *       Parametros      :       nenhum
     89          *       Retorno         :       nenhum
     90          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     91          void MENUAVANCADO_entry(void){
   \                     MENUAVANCADO_entry:
   \   00000000   0xB510             PUSH     {R4,LR}
     92            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
     93            
     94            // Senha para acesso,caso inválida
     95            // não abre o menu
     96            if(!TELASENHA_telaSenha(SENHA_MENU_AVANCADO))
   \   00000008   0xF641 0x10FB      MOVW     R0,#+6651
   \   0000000C   0x.... 0x....      BL       TELASENHA_telaSenha
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD00B             BEQ.N    ??MENUAVANCADO_entry_0
     97              return;
     98              
     99            MENUROLAGEM_show((char*)STRING_titulo_menu_avancado[idioma],
    100                             (char**)STRING_menu_avancado[idioma],
    101                             QTD_OPCOES_AVANCADO,
    102                             (void(**)(void))MENUAVANCADO_func);   
   \                     ??MENUAVANCADO_entry_1:
   \   00000014   0x....             LDR.N    R3,??DataTable6_2
   \   00000016   0x2208             MOVS     R2,#+8
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x....             LDR.N    R0,??DataTable6_3
   \   0000001C   0xEB10 0x1144      ADDS     R1,R0,R4, LSL #+5
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x....             LDR.N    R0,??DataTable6_4
   \   00000024   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000028   0x.... 0x....      BL       MENUROLAGEM_show
    103          }
   \                     ??MENUAVANCADO_entry_0:
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
    104          /***********************************************************************************
    105          *       Descrição       :       Restaura as configurações padrão para a memória
    106          *                               flash da máquina
    107          *       Parametros      :       nenhum
    108          *       Retorno         :       nenhum
    109          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    110          void MENUAVANCADO_padrao_fabrica(void){
   \                     MENUAVANCADO_padrao_fabrica:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
    111            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0004             MOVS     R4,R0
    112            unsigned int valor;  
    113            unsigned char flag;//1234567890123456 
    114            char msg_padrao[17]="   Mais Pipoca  ";
   \   0000000A   0xA802             ADD      R0,SP,#+8
   \   0000000C   0x....             LDR.N    R1,??DataTable6_5
   \   0000000E   0x2214             MOVS     R2,#+20
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy4
    115            
    116            STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_titulo_padrao_fabrica[idioma],NULL);
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x....             LDR.N    R0,??DataTable6_6
   \   0000001A   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       STRING_write_to_internal
    117              
    118            if(TELASENHA_telaSenha(SENHA_PADRAO_FABRICA)){
   \   00000024   0xF640 0x408E      MOVW     R0,#+3214
   \   00000028   0x.... 0x....      BL       TELASENHA_telaSenha
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD064             BEQ.N    ??MENUAVANCADO_padrao_fabrica_0
    119              
    120              STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_mensagem_reset_fabrica[idioma][0],
    121                                                     (char*)STRING_mensagem_reset_fabrica[idioma][1]);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x....             LDR.N    R0,??DataTable6_7
   \   00000034   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000038   0x6842             LDR      R2,[R0, #+4]
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x....             LDR.N    R0,??DataTable6_7
   \   0000003E   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       STRING_write_to_internal
    122              
    123              // Valor da pipoca R$ 4,00
    124              valor = PADRAO_VALOR_PIPOCA;
   \   00000048   0xF44F 0x70FA      MOV      R0,#+500
   \   0000004C   0x9000             STR      R0,[SP, #+0]
    125              PARAMETROS_grava(ADR_VALOR_PIPOCA,(void*)&valor);
   \   0000004E   0xA900             ADD      R1,SP,#+0
   \   00000050   0x2003             MOVS     R0,#+3
   \   00000052   0x.... 0x....      BL       PARAMETROS_grava
    126              
    127              // Apenas cédula 
    128              flag = PADRAO_CEDULAS_HABILITADA;
   \   00000056   0x2003             MOVS     R0,#+3
   \   00000058   0xF88D 0x0004      STRB     R0,[SP, #+4]
    129              PARAMETROS_grava(ADR_NOTAS,(void*)&flag);
   \   0000005C   0xA901             ADD      R1,SP,#+4
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0x.... 0x....      BL       PARAMETROS_grava
    130                               
    131              // Configura o tempo em que o motor da embalagem
    132              // fica ligado
    133              valor = PADRAO_TEMPO_EMBALAGEM;
   \   00000064   0xF44F 0x607A      MOV      R0,#+4000
   \   00000068   0x9000             STR      R0,[SP, #+0]
    134              PARAMETROS_grava(ADR_TEMPO_EMBALAGEM,(void*)&valor);
   \   0000006A   0xA900             ADD      R1,SP,#+0
   \   0000006C   0x201C             MOVS     R0,#+28
   \   0000006E   0x.... 0x....      BL       PARAMETROS_grava
    135              
    136              // Configura para a fita led ficar piscando 
    137              flag = PADRAO_HABILITA_FITA_LED;
   \   00000072   0x20FF             MOVS     R0,#+255
   \   00000074   0xF88D 0x0004      STRB     R0,[SP, #+4]
    138              PARAMETROS_grava(ADR_FLAG_FITA_LED,(void*)&flag);
   \   00000078   0xA901             ADD      R1,SP,#+4
   \   0000007A   0x2021             MOVS     R0,#+33
   \   0000007C   0x.... 0x....      BL       PARAMETROS_grava
    139              
    140              // Configura para o volume da música para 50%
    141              valor = PADRAO_VOLUME_MUSICA;
   \   00000080   0x2032             MOVS     R0,#+50
   \   00000082   0x9000             STR      R0,[SP, #+0]
    142              PARAMETROS_grava(ADR_VOLUME_MUSICA,(void*)&valor);
   \   00000084   0xA900             ADD      R1,SP,#+0
   \   00000086   0x201D             MOVS     R0,#+29
   \   00000088   0x.... 0x....      BL       PARAMETROS_grava
    143              
    144              // Configura para o volume da voz ficar em 50%
    145              valor = PADRAO_VOLUME_VOZ;
   \   0000008C   0x2032             MOVS     R0,#+50
   \   0000008E   0x9000             STR      R0,[SP, #+0]
    146              PARAMETROS_grava(ADR_VOLUME_VOZ,(void*)&valor);
   \   00000090   0xA900             ADD      R1,SP,#+0
   \   00000092   0x201E             MOVS     R0,#+30
   \   00000094   0x.... 0x....      BL       PARAMETROS_grava
    147              
    148              // Configura para a propaganda rodar a cada
    149              // 30 minutos
    150              valor = PADRAO_INTERVALO_PROPAGANDA;
   \   00000098   0x200A             MOVS     R0,#+10
   \   0000009A   0x9000             STR      R0,[SP, #+0]
    151              PARAMETROS_grava(ADR_INTERVALO_TEMPO_PROP,(void*)&valor);
   \   0000009C   0xA900             ADD      R1,SP,#+0
   \   0000009E   0x201F             MOVS     R0,#+31
   \   000000A0   0x.... 0x....      BL       PARAMETROS_grava
    152              
    153              // Configura para a máquina não utilizar troco
    154              flag = PADRAO_FLAG_TROCO;
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0xF88D 0x0004      STRB     R0,[SP, #+4]
    155              PARAMETROS_grava(ADR_FLAG_TROCO,(void*)&flag);
   \   000000AA   0xA901             ADD      R1,SP,#+4
   \   000000AC   0x2022             MOVS     R0,#+34
   \   000000AE   0x.... 0x....      BL       PARAMETROS_grava
    156              
    157              // Configura para não entrar no modo pipoca grátis
    158              flag = PADRAO_GRATIS;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    159              PARAMETROS_grava(ADR_FLAG_FREE,(void*)&flag);
   \   000000B8   0xA901             ADD      R1,SP,#+4
   \   000000BA   0x2020             MOVS     R0,#+32
   \   000000BC   0x.... 0x....      BL       PARAMETROS_grava
    160              
    161              // Configura a temperatura de trabalho
    162              valor = PADRAO_TEMPERATURA;
   \   000000C0   0x2055             MOVS     R0,#+85
   \   000000C2   0x9000             STR      R0,[SP, #+0]
    163              PARAMETROS_grava(ADR_TEMPERATURA_PREPARACAO,(void*)&valor);
   \   000000C4   0xA900             ADD      R1,SP,#+0
   \   000000C6   0x201A             MOVS     R0,#+26
   \   000000C8   0x.... 0x....      BL       PARAMETROS_grava
    164              
    165              // Configura a velocidade do motor do ar
    166              valor = PADRAO_ROTACAO_PREPARO;
   \   000000CC   0xF241 0x6044      MOVW     R0,#+5700
   \   000000D0   0x9000             STR      R0,[SP, #+0]
    167              PARAMETROS_grava(ADR_VELOCIDADE_PREPARACAO,(void*)&valor);    
   \   000000D2   0xA900             ADD      R1,SP,#+0
   \   000000D4   0x201B             MOVS     R0,#+27
   \   000000D6   0x.... 0x....      BL       PARAMETROS_grava
    168              
    169              // Grava as mensagens de cliente como Mais PIpoca
    170              PARAMETROS_grava(ADR_MENSAGEM_CLIENTE_01,(void*)msg_padrao);
   \   000000DA   0xA902             ADD      R1,SP,#+8
   \   000000DC   0x203C             MOVS     R0,#+60
   \   000000DE   0x.... 0x....      BL       PARAMETROS_grava
    171              PARAMETROS_grava(ADR_MENSAGEM_CLIENTE_02,(void*)msg_padrao);
   \   000000E2   0xA902             ADD      R1,SP,#+8
   \   000000E4   0x203D             MOVS     R0,#+61
   \   000000E6   0x.... 0x....      BL       PARAMETROS_grava
    172              PARAMETROS_grava(ADR_MENSAGEM_CLIENTE_03,(void*)msg_padrao);
   \   000000EA   0xA902             ADD      R1,SP,#+8
   \   000000EC   0x203E             MOVS     R0,#+62
   \   000000EE   0x.... 0x....      BL       PARAMETROS_grava
    173              PARAMETROS_grava(ADR_MENSAGEM_CLIENTE_04,(void*)msg_padrao);
   \   000000F2   0xA902             ADD      R1,SP,#+8
   \   000000F4   0x203F             MOVS     R0,#+63
   \   000000F6   0x.... 0x....      BL       PARAMETROS_grava
    174            }
    175          }
   \                     ??MENUAVANCADO_padrao_fabrica_0:
   \   000000FA   0xB008             ADD      SP,SP,#+32
   \   000000FC   0xBD10             POP      {R4,PC}          ;; return
    176          /***********************************************************************************
    177          *       Descrição       :       Tela para cadastro da nova senha de administrador
    178          *       Parametros      :       nenhum
    179          *       Retorno         :       nenhum
    180          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    181          void MENUAVANCADO_cadastra_senha_admin(void){
   \                     MENUAVANCADO_cadastra_senha_admin:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    182            unsigned int senha;
    183            unsigned int s1,s2;
    184            unsigned char idioma = APLICACAO_carrega_idioma();  
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    185            
    186            PARAMETROS_le(ADR_SENHA_ADMIN,(void*)&senha);
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x2023             MOVS     R0,#+35
   \   0000000C   0x.... 0x....      BL       PARAMETROS_le
    187            
    188            if(senha>9999)
   \   00000010   0x9800             LDR      R0,[SP, #+0]
   \   00000012   0xF242 0x7110      MOVW     R1,#+10000
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xD301             BCC.N    ??MENUAVANCADO_cadastra_senha_admin_0
    189              senha = 0;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9000             STR      R0,[SP, #+0]
    190            
    191            // Senha para acesso,caso inválida
    192            // não abre o menu
    193            if(!TELASENHA_telaSenha(senha))
   \                     ??MENUAVANCADO_cadastra_senha_admin_0:
   \   0000001E   0x9800             LDR      R0,[SP, #+0]
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       TELASENHA_telaSenha
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD030             BEQ.N    ??MENUAVANCADO_cadastra_senha_admin_1
    194              return;  
    195            
    196            s1 = TELASENHA_get_senha((char*)STRING_mensagem_inserir_senha[idioma]);
   \                     ??MENUAVANCADO_cadastra_senha_admin_2:
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x....             LDR.N    R0,??DataTable6_8
   \   0000002E   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000032   0x.... 0x....      BL       TELASENHA_get_senha
   \   00000036   0x9001             STR      R0,[SP, #+4]
    197            s2 = TELASENHA_get_senha((char*)STRING_mensagem_inserir_senha[idioma]);
   \   00000038   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003A   0x....             LDR.N    R0,??DataTable6_8
   \   0000003C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000040   0x.... 0x....      BL       TELASENHA_get_senha
    198            
    199            if(s1 == s2){
   \   00000044   0x9901             LDR      R1,[SP, #+4]
   \   00000046   0x4281             CMP      R1,R0
   \   00000048   0xD110             BNE.N    ??MENUAVANCADO_cadastra_senha_admin_3
    200              // Desenha a mensagem confirmando a gravação
    201              // da nova senha
    202              STRING_write_to_internal(CLEAR_DISPLAY,
    203                                      (char*)STRING_mensagem_cadastro_senha[idioma][0],
    204                                      (char*)STRING_mensagem_cadastro_senha[idioma][1]);
   \   0000004A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004C   0x....             LDR.N    R0,??DataTable6_9
   \   0000004E   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000052   0x6842             LDR      R2,[R0, #+4]
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0x....             LDR.N    R0,??DataTable6_9
   \   00000058   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x.... 0x....      BL       STRING_write_to_internal
    205              
    206              // Grava a nova senha na memória flash
    207              PARAMETROS_grava(ADR_SENHA_ADMIN,(void*)&s1);    
   \   00000062   0xA901             ADD      R1,SP,#+4
   \   00000064   0x2023             MOVS     R0,#+35
   \   00000066   0x.... 0x....      BL       PARAMETROS_grava
   \   0000006A   0xE00B             B.N      ??MENUAVANCADO_cadastra_senha_admin_4
    208            }
    209            else
    210              STRING_write_to_internal(CLEAR_DISPLAY,
    211                                      (char*)STRING_mensagem_cadastro_senha_erro[idioma][0],
    212                                      (char*)STRING_mensagem_cadastro_senha_erro[idioma][1]);
   \                     ??MENUAVANCADO_cadastra_senha_admin_3:
   \   0000006C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006E   0x....             LDR.N    R0,??DataTable6_10
   \   00000070   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000074   0x6842             LDR      R2,[R0, #+4]
   \   00000076   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000078   0x....             LDR.N    R0,??DataTable6_10
   \   0000007A   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      BL       STRING_write_to_internal
    213             
    214            vTaskDelay(3000);
   \                     ??MENUAVANCADO_cadastra_senha_admin_4:
   \   00000084   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000088   0x.... 0x....      BL       vTaskDelay
    215          }
   \                     ??MENUAVANCADO_cadastra_senha_admin_1:
   \   0000008C   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    216          /***********************************************************************************
    217          *       Descrição       :       Faz o reset dos totalizadores permanentes da 
    218          *                               máquina
    219          *       Parametros      :       nenhum
    220          *       Retorno         :       nenhum
    221          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    222          void MENUAVANCADO_reset_totalizadores_permanentes(void){
   \                     MENUAVANCADO_reset_totalizadores_permanentes:
   \   00000000   0xB510             PUSH     {R4,LR}
    223            unsigned char idioma = APLICACAO_carrega_idioma();    
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    224            
    225            if(TELASENHA_checa_contrasenha(NULL)){    
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       TELASENHA_checa_contrasenha
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD028             BEQ.N    ??MENUAVANCADO_reset_totalizadores_permanentes_0
    226              STRING_write_to_internal(CLEAR_DISPLAY,
    227                                      (char*)STRING_mensagem_reinicia_totalizadores[idioma][0],
    228                                      (char*)STRING_mensagem_reinicia_totalizadores[idioma][1]);    
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x....             LDR.N    R0,??DataTable6_11
   \   00000016   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001A   0x6842             LDR      R2,[R0, #+4]
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x....             LDR.N    R0,??DataTable6_11
   \   00000020   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       STRING_write_to_internal
    229                     
    230              FATURAMENTO_set_contagem_parcial(0);
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       FATURAMENTO_set_contagem_parcial
    231              FATURAMENTO_set_arrecadacao_parcial(0);
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       FATURAMENTO_set_arrecadacao_parcial
    232              FATURAMENTO_set_contagem_cartao_parcial(0);
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       FATURAMENTO_set_contagem_cartao_parcial
    233              FATURAMENTO_set_arrecadacao_cartao_parcial(0);
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      BL       FATURAMENTO_set_arrecadacao_cartao_parcial
    234                  
    235              FATURAMENTO_set_contagem_total(0);
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       FATURAMENTO_set_contagem_total
    236              FATURAMENTO_set_arrecadacao_total(0);
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      BL       FATURAMENTO_set_arrecadacao_total
    237              FATURAMENTO_set_contagem_cartao_total(0);
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       FATURAMENTO_set_contagem_cartao_total
    238              FATURAMENTO_set_arrecadacao_cartao_total(0);    
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x.... 0x....      BL       FATURAMENTO_set_arrecadacao_cartao_total
    239              
    240              FTP_formata_fila(); // Apaga os eventos de troca de preço da pipoca
   \   0000005A   0x.... 0x....      BL       FTP_formata_fila
    241              
    242              FATURAMENTO_reinicia_pipocas_teste();
   \   0000005E   0x.... 0x....      BL       FATURAMENTO_reinicia_pipocas_teste
   \   00000062   0xE00B             B.N      ??MENUAVANCADO_reset_totalizadores_permanentes_1
    243            }
    244            else{    
    245              STRING_write_to_internal(CLEAR_DISPLAY,
    246                                      (char*)STRING_mensagem_reinicia_totalizadores_erro[idioma][0],
    247                                      (char*)STRING_mensagem_reinicia_totalizadores_erro[idioma][1]);            
   \                     ??MENUAVANCADO_reset_totalizadores_permanentes_0:
   \   00000064   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000066   0x....             LDR.N    R0,??DataTable6_12
   \   00000068   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000006C   0x6842             LDR      R2,[R0, #+4]
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0x....             LDR.N    R0,??DataTable6_12
   \   00000072   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       STRING_write_to_internal
    248            }
    249            
    250            vTaskDelay(3000);
   \                     ??MENUAVANCADO_reset_totalizadores_permanentes_1:
   \   0000007C   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000080   0x.... 0x....      BL       vTaskDelay
    251          }
   \   00000084   0xBD10             POP      {R4,PC}          ;; return
    252          /***********************************************************************************
    253          *       Descrição       :       Entra no menu para configuração dos
    254          *                               ganhos do PID do motor
    255          *       Parametros      :       nenhum
    256          *       Retorno         :       nenhum
    257          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    258          void MENUAVANCADO_menu_ganhos_PID(void){
   \                     MENUAVANCADO_menu_ganhos_PID:
   \   00000000   0xB510             PUSH     {R4,LR}
    259            unsigned char idioma = APLICACAO_carrega_idioma();    
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    260            
    261            // Menu para configuração 
    262            // dos parâmetros do PID
    263            // do motor
    264            if(TELASENHA_checa_contrasenha(NULL)){    
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       TELASENHA_checa_contrasenha
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10B             BNE.N    ??MENUAVANCADO_menu_ganhos_PID_0
    265              
    266              
    267            }
    268            else{    
    269              STRING_write_to_internal(CLEAR_DISPLAY,
    270                                      (char*)STRING_mensagem_reinicia_totalizadores_erro[idioma][0],
    271                                      (char*)STRING_mensagem_reinicia_totalizadores_erro[idioma][1]);            
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x....             LDR.N    R0,??DataTable6_12
   \   00000016   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001A   0x6842             LDR      R2,[R0, #+4]
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x....             LDR.N    R0,??DataTable6_12
   \   00000020   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       STRING_write_to_internal
    272            }
    273            
    274            vTaskDelay(3000);
   \                     ??MENUAVANCADO_menu_ganhos_PID_0:
   \   0000002A   0xF640 0x30B8      MOVW     R0,#+3000
   \   0000002E   0x.... 0x....      BL       vTaskDelay
    275          }
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    276          /***********************************************************************************
    277          *       Descrição       :       Configura o número de série da máquina
    278          *       Parametros      :       nenhum
    279          *       Retorno         :       nenhum
    280          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    281          void MENUAVANCADO_configura_numero_serie(void){
   \                     MENUAVANCADO_configura_numero_serie:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    282            unsigned char idioma = APLICACAO_carrega_idioma();    
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    283            
    284            if(TELASENHA_checa_contrasenha(NULL)){ 
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       TELASENHA_checa_contrasenha
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD023             BEQ.N    ??MENUAVANCADO_configura_numero_serie_0
    285                      
    286               unsigned int numero = 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9001             STR      R0,[SP, #+4]
    287               PARAMETROS_le(ADR_NUMERO_SERIE,(void*)&numero);
   \   00000016   0xA901             ADD      R1,SP,#+4
   \   00000018   0x2024             MOVS     R0,#+36
   \   0000001A   0x.... 0x....      BL       PARAMETROS_le
    288               
    289               if(numero>999999)
   \   0000001E   0x9801             LDR      R0,[SP, #+4]
   \   00000020   0x....             LDR.N    R1,??DataTable6_13  ;; 0xf4240
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD301             BCC.N    ??MENUAVANCADO_configura_numero_serie_1
    290                 numero = 100;
   \   00000026   0x2064             MOVS     R0,#+100
   \   00000028   0x9001             STR      R0,[SP, #+4]
    291               
    292               if(numero<1200)
   \                     ??MENUAVANCADO_configura_numero_serie_1:
   \   0000002A   0x9801             LDR      R0,[SP, #+4]
   \   0000002C   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000030   0xD202             BCS.N    ??MENUAVANCADO_configura_numero_serie_2
    293                 numero = 1200;
   \   00000032   0xF44F 0x6096      MOV      R0,#+1200
   \   00000036   0x9001             STR      R0,[SP, #+4]
    294               
    295               numero = MEI_entry((char*)STRING_titulo_edita_serial[idioma],
                               ^
Warning[Pe223]: function "MEI_entry" declared implicitly
    296                                  "%06d",
    297                                  numero,
    298                                  1,
    299                                  999999);
   \                     ??MENUAVANCADO_configura_numero_serie_2:
   \   00000038   0x....             LDR.N    R0,??DataTable6_14  ;; 0xf423f
   \   0000003A   0x9000             STR      R0,[SP, #+0]
   \   0000003C   0x2301             MOVS     R3,#+1
   \   0000003E   0x9A01             LDR      R2,[SP, #+4]
   \   00000040   0x....             LDR.N    R1,??DataTable6_15
   \   00000042   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000044   0x....             LDR.N    R0,??DataTable6_16
   \   00000046   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000004A   0x.... 0x....      BL       MEI_entry
   \   0000004E   0x9001             STR      R0,[SP, #+4]
    300               
    301               PARAMETROS_grava(ADR_NUMERO_SERIE,(void*)&numero);
   \   00000050   0xA901             ADD      R1,SP,#+4
   \   00000052   0x2024             MOVS     R0,#+36
   \   00000054   0x.... 0x....      BL       PARAMETROS_grava
   \   00000058   0xE00B             B.N      ??MENUAVANCADO_configura_numero_serie_3
    302            }
    303            else{    
    304              STRING_write_to_internal(CLEAR_DISPLAY,
    305                                      (char*)STRING_mensagem_reinicia_totalizadores_erro[idioma][0],
    306                                      (char*)STRING_mensagem_reinicia_totalizadores_erro[idioma][1]);            
   \                     ??MENUAVANCADO_configura_numero_serie_0:
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x....             LDR.N    R0,??DataTable6_12
   \   0000005E   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000062   0x6842             LDR      R2,[R0, #+4]
   \   00000064   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000066   0x....             LDR.N    R0,??DataTable6_12
   \   00000068   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       STRING_write_to_internal
    307            }
    308          }
   \                     ??MENUAVANCADO_configura_numero_serie_3:
   \   00000072   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    309          /***********************************************************************************
    310          *       Descrição       :       Tela para configuração da hora e data
    311          *                               do sistema
    312          *       Parametros      :       nenhum
    313          *       Retorno         :       nenhum
    314          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    315          void MENUAVANCADO_configura_hora_data(void){
   \                     MENUAVANCADO_configura_hora_data:
   \   00000000   0xB580             PUSH     {R7,LR}
    316            
    317            IAR_entry();
                   ^
Warning[Pe223]: function "IAR_entry" declared implicitly
   \   00000002   0x.... 0x....      BL       IAR_entry
    318          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    319          /***********************************************************************************
    320          *       Descrição       :       Tela para configuração do flag que habilita
    321          *                               a correção de erro no motor do ar
    322          *       Parametros      :       nenhum
    323          *       Retorno         :       nenhum
    324          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    325          void MENUAVANCADO_configura_flag_correcao_erro(void){
   \                     MENUAVANCADO_configura_flag_correcao_erro:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    326            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0004             MOVS     R4,R0
    327            unsigned char flag;
    328            
    329            PARAMETROS_le(ADR_COMPENSADOR_ERRO_ROTACAO,(void*)&flag);
   \   0000000A   0xA900             ADD      R1,SP,#+0
   \   0000000C   0x2040             MOVS     R0,#+64
   \   0000000E   0x.... 0x....      BL       PARAMETROS_le
    330            
    331            flag = MEF_entry("ERRO MOTOR",flag,"ON ","OFF");    
                          ^
Warning[Pe223]: function "MEF_entry" declared implicitly
   \   00000012   0x....             ADR.N    R3,??DataTable6  ;; "OFF"
   \   00000014   0x....             ADR.N    R2,??DataTable6_1  ;; "ON "
   \   00000016   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000001A   0x....             LDR.N    R0,??DataTable6_17
   \   0000001C   0x.... 0x....      BL       MEF_entry
   \   00000020   0xF88D 0x0000      STRB     R0,[SP, #+0]
    332            
    333            PARAMETROS_grava(ADR_COMPENSADOR_ERRO_ROTACAO,(void*)&flag);
   \   00000024   0xA900             ADD      R1,SP,#+0
   \   00000026   0x2040             MOVS     R0,#+64
   \   00000028   0x.... 0x....      BL       PARAMETROS_grava
    334          }
   \   0000002C   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x4F 0x46          DC8      "OFF"
   \              0x46 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x4F 0x4E          DC8      "ON "
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     MENUAVANCADO_func

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     STRING_menu_avancado

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     STRING_titulo_menu_avancado

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     `?<Constant "   Mais Pipoca  ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     STRING_titulo_padrao_fabrica

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     STRING_mensagem_reset_fabrica

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     STRING_mensagem_inserir_senha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     STRING_mensagem_cadastro_senha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     STRING_mensagem_cadastro_senha_erro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     STRING_mensagem_reinicia_totalizadores

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     STRING_mensagem_reinicia_totalizadores_erro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x000F423F         DC32     0xf423f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     `?<Constant "%06d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     STRING_titulo_edita_serial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x........         DC32     `?<Constant "ERRO MOTOR">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "   Mais Pipoca  ">`:
   \   00000000   0x20 0x20          DC8 "   Mais Pipoca  "
   \              0x20 0x4D    
   \              0x61 0x69    
   \              0x73 0x20    
   \              0x50 0x69    
   \              0x70 0x6F    
   \              0x63 0x61    
   \              0x20 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%06d">`:
   \   00000000   0x25 0x30          DC8 "%06d"
   \              0x36 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERRO MOTOR">`:
   \   00000000   0x45 0x52          DC8 "ERRO MOTOR"
   \              0x52 0x4F    
   \              0x20 0x4D    
   \              0x4F 0x54    
   \              0x4F 0x52    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x4F 0x4E          DC8 "ON "
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4F 0x46          DC8 "OFF"
   \              0x46 0x00    
    335          /***********************************************************************************
    336          *       Fim do arquivo
    337          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   MENUAVANCADO_cadastra_senha_admin
        16   -> APLICACAO_carrega_idioma
        16   -> PARAMETROS_grava
        16   -> PARAMETROS_le
        16   -> STRING_write_to_internal
        16   -> TELASENHA_get_senha
        16   -> TELASENHA_telaSenha
        16   -> vTaskDelay
      16   MENUAVANCADO_configura_flag_correcao_erro
        16   -> APLICACAO_carrega_idioma
        16   -> MEF_entry
        16   -> PARAMETROS_grava
        16   -> PARAMETROS_le
       8   MENUAVANCADO_configura_hora_data
         8   -> IAR_entry
      16   MENUAVANCADO_configura_numero_serie
        16   -> APLICACAO_carrega_idioma
        16   -> MEI_entry
        16   -> PARAMETROS_grava
        16   -> PARAMETROS_le
        16   -> STRING_write_to_internal
        16   -> TELASENHA_checa_contrasenha
       8   MENUAVANCADO_entry
         8   -> APLICACAO_carrega_idioma
         8   -> MENUROLAGEM_show
         8   -> TELASENHA_telaSenha
       8   MENUAVANCADO_menu_ganhos_PID
         8   -> APLICACAO_carrega_idioma
         8   -> STRING_write_to_internal
         8   -> TELASENHA_checa_contrasenha
         8   -> vTaskDelay
      40   MENUAVANCADO_padrao_fabrica
        40   -> APLICACAO_carrega_idioma
        40   -> PARAMETROS_grava
        40   -> STRING_write_to_internal
        40   -> TELASENHA_telaSenha
        40   -> __aeabi_memcpy4
       8   MENUAVANCADO_reset_totalizadores_permanentes
         8   -> APLICACAO_carrega_idioma
         8   -> FATURAMENTO_reinicia_pipocas_teste
         8   -> FATURAMENTO_set_arrecadacao_cartao_parcial
         8   -> FATURAMENTO_set_arrecadacao_cartao_total
         8   -> FATURAMENTO_set_arrecadacao_parcial
         8   -> FATURAMENTO_set_arrecadacao_total
         8   -> FATURAMENTO_set_contagem_cartao_parcial
         8   -> FATURAMENTO_set_contagem_cartao_total
         8   -> FATURAMENTO_set_contagem_parcial
         8   -> FATURAMENTO_set_contagem_total
         8   -> FTP_formata_fila
         8   -> STRING_write_to_internal
         8   -> TELASENHA_checa_contrasenha
         8   -> vTaskDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "   Mais Pipoca  ">
       8  ?<Constant "%06d">
      12  ?<Constant "ERRO MOTOR">
       4  ?<Constant "OFF">
       4  ?<Constant "ON ">
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
     142  MENUAVANCADO_cadastra_senha_admin
      46  MENUAVANCADO_configura_flag_correcao_erro
       8  MENUAVANCADO_configura_hora_data
     116  MENUAVANCADO_configura_numero_serie
      46  MENUAVANCADO_entry
      32  MENUAVANCADO_func
      52  MENUAVANCADO_menu_ganhos_PID
     254  MENUAVANCADO_padrao_fabrica
     134  MENUAVANCADO_reset_totalizadores_permanentes

 
  80 bytes in section .rodata
 870 bytes in section .text
 
 870 bytes of CODE  memory
  80 bytes of CONST memory

Errors: none
Warnings: 3

###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      20/Jul/2017  16:45:12 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\menu_teste_mdb.c                #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\menu_teste_mdb.c -lC            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\menu_teste_mdb.lst             #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\menu_teste_mdb.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\menu_teste_mdb.c
      1          /*__________________________________________________________________________________
      2          |	DEXTRO SOLUÇÕES TECNOLÓGICAS
      3          |       
      4          |       ITAJAÍ - SC
      5          |       www.dextro.ind.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by DEXTRO  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by DEXTRO 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da DEXTRO  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       DEXTRO  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  menu_teste_mdb.c
     18          |       Descrição          :  Menu para realizar o teste dos dispositivos MDB
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  28/02/2017
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *       Includes
     31          ***********************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include <string.h>
     35          #include "..\includes.h"
     36          #include "menu_teste_mdb.h"
     37          #include "menu_ajuste_relogio.h"
     38          #include "menu_configuracao.h"
     39          #include "menu_edita_flag.h"
     40          #include "menu_edita_inteiro.h"
     41          #include "menu_edita_listagem.h"
     42          #include "menu_info_binaria.h"
     43          #include "menu_rolagem.h"
     44          #include "menu_teste_hardware.h"
     45          
     46          /***********************************************************************************
     47          *       Definições
     48          ***********************************************************************************/
     49          
     50          
     51          /***********************************************************************************
     52          *       Variaveis locais
     53          ***********************************************************************************/
     54          
     55          
     56          /************************************************************************************
     57          *       Funções locais
     58          ***********************************************************************************/
     59          void MTMDB_verifica_dispositivos(void);
     60          void MTMDB_teste_contagem_noteiro(void);
     61          void MTMDB_teste_contagem_moedeiro(void);
     62          void MTMDB_test_contagem_cartao(void);
     63          void MTMDB_libera_troco(void);
     64          
     65          /***********************************************************************************
     66          *       Tabela de funções
     67          ***********************************************************************************/

   \                                 In section .rodata, align 4
     68          void(*const MTMDB_func[])(void)={
   \                     MTMDB_func:
   \   00000000   0x........         DC32 MTMDB_verifica_dispositivos, MTMDB_teste_contagem_noteiro
   \              0x........   
   \   00000008   0x........         DC32 MTMDB_teste_contagem_moedeiro, MTMDB_test_contagem_cartao, 0H
   \              0x........   
   \              0x00000000   
     69            MTMDB_verifica_dispositivos,
     70            MTMDB_teste_contagem_noteiro,
     71            MTMDB_teste_contagem_moedeiro,
     72            MTMDB_test_contagem_cartao,
     73            NULL
     74          };
     75          
     76          /***********************************************************************************
     77          *       Implementação das funções
     78          ***********************************************************************************/
     79          
     80          /***********************************************************************************
     81          *       Descrição       :       Função principal do menu de teste 
     82          *                               do barramento MDB
     83          *       Parametros      :       nenhum
     84          *       Retorno         :       nenhum
     85          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     86          void MTMDB_entry(void){
   \                     MTMDB_entry:
   \   00000000   0xB510             PUSH     {R4,LR}
     87            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
     88            
     89            MENUROLAGEM_show((char*)STRING_titulo_menu_mdb[idioma],
     90                             (char**)STRING_opcoes_menu_mdb[idioma],
     91                             TAM_OPCOES_MDB,
     92                             (void(**)(void))MTMDB_func); 
   \   00000006   0x....             LDR.N    R3,??DataTable4
   \   00000008   0x2205             MOVS     R2,#+5
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x2114             MOVS     R1,#+20
   \   0000000E   0x....             LDR.N    R4,??DataTable4_1
   \   00000010   0xFB01 0x4100      MLA      R1,R1,R0,R4
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x....             LDR.N    R4,??DataTable4_2
   \   00000018   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   0000001C   0x.... 0x....      BL       MENUROLAGEM_show
     93          }
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
     94          /***********************************************************************************
     95          *       Descrição       :       Função para visualizar o flag de comunicação
     96          *                               dos dispositivos MDB
     97          *       Parametros      :       nenhum
     98          *       Retorno         :       nenhum
     99          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          void MTMDB_verifica_dispositivos(void){
   \                     MTMDB_verifica_dispositivos:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    101            eTECLA tecla;
    102            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0004             MOVS     R4,R0
    103            char buffer_linha[17];
    104            
    105            SMDB_wait();
   \   0000000A   0x.... 0x....      BL       SMDB_wait
    106            
    107            STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_titulo_teste_devices_mdb[idioma],NULL);    
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x....             LDR.N    R0,??DataTable4_3
   \   00000014   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       STRING_write_to_internal
   \   0000001E   0xE00A             B.N      ??MTMDB_verifica_dispositivos_0
    108            
    109            for(;;){
    110             
    111              tecla = TECLADO_getch();
    112              switch(tecla){
    113                case TECLA_ENTER:
    114                     break;
    115                case TECLA_ESC:
    116                     SMDB_release(); 
    117                     return;
    118                case TECLA_INC:           
    119                     break;
    120                case TECLA_DEC:
    121                     break;
    122              }
    123              
    124              eMDB_reply bill  = MDBILL_verifica_dispositivo();
    125              eMDB_reply coin  = MDBCOIN_get_device();
    126              eMDB_reply cashless = CASHLESS_adreess();
    127              
    128              sprintf(buffer_linha,"BV:%01d CA:%01d CD:%01d",bill==MDB_OK?1:0,coin==MDB_OK?1:0,cashless==MDB_OK?1:0);    
   \                     ??MTMDB_verifica_dispositivos_1:
   \   00000020   0x2200             MOVS     R2,#+0
   \                     ??MTMDB_verifica_dispositivos_2:
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0x....             LDR.N    R1,??DataTable4_4
   \   00000026   0xA801             ADD      R0,SP,#+4
   \   00000028   0x.... 0x....      BL       sprintf
    129              STRING_write_to_internal(NO_CLEAR,NULL,buffer_linha);
   \   0000002C   0xAA01             ADD      R2,SP,#+4
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x.... 0x....      BL       STRING_write_to_internal
   \                     ??MTMDB_verifica_dispositivos_0:
   \   00000036   0x.... 0x....      BL       TECLADO_getch
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD006             BEQ.N    ??MTMDB_verifica_dispositivos_3
   \   00000040   0xD30A             BCC.N    ??MTMDB_verifica_dispositivos_4
   \   00000042   0x2803             CMP      R0,#+3
   \   00000044   0xD008             BEQ.N    ??MTMDB_verifica_dispositivos_5
   \   00000046   0xD306             BCC.N    ??MTMDB_verifica_dispositivos_6
   \   00000048   0x2804             CMP      R0,#+4
   \   0000004A   0xD105             BNE.N    ??MTMDB_verifica_dispositivos_4
   \                     ??MTMDB_verifica_dispositivos_7:
   \   0000004C   0xE004             B.N      ??MTMDB_verifica_dispositivos_4
   \                     ??MTMDB_verifica_dispositivos_3:
   \   0000004E   0x.... 0x....      BL       SMDB_release
   \   00000052   0xB007             ADD      SP,SP,#+28
   \   00000054   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??MTMDB_verifica_dispositivos_6:
   \   00000056   0xE7FF             B.N      ??MTMDB_verifica_dispositivos_4
   \                     ??MTMDB_verifica_dispositivos_5:
   \                     ??MTMDB_verifica_dispositivos_4:
   \   00000058   0x.... 0x....      BL       MDBILL_verifica_dispositivo
   \   0000005C   0x0004             MOVS     R4,R0
   \   0000005E   0x.... 0x....      BL       MDBCOIN_get_device
   \   00000062   0x0005             MOVS     R5,R0
   \   00000064   0x.... 0x....      BL       CASHLESS_adreess
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD101             BNE.N    ??MTMDB_verifica_dispositivos_8
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0xE000             B.N      ??MTMDB_verifica_dispositivos_9
   \                     ??MTMDB_verifica_dispositivos_8:
   \   00000072   0x2000             MOVS     R0,#+0
   \                     ??MTMDB_verifica_dispositivos_9:
   \   00000074   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000076   0x2D00             CMP      R5,#+0
   \   00000078   0xD101             BNE.N    ??MTMDB_verifica_dispositivos_10
   \   0000007A   0x2301             MOVS     R3,#+1
   \   0000007C   0xE000             B.N      ??MTMDB_verifica_dispositivos_11
   \                     ??MTMDB_verifica_dispositivos_10:
   \   0000007E   0x2300             MOVS     R3,#+0
   \                     ??MTMDB_verifica_dispositivos_11:
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0x2C00             CMP      R4,#+0
   \   00000084   0xD1CC             BNE.N    ??MTMDB_verifica_dispositivos_1
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0xE7CB             B.N      ??MTMDB_verifica_dispositivos_2
    130            }     
    131          }
    132          /***********************************************************************************
    133          *       Descrição       :       Função para pegar o valor adicionado ao
    134          *                               noteiro MDB
    135          *       Parametros      :       nenhum
    136          *       Retorno         :       nenhum
    137          ***********************************************************************************/
    138          extern void SMDBILL_set_bloqueio(unsigned char bloqueio);

   \                                 In section .text, align 2, keep-with-next
    139          void MTMDB_teste_contagem_noteiro(void){
   \                     MTMDB_teste_contagem_noteiro:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    140            eTECLA tecla;
    141            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
    142            char buffer_linha[17];  
    143            unsigned char flag=0;
   \   00000008   0x2400             MOVS     R4,#+0
    144            
    145            STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_titulo_teste_bill_mdb[idioma],NULL);   
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x....             LDR.N    R1,??DataTable4_5
   \   00000010   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       STRING_write_to_internal
   \   0000001A   0xE00A             B.N      ??MTMDB_teste_contagem_noteiro_0
    146            
    147            for(;;){
    148              
    149              tecla = TECLADO_getch();
    150              switch(tecla){
    151                case TECLA_ENTER:
    152                     PAGAMENTOS_set_valores(0);
    153                     break;
    154                case TECLA_ESC:
    155                     return;
    156                case TECLA_INC:
    157                     flag = 1;
    158                     SMDBILL_set_bloqueio(1);        
    159                     break;
    160                case TECLA_DEC:
    161                     flag = 0;
    162                     SMDBILL_set_bloqueio(0);        
    163                     break;
    164              }
    165              
    166              unsigned int valor = PAGAMENTOS_get_valor_acumulado();
    167              sprintf(buffer_linha,"%05d[%s]",valor,flag?" LOCK ":"UNLOCK");
   \                     ??MTMDB_teste_contagem_noteiro_1:
   \   0000001C   0x....             LDR.N    R3,??DataTable4_6
   \                     ??MTMDB_teste_contagem_noteiro_2:
   \   0000001E   0x0002             MOVS     R2,R0
   \   00000020   0x....             LDR.N    R1,??DataTable4_7
   \   00000022   0xA800             ADD      R0,SP,#+0
   \   00000024   0x.... 0x....      BL       sprintf
    168              STRING_write_to_internal(NO_CLEAR,NULL,buffer_linha);
   \   00000028   0xAA00             ADD      R2,SP,#+0
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x.... 0x....      BL       STRING_write_to_internal
   \                     ??MTMDB_teste_contagem_noteiro_0:
   \   00000032   0x.... 0x....      BL       TECLADO_getch
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x2801             CMP      R0,#+1
   \   0000003A   0xD009             BEQ.N    ??MTMDB_teste_contagem_noteiro_3
   \   0000003C   0xD313             BCC.N    ??MTMDB_teste_contagem_noteiro_4
   \   0000003E   0x2803             CMP      R0,#+3
   \   00000040   0xD00D             BEQ.N    ??MTMDB_teste_contagem_noteiro_5
   \   00000042   0xD307             BCC.N    ??MTMDB_teste_contagem_noteiro_6
   \   00000044   0x2804             CMP      R0,#+4
   \   00000046   0xD10E             BNE.N    ??MTMDB_teste_contagem_noteiro_4
   \                     ??MTMDB_teste_contagem_noteiro_7:
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      BL       PAGAMENTOS_set_valores
   \   0000004E   0xE00A             B.N      ??MTMDB_teste_contagem_noteiro_4
   \                     ??MTMDB_teste_contagem_noteiro_3:
   \   00000050   0xB006             ADD      SP,SP,#+24
   \   00000052   0xBD10             POP      {R4,PC}          ;; return
   \                     ??MTMDB_teste_contagem_noteiro_6:
   \   00000054   0x2401             MOVS     R4,#+1
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0x.... 0x....      BL       SMDBILL_set_bloqueio
   \   0000005C   0xE003             B.N      ??MTMDB_teste_contagem_noteiro_4
   \                     ??MTMDB_teste_contagem_noteiro_5:
   \   0000005E   0x2400             MOVS     R4,#+0
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x.... 0x....      BL       SMDBILL_set_bloqueio
   \                     ??MTMDB_teste_contagem_noteiro_4:
   \   00000066   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000006A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006C   0x2C00             CMP      R4,#+0
   \   0000006E   0xD0D5             BEQ.N    ??MTMDB_teste_contagem_noteiro_1
   \   00000070   0x....             LDR.N    R3,??DataTable4_8
   \   00000072   0xE7D4             B.N      ??MTMDB_teste_contagem_noteiro_2
    169            }  
    170          }
    171          /***********************************************************************************
    172          *       Descrição       :       Função para pegar o valor adicionar ao moedeiro
    173          *                               MDB
    174          *       Parametros      :       nenhum
    175          *       Retorno         :       nenhum
    176          ***********************************************************************************/
    177          extern void SMDBCOIN_set_flag_bloqueio(unsigned char flag);

   \                                 In section .text, align 2, keep-with-next
    178          void MTMDB_teste_contagem_moedeiro(void){
   \                     MTMDB_teste_contagem_moedeiro:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    179            eTECLA tecla;
    180            unsigned char idioma = APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0004             MOVS     R4,R0
    181            char buffer_linha[17];  
    182            unsigned char flag=0;
   \   0000000A   0x2500             MOVS     R5,#+0
    183            
    184            STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_titulo_teste_coin_mdb[idioma],NULL);   
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x....             LDR.N    R0,??DataTable4_9
   \   00000012   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       STRING_write_to_internal
    185            PAGAMENTOS_set_valores(0);
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       PAGAMENTOS_set_valores
   \   00000022   0xE012             B.N      ??MTMDB_teste_contagem_moedeiro_0
    186            
    187            for(;;){
    188              
    189              tecla = TECLADO_getch();
    190              switch(tecla){
    191                case TECLA_ENTER:
    192                     MTMDB_libera_troco();
    193                     STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_titulo_teste_coin_mdb[idioma],NULL);              
    194                     break;
    195                case TECLA_ESC:
    196                     return;
    197                case TECLA_INC:
    198                     flag = 1;
    199                     SMDBCOIN_set_flag_bloqueio(1);        
    200                     break;
    201                case TECLA_DEC:
    202                     flag = 0;
    203                     SMDBCOIN_set_flag_bloqueio(0);        
    204                     break;
    205              }
    206              
    207              unsigned int valor = PAGAMENTOS_get_valor_acumulado();
    208              sprintf(buffer_linha,"%04d,%02d[%s]",valor/100,valor%100,flag?" LOCK ":"UNLOCK");
   \                     ??MTMDB_teste_contagem_moedeiro_1:
   \   00000024   0x....             LDR.N    R1,??DataTable4_6
   \                     ??MTMDB_teste_contagem_moedeiro_2:
   \   00000026   0x2264             MOVS     R2,#+100
   \   00000028   0x9100             STR      R1,[SP, #+0]
   \   0000002A   0xFBB0 0xF1F2      UDIV     R1,R0,R2
   \   0000002E   0xFB02 0x0311      MLS      R3,R2,R1,R0
   \   00000032   0x2164             MOVS     R1,#+100
   \   00000034   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000038   0x....             LDR.N    R1,??DataTable4_10
   \   0000003A   0xA801             ADD      R0,SP,#+4
   \   0000003C   0x.... 0x....      BL       sprintf
    209              STRING_write_to_internal(NO_CLEAR,NULL,buffer_linha);
   \   00000040   0xAA01             ADD      R2,SP,#+4
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x.... 0x....      BL       STRING_write_to_internal
   \                     ??MTMDB_teste_contagem_moedeiro_0:
   \   0000004A   0x.... 0x....      BL       TECLADO_getch
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD010             BEQ.N    ??MTMDB_teste_contagem_moedeiro_3
   \   00000054   0xD31A             BCC.N    ??MTMDB_teste_contagem_moedeiro_4
   \   00000056   0x2803             CMP      R0,#+3
   \   00000058   0xD014             BEQ.N    ??MTMDB_teste_contagem_moedeiro_5
   \   0000005A   0xD30E             BCC.N    ??MTMDB_teste_contagem_moedeiro_6
   \   0000005C   0x2804             CMP      R0,#+4
   \   0000005E   0xD115             BNE.N    ??MTMDB_teste_contagem_moedeiro_4
   \                     ??MTMDB_teste_contagem_moedeiro_7:
   \   00000060   0x.... 0x....      BL       MTMDB_libera_troco
   \   00000064   0x2200             MOVS     R2,#+0
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x....             LDR.N    R0,??DataTable4_9
   \   0000006A   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       STRING_write_to_internal
   \   00000074   0xE00A             B.N      ??MTMDB_teste_contagem_moedeiro_4
   \                     ??MTMDB_teste_contagem_moedeiro_3:
   \   00000076   0xB007             ADD      SP,SP,#+28
   \   00000078   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??MTMDB_teste_contagem_moedeiro_6:
   \   0000007A   0x2501             MOVS     R5,#+1
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      BL       SMDBCOIN_set_flag_bloqueio
   \   00000082   0xE003             B.N      ??MTMDB_teste_contagem_moedeiro_4
   \                     ??MTMDB_teste_contagem_moedeiro_5:
   \   00000084   0x2500             MOVS     R5,#+0
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      BL       SMDBCOIN_set_flag_bloqueio
   \                     ??MTMDB_teste_contagem_moedeiro_4:
   \   0000008C   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   00000090   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000092   0x2D00             CMP      R5,#+0
   \   00000094   0xD0C6             BEQ.N    ??MTMDB_teste_contagem_moedeiro_1
   \   00000096   0x....             LDR.N    R1,??DataTable4_8
   \   00000098   0xE7C5             B.N      ??MTMDB_teste_contagem_moedeiro_2
    210            }   
    211          }
    212          /***********************************************************************************
    213          *       Descrição       :       Tela para o usuário selecionar quantas moedas
    214          *                               serão liberadas no troco
    215          *       Parametros      :       nenhum
    216          *       Retorno         :       nenhum
    217          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    218          void MTMDB_libera_troco(void){
   \                     MTMDB_libera_troco:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    219            BOARD_setter_general_purpose_counter(10000);
   \   00000004   0xF242 0x7010      MOVW     R0,#+10000
   \   00000008   0x.... 0x....      BL       BOARD_setter_general_purpose_counter
    220            eTECLA tecla;  
    221            unsigned char quantidade=1;
   \   0000000C   0x2401             MOVS     R4,#+1
    222            char buffer_linha[17];
    223            unsigned char idioma = APLICACAO_carrega_idioma();
   \   0000000E   0x.... 0x....      BL       APLICACAO_carrega_idioma
    224              
    225            STRING_write_to_internal(CLEAR_DISPLAY,(char*)STRING_titulo_teste_coin_changer_mdb[idioma],NULL);     
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x....             LDR.N    R1,??DataTable4_11
   \   00000018   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       STRING_write_to_internal
   \   00000022   0xE00E             B.N      ??MTMDB_libera_troco_0
    226            for(;BOARD_getter_general_purpose_counter();){
    227              
    228              tecla = TECLADO_getch();
    229              switch(tecla){
    230                case TECLA_ENTER:
    231                     MDB_coin_dispenser(2,quantidade);
    232                     break;
    233                case TECLA_ESC:
    234                     return;
    235                case TECLA_INC:
    236                      if(quantidade<16)
    237                        quantidade++;
    238                     break;
    239                case TECLA_DEC:
    240                     if(quantidade>1)
   \                     ??MTMDB_libera_troco_1:
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C02             CMP      R4,#+2
   \   00000028   0xDB00             BLT.N    ??MTMDB_libera_troco_2
    241                       quantidade--;
   \   0000002A   0x1E64             SUBS     R4,R4,#+1
    242                     break;
    243              }        
    244              
    245              sprintf(buffer_linha,"Moedas:%02d",quantidade);
   \                     ??MTMDB_libera_troco_2:
   \                     ??MTMDB_libera_troco_3:
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x0022             MOVS     R2,R4
   \   00000030   0x....             LDR.N    R1,??DataTable4_12
   \   00000032   0xA800             ADD      R0,SP,#+0
   \   00000034   0x.... 0x....      BL       sprintf
    246              STRING_write_to_internal(NO_CLEAR,NULL,buffer_linha);    
   \   00000038   0xAA00             ADD      R2,SP,#+0
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      BL       STRING_write_to_internal
   \                     ??MTMDB_libera_troco_0:
   \   00000042   0x.... 0x....      BL       BOARD_getter_general_purpose_counter
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD016             BEQ.N    ??MTMDB_libera_troco_4
   \   0000004A   0x.... 0x....      BL       TECLADO_getch
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD00B             BEQ.N    ??MTMDB_libera_troco_5
   \   00000054   0xD3EA             BCC.N    ??MTMDB_libera_troco_3
   \   00000056   0x2803             CMP      R0,#+3
   \   00000058   0xD0E4             BEQ.N    ??MTMDB_libera_troco_1
   \   0000005A   0xD308             BCC.N    ??MTMDB_libera_troco_6
   \   0000005C   0x2804             CMP      R0,#+4
   \   0000005E   0xD1E5             BNE.N    ??MTMDB_libera_troco_3
   \                     ??MTMDB_libera_troco_7:
   \   00000060   0x0021             MOVS     R1,R4
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x2002             MOVS     R0,#+2
   \   00000066   0x.... 0x....      BL       MDB_coin_dispenser
   \   0000006A   0xE7DF             B.N      ??MTMDB_libera_troco_3
   \                     ??MTMDB_libera_troco_5:
   \   0000006C   0xE004             B.N      ??MTMDB_libera_troco_8
   \                     ??MTMDB_libera_troco_6:
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0x2C10             CMP      R4,#+16
   \   00000072   0xDA00             BGE.N    ??MTMDB_libera_troco_9
   \   00000074   0x1C64             ADDS     R4,R4,#+1
   \                     ??MTMDB_libera_troco_9:
   \   00000076   0xE7D9             B.N      ??MTMDB_libera_troco_3
    247            }  
    248          }
   \                     ??MTMDB_libera_troco_4:
   \                     ??MTMDB_libera_troco_8:
   \   00000078   0xB006             ADD      SP,SP,#+24
   \   0000007A   0xBD10             POP      {R4,PC}          ;; return
    249          /***********************************************************************************
    250          *       Descrição       :       Função para pegar o valor adicionar ao cartão
    251          *       Parametros      :       nenhum
    252          *       Retorno         :       nenhum
    253          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    254          void MTMDB_test_contagem_cartao(void){
    255            
    256            
    257          }
   \                     MTMDB_test_contagem_cartao:
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     MTMDB_func

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     STRING_opcoes_menu_mdb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     STRING_titulo_menu_mdb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     STRING_titulo_teste_devices_mdb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     `?<Constant "BV:%01d CA:%01d CD:%01d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     STRING_titulo_teste_bill_mdb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     `?<Constant "UNLOCK">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     `?<Constant "%05d[%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     `?<Constant " LOCK ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     STRING_titulo_teste_coin_mdb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant "%04d,%02d[%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     STRING_titulo_teste_coin_changer_mdb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     `?<Constant "Moedas:%02d">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "BV:%01d CA:%01d CD:%01d">`:
   \   00000000   0x42 0x56          DC8 "BV:%01d CA:%01d CD:%01d"
   \              0x3A 0x25    
   \              0x30 0x31    
   \              0x64 0x20    
   \              0x43 0x41    
   \              0x3A 0x25    
   \              0x30 0x31    
   \              0x64 0x20    
   \              0x43 0x44    
   \              0x3A 0x25    
   \              0x30 0x31    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%05d[%s]">`:
   \   00000000   0x25 0x30          DC8 "%05d[%s]"
   \              0x35 0x64    
   \              0x5B 0x25    
   \              0x73 0x5D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant " LOCK ">`:
   \   00000000   0x20 0x4C          DC8 " LOCK "
   \              0x4F 0x43    
   \              0x4B 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "UNLOCK">`:
   \   00000000   0x55 0x4E          DC8 "UNLOCK"
   \              0x4C 0x4F    
   \              0x43 0x4B    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "%04d,%02d[%s]">`:
   \   00000000   0x25 0x30          DC8 "%04d,%02d[%s]"
   \              0x34 0x64    
   \              0x2C 0x25    
   \              0x30 0x32    
   \              0x64 0x5B    
   \              0x25 0x73    
   \              0x5D 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Moedas:%02d">`:
   \   00000000   0x4D 0x6F          DC8 "Moedas:%02d"
   \              0x65 0x64    
   \              0x61 0x73    
   \              0x3A 0x25    
   \              0x30 0x32    
   \              0x64 0x00    
    258          /***********************************************************************************
    259          *       Fim do arquivo
    260          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MTMDB_entry
         8   -> APLICACAO_carrega_idioma
         8   -> MENUROLAGEM_show
      32   MTMDB_libera_troco
        32   -> APLICACAO_carrega_idioma
        32   -> BOARD_getter_general_purpose_counter
        32   -> BOARD_setter_general_purpose_counter
        32   -> MDB_coin_dispenser
        32   -> STRING_write_to_internal
        32   -> TECLADO_getch
        32   -> sprintf
       0   MTMDB_test_contagem_cartao
      40   MTMDB_teste_contagem_moedeiro
        40   -> APLICACAO_carrega_idioma
        40   -> MTMDB_libera_troco
        40   -> PAGAMENTOS_get_valor_acumulado
        40   -> PAGAMENTOS_set_valores
        40   -> SMDBCOIN_set_flag_bloqueio
        40   -> STRING_write_to_internal
        40   -> TECLADO_getch
        40   -> sprintf
      32   MTMDB_teste_contagem_noteiro
        32   -> APLICACAO_carrega_idioma
        32   -> PAGAMENTOS_get_valor_acumulado
        32   -> PAGAMENTOS_set_valores
        32   -> SMDBILL_set_bloqueio
        32   -> STRING_write_to_internal
        32   -> TECLADO_getch
        32   -> sprintf
      40   MTMDB_verifica_dispositivos
        40   -> APLICACAO_carrega_idioma
        40   -> CASHLESS_adreess
        40   -> MDBCOIN_get_device
        40   -> MDBILL_verifica_dispositivo
        40   -> SMDB_release
        40   -> SMDB_wait
        40   -> STRING_write_to_internal
        40   -> TECLADO_getch
        40   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant " LOCK ">
      16  ?<Constant "%04d,%02d[%s]">
      12  ?<Constant "%05d[%s]">
      24  ?<Constant "BV:%01d CA:%01d CD:%01d">
      12  ?<Constant "Moedas:%02d">
       8  ?<Constant "UNLOCK">
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      34  MTMDB_entry
      20  MTMDB_func
     124  MTMDB_libera_troco
       2  MTMDB_test_contagem_cartao
     154  MTMDB_teste_contagem_moedeiro
     116  MTMDB_teste_contagem_noteiro
     138  MTMDB_verifica_dispositivos

 
 100 bytes in section .rodata
 620 bytes in section .text
 
 620 bytes of CODE  memory
 100 bytes of CONST memory

Errors: none
Warnings: none

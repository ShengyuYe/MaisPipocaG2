###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      13/Sep/2017  16:35:08 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\WH1602\WH1 #
#                    602.C                                                    #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\WH1602\WH1 #
#                    602.C -lC C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Li #
#                    st\ -lA C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List #
#                    \ -o C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\    #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\WH1602. #
#                    lst                                                      #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\WH1602.o #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\WH1602\WH1602.C
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  WH1602.C
     18          |       Descrição          :  Driver para o LCD wh1602 da winstar
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *		Includes
     31          ***********************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include "WH1602_targetWrapper.h"

   \                                 In section .noinit, at 0x2009c000
   \   __absolute union <unnamed> volatile _A_FIO0DIR
   \                     _A_FIO0DIR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c018
   \   __absolute union <unnamed> volatile _A_FIO0SET
   \                     _A_FIO0SET:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c01c
   \   __absolute union <unnamed> volatile _A_FIO0CLR
   \                     _A_FIO0CLR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c020
   \   __absolute union <unnamed> volatile _A_FIO1DIR
   \                     _A_FIO1DIR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c038
   \   __absolute union <unnamed> volatile _A_FIO1SET
   \                     _A_FIO1SET:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c03c
   \   __absolute union <unnamed> volatile _A_FIO1CLR
   \                     _A_FIO1CLR:
   \   00000000                      DS8 4
     35          #include "WH1602.H"
     36          /***********************************************************************************
     37          *		Constantes
     38          ***********************************************************************************/
     39          #define ENDERECO_SEGUNDA_LINHA              0xC0
     40          #define DELAY_CICLES                        1100
     41          
     42          #define HD44780_delay_ms(X)                 vTaskDelay(X)
     43          /***********************************************************************************
     44          *		Variaveis locais
     45          ***********************************************************************************/

   \                                 In section .bss, align 1
     46          unsigned char controleLcd=0x00;
   \                     controleLcd:
   \   00000000                      DS8 1
     47          extern unsigned int HD44780_2_tempoRefreshSegundoLCD;
     48          /***********************************************************************************
     49          *		Funções locais
     50          ***********************************************************************************/
     51          void HD44780_enviaNibble(unsigned char value);
     52          void HD44780_enviaByte(unsigned char endereco,unsigned char value);
     53          
     54          /***********************************************************************************
     55          *		Implementação
     56          ***********************************************************************************/
     57          
     58          /***********************************************************************************
     59          *   Descrição   :   Inicialização do módulo
     60          *   Parametros  :   nenhum
     61          *   Retorno     :   nenhum
     62          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     63          void HD44780_init(unsigned char modo1,unsigned char modo2){
   \                     HD44780_init:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     64            unsigned char i;
     65            
     66            INIT_DIR_PINS; 
   \   00000006   0x....             LDR.N    R0,??DataTable10  ;; 0x2009c020
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000000E   0x....             LDR.N    R1,??DataTable10  ;; 0x2009c020
   \   00000010   0x6008             STR      R0,[R1, #+0]
   \   00000012   0x....             LDR.N    R0,??DataTable10  ;; 0x2009c020
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000001A   0x....             LDR.N    R1,??DataTable10  ;; 0x2009c020
   \   0000001C   0x6008             STR      R0,[R1, #+0]
   \   0000001E   0x....             LDR.N    R0,??DataTable10_1  ;; 0x2009c000
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000026   0x....             LDR.N    R1,??DataTable10_1  ;; 0x2009c000
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0x....             LDR.N    R0,??DataTable10_1  ;; 0x2009c000
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000032   0x....             LDR.N    R1,??DataTable10_1  ;; 0x2009c000
   \   00000034   0x6008             STR      R0,[R1, #+0]
   \   00000036   0x....             LDR.N    R0,??DataTable10_1  ;; 0x2009c000
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000003E   0x....             LDR.N    R1,??DataTable10_1  ;; 0x2009c000
   \   00000040   0x6008             STR      R0,[R1, #+0]
   \   00000042   0x....             LDR.N    R0,??DataTable10_1  ;; 0x2009c000
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000004A   0x....             LDR.N    R1,??DataTable10_1  ;; 0x2009c000
   \   0000004C   0x6008             STR      R0,[R1, #+0]
   \   0000004E   0x....             LDR.N    R0,??DataTable10  ;; 0x2009c020
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000056   0x....             LDR.N    R1,??DataTable10  ;; 0x2009c020
   \   00000058   0x6008             STR      R0,[R1, #+0]
     67            
     68            HD44780_delay_ms(500);
   \   0000005A   0xF44F 0x70FA      MOV      R0,#+500
   \   0000005E   0x.... 0x....      BL       vTaskDelay
     69          
     70            for(i=0;i<3;i++){
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x0006             MOVS     R6,R0
   \                     ??HD44780_init_0:
   \   00000066   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000068   0x2E03             CMP      R6,#+3
   \   0000006A   0xDA07             BGE.N    ??HD44780_init_1
     71              HD44780_enviaNibble(0x03);
   \   0000006C   0x2003             MOVS     R0,#+3
   \   0000006E   0x.... 0x....      BL       HD44780_enviaNibble
     72              HD44780_delay_ms(100);  
   \   00000072   0x2064             MOVS     R0,#+100
   \   00000074   0x.... 0x....      BL       vTaskDelay
     73            }
   \   00000078   0x1C76             ADDS     R6,R6,#+1
   \   0000007A   0xE7F4             B.N      ??HD44780_init_0
     74            
     75            HD44780_enviaNibble(0x02);
   \                     ??HD44780_init_1:
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x.... 0x....      BL       HD44780_enviaNibble
     76            HD44780_delay_ms(20);      
   \   00000082   0x2014             MOVS     R0,#+20
   \   00000084   0x.... 0x....      BL       vTaskDelay
     77            
     78            
     79            HD44780_enviaByte(0,0x20 | modo1);
   \   00000088   0xF054 0x0120      ORRS     R1,R4,#0x20
   \   0000008C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      BL       HD44780_enviaByte
     80            HD44780_delay_ms(20);        
   \   00000094   0x2014             MOVS     R0,#+20
   \   00000096   0x.... 0x....      BL       vTaskDelay
     81            HD44780_enviaByte(0,0x08 | modo2);
   \   0000009A   0xF055 0x0108      ORRS     R1,R5,#0x8
   \   0000009E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x.... 0x....      BL       HD44780_enviaByte
     82            HD44780_delay_ms(20);        
   \   000000A6   0x2014             MOVS     R0,#+20
   \   000000A8   0x.... 0x....      BL       vTaskDelay
     83            
     84            controleLcd = 0x08 | modo2;
   \   000000AC   0xF055 0x0008      ORRS     R0,R5,#0x8
   \   000000B0   0x....             LDR.N    R1,??DataTable10_2
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
     85            
     86            HD44780_enviaByte(0,0x10);
   \   000000B4   0x2110             MOVS     R1,#+16
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x.... 0x....      BL       HD44780_enviaByte
     87            HD44780_delay_ms(10);          
   \   000000BC   0x200A             MOVS     R0,#+10
   \   000000BE   0x.... 0x....      BL       vTaskDelay
     88            HD44780_enviaByte(0,0x06);   
   \   000000C2   0x2106             MOVS     R1,#+6
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      BL       HD44780_enviaByte
     89            HD44780_delay_ms(10);          
   \   000000CA   0x200A             MOVS     R0,#+10
   \   000000CC   0x.... 0x....      BL       vTaskDelay
     90          }
   \   000000D0   0xBD70             POP      {R4-R6,PC}       ;; return
   \   000000D2                      REQUIRE _A_FIO1DIR
   \   000000D2                      REQUIRE _A_FIO0DIR
     91          /***********************************************************************************
     92          *    Descrição   :   Envia um nibble para o controlador do LCD
     93          *    Parametros  :   (unsigned char) valor que será escrito no display
     94          *    Retorno     :   nenhum
     95          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     96          void HD44780_enviaNibble(unsigned char value){
     97           
     98            SET_LCD_ENABLE; 
   \                     HD44780_enviaNibble:
   \   00000000   0x....             LDR.N    R1,??DataTable10_3  ;; 0x2009c038
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0xF451 0x3100      ORRS     R1,R1,#0x20000
   \   00000008   0x....             LDR.N    R2,??DataTable10_3  ;; 0x2009c038
   \   0000000A   0x6011             STR      R1,[R2, #+0]
     99            __no_operation();
   \   0000000C   0xBF00             Nop      
    100            __no_operation();
   \   0000000E   0xBF00             Nop      
    101            __no_operation();
   \   00000010   0xBF00             Nop      
    102            __no_operation();
   \   00000012   0xBF00             Nop      
    103            __no_operation();
   \   00000014   0xBF00             Nop      
    104            __no_operation();  
   \   00000016   0xBF00             Nop      
    105            LCD_WRITE_NIBBLE(value);      
   \   00000018   0x07C1             LSLS     R1,R0,#+31
   \   0000001A   0xD506             BPL.N    ??HD44780_enviaNibble_0
   \   0000001C   0x....             LDR.N    R1,??DataTable10_3  ;; 0x2009c038
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   00000024   0x....             LDR.N    R2,??DataTable10_3  ;; 0x2009c038
   \   00000026   0x6011             STR      R1,[R2, #+0]
   \   00000028   0xE005             B.N      ??HD44780_enviaNibble_1
   \                     ??HD44780_enviaNibble_0:
   \   0000002A   0x....             LDR.N    R1,??DataTable10_4  ;; 0x2009c03c
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   00000032   0x....             LDR.N    R2,??DataTable10_4  ;; 0x2009c03c
   \   00000034   0x6011             STR      R1,[R2, #+0]
   \                     ??HD44780_enviaNibble_1:
   \   00000036   0x0781             LSLS     R1,R0,#+30
   \   00000038   0xD506             BPL.N    ??HD44780_enviaNibble_2
   \   0000003A   0x....             LDR.N    R1,??DataTable10_3  ;; 0x2009c038
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0xF051 0x0102      ORRS     R1,R1,#0x2
   \   00000042   0x....             LDR.N    R2,??DataTable10_3  ;; 0x2009c038
   \   00000044   0x6011             STR      R1,[R2, #+0]
   \   00000046   0xE005             B.N      ??HD44780_enviaNibble_3
   \                     ??HD44780_enviaNibble_2:
   \   00000048   0x....             LDR.N    R1,??DataTable10_4  ;; 0x2009c03c
   \   0000004A   0x6809             LDR      R1,[R1, #+0]
   \   0000004C   0xF051 0x0102      ORRS     R1,R1,#0x2
   \   00000050   0x....             LDR.N    R2,??DataTable10_4  ;; 0x2009c03c
   \   00000052   0x6011             STR      R1,[R2, #+0]
   \                     ??HD44780_enviaNibble_3:
   \   00000054   0x0741             LSLS     R1,R0,#+29
   \   00000056   0xD506             BPL.N    ??HD44780_enviaNibble_4
   \   00000058   0x....             LDR.N    R1,??DataTable10_5  ;; 0x2009c018
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   00000060   0x....             LDR.N    R2,??DataTable10_5  ;; 0x2009c018
   \   00000062   0x6011             STR      R1,[R2, #+0]
   \   00000064   0xE005             B.N      ??HD44780_enviaNibble_5
   \                     ??HD44780_enviaNibble_4:
   \   00000066   0x....             LDR.N    R1,??DataTable10_6  ;; 0x2009c01c
   \   00000068   0x6809             LDR      R1,[R1, #+0]
   \   0000006A   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   0000006E   0x....             LDR.N    R2,??DataTable10_6  ;; 0x2009c01c
   \   00000070   0x6011             STR      R1,[R2, #+0]
   \                     ??HD44780_enviaNibble_5:
   \   00000072   0x0701             LSLS     R1,R0,#+28
   \   00000074   0xD506             BPL.N    ??HD44780_enviaNibble_6
   \   00000076   0x....             LDR.N    R1,??DataTable10_5  ;; 0x2009c018
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   0000007E   0x....             LDR.N    R2,??DataTable10_5  ;; 0x2009c018
   \   00000080   0x6011             STR      R1,[R2, #+0]
   \   00000082   0xE005             B.N      ??HD44780_enviaNibble_7
   \                     ??HD44780_enviaNibble_6:
   \   00000084   0x....             LDR.N    R1,??DataTable10_6  ;; 0x2009c01c
   \   00000086   0x6809             LDR      R1,[R1, #+0]
   \   00000088   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   0000008C   0x....             LDR.N    R2,??DataTable10_6  ;; 0x2009c01c
   \   0000008E   0x6011             STR      R1,[R2, #+0]
    106            __no_operation();
   \                     ??HD44780_enviaNibble_7:
   \   00000090   0xBF00             Nop      
    107            __no_operation();
   \   00000092   0xBF00             Nop      
    108            __no_operation();
   \   00000094   0xBF00             Nop      
    109            __no_operation();
   \   00000096   0xBF00             Nop      
    110            __no_operation();
   \   00000098   0xBF00             Nop      
    111            __no_operation();  
   \   0000009A   0xBF00             Nop      
    112                                   
    113            CLR_LCD_ENABLE;   
   \   0000009C   0x....             LDR.N    R1,??DataTable10_4  ;; 0x2009c03c
   \   0000009E   0x6809             LDR      R1,[R1, #+0]
   \   000000A0   0xF451 0x3100      ORRS     R1,R1,#0x20000
   \   000000A4   0x....             LDR.N    R2,??DataTable10_4  ;; 0x2009c03c
   \   000000A6   0x6011             STR      R1,[R2, #+0]
    114          }
   \   000000A8   0x4770             BX       LR               ;; return
   \   000000AA                      REQUIRE _A_FIO1SET
   \   000000AA                      REQUIRE _A_FIO1CLR
   \   000000AA                      REQUIRE _A_FIO0SET
   \   000000AA                      REQUIRE _A_FIO0CLR
    115          /***********************************************************************************
    116          *    Descrição    :   Envia um byte para o controlador do LCD
    117          *    Parametros   :   (unsigned char) endereço
    118          *                     (unsigned char) valor que será escrito no controlador
    119          *    Retorno      :   nenhum
    120          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    121          void HD44780_enviaByte(unsigned char endereco,unsigned char value){
   \                     HD44780_enviaByte:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    122          
    123            (endereco)?(SET_LCD_RS):(CLR_LCD_RS);                              
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD006             BEQ.N    ??HD44780_enviaByte_0
   \   0000000C   0x....             LDR.N    R0,??DataTable10_5  ;; 0x2009c018
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000014   0x....             LDR.N    R1,??DataTable10_5  ;; 0x2009c018
   \   00000016   0x6008             STR      R0,[R1, #+0]
   \   00000018   0xE005             B.N      ??HD44780_enviaByte_1
   \                     ??HD44780_enviaByte_0:
   \   0000001A   0x....             LDR.N    R0,??DataTable10_6  ;; 0x2009c01c
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000022   0x....             LDR.N    R1,??DataTable10_6  ;; 0x2009c01c
   \   00000024   0x6008             STR      R0,[R1, #+0]
    124            HD44780_enviaNibble(value>>4);
   \                     ??HD44780_enviaByte_1:
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x0928             LSRS     R0,R5,#+4
   \   0000002A   0x.... 0x....      BL       HD44780_enviaNibble
    125            HD44780_enviaNibble(value);  
   \   0000002E   0x0028             MOVS     R0,R5
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x.... 0x....      BL       HD44780_enviaNibble
    126            
    127            HD44780_delay_ms(2);  
   \   00000036   0x2002             MOVS     R0,#+2
   \   00000038   0x.... 0x....      BL       vTaskDelay
    128          }
   \   0000003C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \   0000003E                      REQUIRE _A_FIO0SET
   \   0000003E                      REQUIRE _A_FIO0CLR
    129          /***********************************************************************************
    130          *    Descrição    :   Delay utilizado dentro do módulo
    131          *    Parametros   :   (unsigned int) número de iterações
    132          *    Retorno      :   nenh8um
    133          ***********************************************************************************/
    134          /*
    135          void HD44780_delay_ms(unsigned int delayCyCles){
    136            unsigned int i,count;
    137            
    138            for(i=0;i<delayCyCles;i++)
    139              for(count=DELAY_CICLES;count;count--);           
    140          }
    141          */
    142          /***********************************************************************************
    143          *     Descrição   :   Posiciona o cursor em uma determinada linha do display   
    144          *     Parametros  :   (unsigned char) X
    145          *                     (unsigned char) Y
    146          *     Retorno     :   (nenhum)
    147          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    148          void HD44780_posicionaTexto(unsigned char x,unsigned char y){
   \                     HD44780_posicionaTexto:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    149              
    150            if(x<16 && y==0)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C10             CMP      R4,#+16
   \   0000000A   0xDA09             BGE.N    ??HD44780_posicionaTexto_0
   \   0000000C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000E   0x2D00             CMP      R5,#+0
   \   00000010   0xD106             BNE.N    ??HD44780_posicionaTexto_0
    151               HD44780_enviaByte(0,0x80 + x);
   \   00000012   0xF1B4 0x0180      SUBS     R1,R4,#+128
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       HD44780_enviaByte
   \   0000001E   0xE008             B.N      ??HD44780_posicionaTexto_1
    152            else
    153              if(y==1)
   \                     ??HD44780_posicionaTexto_0:
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2D01             CMP      R5,#+1
   \   00000024   0xD105             BNE.N    ??HD44780_posicionaTexto_1
    154                HD44780_enviaByte(0,0xC0 + x);
   \   00000026   0xF1B4 0x0140      SUBS     R1,R4,#+64
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       HD44780_enviaByte
    155              
    156            HD44780_delay_ms(4);      
   \                     ??HD44780_posicionaTexto_1:
   \   00000032   0x2004             MOVS     R0,#+4
   \   00000034   0x.... 0x....      BL       vTaskDelay
    157          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    158          /***********************************************************************************
    159          *     Descrição    :  Escreve um caracter no display
    160          *     Parametrs    :  (char)
    161          *     Retorno      :  nenhum
    162          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    163          void HD44780_writeChar(char c){
   \                     HD44780_writeChar:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    164            
    165            switch(c){
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x280A             CMP      R0,#+10
   \   0000000A   0xD00C             BEQ.N    ??HD44780_writeChar_0
   \   0000000C   0x280C             CMP      R0,#+12
   \   0000000E   0xD002             BEQ.N    ??HD44780_writeChar_1
   \   00000010   0x280D             CMP      R0,#+13
   \   00000012   0xD008             BEQ.N    ??HD44780_writeChar_0
   \   00000014   0xE00C             B.N      ??HD44780_writeChar_2
    166              case '\f':  HD44780_enviaByte(0,1);
   \                     ??HD44780_writeChar_1:
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       HD44780_enviaByte
    167                          HD44780_delay_ms(12);
   \   0000001E   0x200C             MOVS     R0,#+12
   \   00000020   0x.... 0x....      BL       vTaskDelay
    168                          break;    
   \   00000024   0xE009             B.N      ??HD44780_writeChar_3
    169              case '\n':    
    170              case '\r':  HD44780_enviaByte(1,2);
   \                     ??HD44780_writeChar_0:
   \   00000026   0x2102             MOVS     R1,#+2
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       HD44780_enviaByte
    171                          break;    
   \   0000002E   0xE004             B.N      ??HD44780_writeChar_3
    172              default  :  HD44780_enviaByte(1,c);
   \                     ??HD44780_writeChar_2:
   \   00000030   0x0021             MOVS     R1,R4
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       HD44780_enviaByte
    173                          break;
    174            }
    175          }
   \                     ??HD44780_writeChar_3:
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return
    176          /***********************************************************************************
    177          *     Descrição   :   Escreve uma string no display
    178          *     Parametros  :   (char*) Ponteiro para a string
    179          *     Retorno     :   nenhum
    180          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    181          void HD44780_writeString(char *string){
   \                     HD44780_writeString:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    182            
    183            if(!HD44780_2_tempoRefreshSegundoLCD){    
   \   00000004   0x....             LDR.N    R0,??DataTable10_7
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD106             BNE.N    ??HD44780_writeString_0
    184              HD44780_init(LCD_DISPLAY_8X5 | LCD_2_LINHAS,
    185                           LCD_DISPLAY_LIGADO | LCD_CURSOR_DESLIGADO | LCD_CURSOR_FIXO);          
   \   0000000C   0x2104             MOVS     R1,#+4
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0x.... 0x....      BL       HD44780_init
    186              HD44780_clearText();    
   \   00000014   0x200C             MOVS     R0,#+12
   \   00000016   0x.... 0x....      BL       HD44780_writeChar
    187            }    
    188            
    189            while(*string)
   \                     ??HD44780_writeString_0:
   \   0000001A   0x7820             LDRB     R0,[R4, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD004             BEQ.N    ??HD44780_writeString_1
    190              HD44780_writeChar(*string++);      
   \   00000020   0x7820             LDRB     R0,[R4, #+0]
   \   00000022   0x.... 0x....      BL       HD44780_writeChar
   \   00000026   0x1C64             ADDS     R4,R4,#+1
   \   00000028   0xE7F7             B.N      ??HD44780_writeString_0
    191          }
   \                     ??HD44780_writeString_1:
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    192          /***********************************************************************************
    193          *     Descrição   :   Liga o display
    194          *     Parametros  :   (nenhum)
    195          *     Retorno     :   (nenhum)
    196          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    197          void HD44780_ligaDisplay(void){
   \                     HD44780_ligaDisplay:
   \   00000000   0xB580             PUSH     {R7,LR}
    198           
    199            controleLcd |= 0x04;
   \   00000002   0x....             LDR.N    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000A   0x....             LDR.N    R1,??DataTable10_2
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    200            HD44780_enviaByte(0,controleLcd);  
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2
   \   00000010   0x7801             LDRB     R1,[R0, #+0]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       HD44780_enviaByte
    201          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    202          /***********************************************************************************
    203          *     Descrição    :    Desliga o display
    204          *     Parametros   :    (nenhum)
    205          *     Retorno      :    (nenhum)
    206          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    207          void HD44780_desligaDisplay(void){
   \                     HD44780_desligaDisplay:
   \   00000000   0xB580             PUSH     {R7,LR}
    208           
    209            controleLcd &= 0xFB;
   \   00000002   0x....             LDR.N    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF010 0x00FB      ANDS     R0,R0,#0xFB
   \   0000000A   0x....             LDR.N    R1,??DataTable10_2
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    210            HD44780_enviaByte(0,controleLcd);
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2
   \   00000010   0x7801             LDRB     R1,[R0, #+0]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       HD44780_enviaByte
    211          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    212          /************************************************************************************
    213          *     Descrição     :   Liga o cursor
    214          *     Parametros    :   nenhum
    215          *     Retorno       :   nenhum
    216          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    217          void HD44780_ligaCursor(void){
   \                     HD44780_ligaCursor:
   \   00000000   0xB580             PUSH     {R7,LR}
    218            
    219            controleLcd |= 0x02;
   \   00000002   0x....             LDR.N    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000000A   0x....             LDR.N    R1,??DataTable10_2
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    220            HD44780_enviaByte(0,controleLcd);  
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2
   \   00000010   0x7801             LDRB     R1,[R0, #+0]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       HD44780_enviaByte
    221          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    222          /***********************************************************************************
    223          *     Descrição     :   Desliga o cursor
    224          *     Parametros    :   nenhum
    225          *     Retorno       :   nenhum
    226          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    227          void HD44780_desligaCursor(void){
   \                     HD44780_desligaCursor:
   \   00000000   0xB580             PUSH     {R7,LR}
    228            
    229            controleLcd &= 0xFD;
   \   00000002   0x....             LDR.N    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   0000000A   0x....             LDR.N    R1,??DataTable10_2
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    230            HD44780_enviaByte(0,controleLcd);  
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2
   \   00000010   0x7801             LDRB     R1,[R0, #+0]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       HD44780_enviaByte
    231          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    232          /***********************************************************************************
    233          *     Descrição     :   Liga o cursor piscante
    234          *     Parametros    :   nenhum
    235          *     Retorno       :   nenhum
    236          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    237          void HD44780_ligaCursorPiscante(void){
   \                     HD44780_ligaCursorPiscante:
   \   00000000   0xB580             PUSH     {R7,LR}
    238           
    239            controleLcd |= 0x01;
   \   00000002   0x....             LDR.N    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000A   0x....             LDR.N    R1,??DataTable10_2
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    240            HD44780_enviaByte(0,controleLcd); 
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2
   \   00000010   0x7801             LDRB     R1,[R0, #+0]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       HD44780_enviaByte
    241          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    242          /***********************************************************************************
    243          *     Descrição     :   Desliga o cursor piscante
    244          *     Parametros    :   nenhum
    245          *     Retorno       :   nenhum
    246          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    247          void HD44780_desligaCursorPiscante(void){
   \                     HD44780_desligaCursorPiscante:
   \   00000000   0xB580             PUSH     {R7,LR}
    248           
    249             controleLcd &= 0xFE;
   \   00000002   0x....             LDR.N    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   0000000A   0x....             LDR.N    R1,??DataTable10_2
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    250             HD44780_enviaByte(0,controleLcd);
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2
   \   00000010   0x7801             LDRB     R1,[R0, #+0]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       HD44780_enviaByte
    251          }                                   
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    252          /***********************************************************************************
    253          *		Fim do arquivo
    254          ***********************************************************************************/
    255          

   \                                 In section .text, align 2, keep-with-next
    256          void teste_lcd(void){
   \                     teste_lcd:
   \   00000000   0xB580             PUSH     {R7,LR}
    257            
    258            HD44780_init(LCD_DISPLAY_8X5 | LCD_2_LINHAS,
    259                         LCD_DISPLAY_LIGADO | LCD_CURSOR_DESLIGADO | LCD_CURSOR_FIXO);
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x2008             MOVS     R0,#+8
   \   00000006   0x.... 0x....      BL       HD44780_init
    260            
    261            FIO1DIR |= (0X01)<<14;
   \   0000000A   0x....             LDR.N    R0,??DataTable10  ;; 0x2009c020
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   00000012   0x....             LDR.N    R1,??DataTable10  ;; 0x2009c020
   \   00000014   0x6008             STR      R0,[R1, #+0]
    262            FIO1SET |= (0X01)<<14;
   \   00000016   0x....             LDR.N    R0,??DataTable10_3  ;; 0x2009c038
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   0000001E   0x....             LDR.N    R1,??DataTable10_3  ;; 0x2009c038
   \   00000020   0x6008             STR      R0,[R1, #+0]
    263          
    264            HD44780_writeChar('\f');  
   \   00000022   0x200C             MOVS     R0,#+12
   \   00000024   0x.... 0x....      BL       HD44780_writeChar
    265          
    266            //                   0123456789012345
    267            HD44780_writeString("::  Apus REP  ::");
   \   00000028   0x....             LDR.N    R0,??DataTable10_8
   \   0000002A   0x.... 0x....      BL       HD44780_writeString
    268            HD44780_posicionaTexto(0,1);
   \   0000002E   0x2101             MOVS     R1,#+1
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       HD44780_posicionaTexto
    269            HD44780_writeString("     v1.0       ");
   \   00000036   0x....             LDR.N    R0,??DataTable10_9
   \   00000038   0x.... 0x....      BL       HD44780_writeString
    270            
    271          }
   \   0000003C   0xBD01             POP      {R0,PC}          ;; return
   \   0000003E                      REQUIRE _A_FIO1DIR
   \   0000003E                      REQUIRE _A_FIO1SET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x2009C020         DC32     0x2009c020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x2009C000         DC32     0x2009c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     controleLcd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x2009C038         DC32     0x2009c038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x2009C03C         DC32     0x2009c03c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x2009C018         DC32     0x2009c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x2009C01C         DC32     0x2009c01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     HD44780_2_tempoRefreshSegundoLCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x........         DC32     `?<Constant "::  Apus REP  ::">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     `?<Constant "     v1.0       ">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "::  Apus REP  ::">`:
   \   00000000   0x3A 0x3A          DC8 "::  Apus REP  ::"
   \              0x20 0x20    
   \              0x41 0x70    
   \              0x75 0x73    
   \              0x20 0x52    
   \              0x45 0x50    
   \              0x20 0x20    
   \              0x3A 0x3A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "     v1.0       ">`:
   \   00000000   0x20 0x20          DC8 "     v1.0       "
   \              0x20 0x20    
   \              0x20 0x76    
   \              0x31 0x2E    
   \              0x30 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HD44780_desligaCursor
         8   -> HD44780_enviaByte
       8   HD44780_desligaCursorPiscante
         8   -> HD44780_enviaByte
       8   HD44780_desligaDisplay
         8   -> HD44780_enviaByte
      16   HD44780_enviaByte
        16   -> HD44780_enviaNibble
        16   -> vTaskDelay
       0   HD44780_enviaNibble
      16   HD44780_init
        16   -> HD44780_enviaByte
        16   -> HD44780_enviaNibble
        16   -> vTaskDelay
       8   HD44780_ligaCursor
         8   -> HD44780_enviaByte
       8   HD44780_ligaCursorPiscante
         8   -> HD44780_enviaByte
       8   HD44780_ligaDisplay
         8   -> HD44780_enviaByte
      16   HD44780_posicionaTexto
        16   -> HD44780_enviaByte
        16   -> vTaskDelay
       8   HD44780_writeChar
         8   -> HD44780_enviaByte
         8   -> vTaskDelay
       8   HD44780_writeString
         8   -> HD44780_init
         8   -> HD44780_writeChar
       8   teste_lcd
         8   -> HD44780_init
         8   -> HD44780_posicionaTexto
         8   -> HD44780_writeChar
         8   -> HD44780_writeString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "     v1.0       ">
      20  ?<Constant "::  Apus REP  ::">
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
      26  HD44780_desligaCursor
      26  HD44780_desligaCursorPiscante
      26  HD44780_desligaDisplay
      62  HD44780_enviaByte
     170  HD44780_enviaNibble
     210  HD44780_init
      26  HD44780_ligaCursor
      26  HD44780_ligaCursorPiscante
      26  HD44780_ligaDisplay
      58  HD44780_posicionaTexto
      60  HD44780_writeChar
      44  HD44780_writeString
       4  _A_FIO0CLR
       4  _A_FIO0DIR
       4  _A_FIO0SET
       4  _A_FIO1CLR
       4  _A_FIO1DIR
       4  _A_FIO1SET
       1  controleLcd
      62  teste_lcd

 
   1 byte  in section .bss
  24 bytes in section .noinit (abs)
  40 bytes in section .rodata
 862 bytes in section .text
 
 862 bytes of CODE  memory
  40 bytes of CONST memory
   1 byte  of DATA  memory (+ 24 bytes shared)

Errors: none
Warnings: none

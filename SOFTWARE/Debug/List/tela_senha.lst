###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      20/Jul/2017  15:39:29 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\tela_senha.c                    #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\tela_senha.c -lC                #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\tela_senha.lst                 #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\tela_senha.o                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\tela_senha.c
      1          /*__________________________________________________________________________________
      2          |	DEXTRO SOLUÇÕES TECNOLÓGICAS
      3          |       
      4          |       ITAJAÍ - SC
      5          |       www.dextro.ind.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by DEXTRO  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by DEXTRO 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da DEXTRO  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       DEXTRO  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  parametros.c
     18          |       Descrição          :  Menu para configuração do sistema
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  30/12/2016
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /************************************************************************************
     30          *       Includes
     31          ************************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include <string.h>

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       __aeabi_memcpy
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return
     35          #include "..\includes.h"
     36          
     37          /************************************************************************************
     38          *       Definições locais
     39          ************************************************************************************/
     40          
     41          
     42          /************************************************************************************
     43          *       Constantes
     44          ************************************************************************************/
     45          
     46          
     47          /************************************************************************************
     48          *       Variaveis locais
     49          ************************************************************************************/

   \                                 In section .bss, align 4
     50          unsigned int MCS_contadorSemente=0;
   \                     MCS_contadorSemente:
   \   00000000                      DS8 4
     51          
     52          /************************************************************************************
     53          *       Funções locais
     54          ************************************************************************************/
     55          
     56          
     57          /************************************************************************************
     58          *       Implementação das funções
     59          ************************************************************************************/
     60          
     61          /************************************************************************************
     62          *       Descrição       :       Tela para o usuário informar uma senha
     63          *       Parametros      :       (unsigned int) senha de acesso
     64          *       Retorno         :       nenhum
     65          ************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     66          unsigned char TELASENHA_telaSenha(unsigned short int senha){
   \                     TELASENHA_telaSenha:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
     67            eTECLA tecla;
     68            unsigned char indiceDigito=0;
   \   00000006   0x2500             MOVS     R5,#+0
     69            char digitoSenha[5]={"0000"};
   \   00000008   0xA800             ADD      R0,SP,#+0
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000000E   0xC90C             LDM      R1!,{R2,R3}
   \   00000010   0xC00C             STM      R0!,{R2,R3}
   \   00000012   0x3908             SUBS     R1,R1,#+8
   \   00000014   0x3808             SUBS     R0,R0,#+8
     70            unsigned short int temp;  
     71            unsigned char toggle=0;
   \   00000016   0x2600             MOVS     R6,#+0
     72            unsigned char ciclos=1;
   \   00000018   0x2701             MOVS     R7,#+1
     73            char bufferLinha[5];
     74            
     75            HD44780_clearText();
   \   0000001A   0x200C             MOVS     R0,#+12
   \   0000001C   0x.... 0x....      BL       HD44780_writeChar
     76            HD44780_writeString(" Informe a senha");
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000024   0x.... 0x....      BL       HD44780_writeString
   \   00000028   0xE030             B.N      ??TELASENHA_telaSenha_0
     77            
     78            for(;TECLADO_getContadorInatividade();){
     79              
     80              tecla = TECLADO_getch();
     81              switch(tecla){
     82                case TECLA_ENTER:
     83                     indiceDigito++;
     84                     if(indiceDigito>3){
     85                       
     86                       temp = ((digitoSenha[0]-'0')*1000) + ((digitoSenha[1]-'0')*100) + ((digitoSenha[2]-'0')*10) + (digitoSenha[3]-'0');
     87                       if(temp==senha)
     88                         return 255;
     89                       else{
     90                         
     91                         HD44780_clearText();
     92                         HD44780_writeString("Senha");
     93                         HD44780_posicionaTexto(0,1);
     94                         HD44780_writeString("incorreta!");
     95                         
     96                         vTaskDelay(3000);
     97                         
     98                         HD44780_clearText();
     99                       }             
    100                       return 0;
    101                     }
    102                     break;
    103                case TECLA_ESC:
    104                     return 0;
    105                case TECLA_INC:
    106                     digitoSenha[indiceDigito]++;
    107                     if(digitoSenha[indiceDigito]>'9')
    108                       digitoSenha[indiceDigito] = '0';
    109                     break;
    110                case TECLA_DEC:
    111                     digitoSenha[indiceDigito]--;
   \                     ??TELASENHA_telaSenha_1:
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0xA800             ADD      R0,SP,#+0
   \   0000002E   0x5C28             LDRB     R0,[R5, R0]
   \   00000030   0x1E40             SUBS     R0,R0,#+1
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0xA900             ADD      R1,SP,#+0
   \   00000036   0x5468             STRB     R0,[R5, R1]
    112                     if(digitoSenha[indiceDigito]<'0')
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0xA800             ADD      R0,SP,#+0
   \   0000003C   0x5C28             LDRB     R0,[R5, R0]
   \   0000003E   0x2830             CMP      R0,#+48
   \   00000040   0xDA03             BGE.N    ??TELASENHA_telaSenha_2
    113                       digitoSenha[indiceDigito] = '9';
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0xA800             ADD      R0,SP,#+0
   \   00000046   0x2139             MOVS     R1,#+57
   \   00000048   0x5429             STRB     R1,[R5, R0]
    114                     break;
    115              }
    116              
    117              if(!--ciclos){
   \                     ??TELASENHA_telaSenha_2:
   \                     ??TELASENHA_telaSenha_3:
   \   0000004A   0x1E7F             SUBS     R7,R7,#+1
   \   0000004C   0x0038             MOVS     R0,R7
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD118             BNE.N    ??TELASENHA_telaSenha_4
    118                
    119                ciclos = 4;
   \   00000054   0x2704             MOVS     R7,#+4
    120                toggle = ~toggle;
   \   00000056   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000058   0x43F6             MVNS     R6,R6
    121                memcpy(bufferLinha,digitoSenha,4);
   \   0000005A   0x2204             MOVS     R2,#+4
   \   0000005C   0xA900             ADD      R1,SP,#+0
   \   0000005E   0xA802             ADD      R0,SP,#+8
   \   00000060   0x.... 0x....      BL       memcpy
    122                bufferLinha[4] = 0x00;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0xF88D 0x000C      STRB     R0,[SP, #+12]
    123                if(toggle)
   \   0000006A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000006C   0x2E00             CMP      R6,#+0
   \   0000006E   0xD003             BEQ.N    ??TELASENHA_telaSenha_5
    124                  bufferLinha[indiceDigito] = '_';
   \   00000070   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000072   0xA802             ADD      R0,SP,#+8
   \   00000074   0x215F             MOVS     R1,#+95
   \   00000076   0x5429             STRB     R1,[R5, R0]
    125                
    126                HD44780_posicionaTexto(6,1);
   \                     ??TELASENHA_telaSenha_5:
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0x2006             MOVS     R0,#+6
   \   0000007C   0x.... 0x....      BL       HD44780_posicionaTexto
    127                HD44780_writeString(bufferLinha);
   \   00000080   0xA802             ADD      R0,SP,#+8
   \   00000082   0x.... 0x....      BL       HD44780_writeString
    128              }        
    129              
    130              vTaskDelay(50);
   \                     ??TELASENHA_telaSenha_4:
   \   00000086   0x2032             MOVS     R0,#+50
   \   00000088   0x.... 0x....      BL       vTaskDelay
   \                     ??TELASENHA_telaSenha_0:
   \   0000008C   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD053             BEQ.N    ??TELASENHA_telaSenha_6
   \   00000094   0x.... 0x....      BL       TECLADO_getch
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0x2801             CMP      R0,#+1
   \   0000009C   0xD03B             BEQ.N    ??TELASENHA_telaSenha_7
   \   0000009E   0xD3D4             BCC.N    ??TELASENHA_telaSenha_3
   \   000000A0   0x2803             CMP      R0,#+3
   \   000000A2   0xD0C2             BEQ.N    ??TELASENHA_telaSenha_1
   \   000000A4   0xD339             BCC.N    ??TELASENHA_telaSenha_8
   \   000000A6   0x2804             CMP      R0,#+4
   \   000000A8   0xD1CF             BNE.N    ??TELASENHA_telaSenha_3
   \                     ??TELASENHA_telaSenha_9:
   \   000000AA   0x1C6D             ADDS     R5,R5,#+1
   \   000000AC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000AE   0x2D04             CMP      R5,#+4
   \   000000B0   0xDB30             BLT.N    ??TELASENHA_telaSenha_10
   \   000000B2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000B6   0xF44F 0x717A      MOV      R1,#+1000
   \   000000BA   0xF89D 0x2001      LDRB     R2,[SP, #+1]
   \   000000BE   0x2364             MOVS     R3,#+100
   \   000000C0   0x435A             MULS     R2,R3,R2
   \   000000C2   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000C6   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   000000CA   0x220A             MOVS     R2,#+10
   \   000000CC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000D0   0xF89D 0x1003      LDRB     R1,[SP, #+3]
   \   000000D4   0x1808             ADDS     R0,R1,R0
   \   000000D6   0xF500 0x503C      ADD      R0,R0,#+12032
   \   000000DA   0x30B0             ADDS     R0,R0,#+176
   \   000000DC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000DE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000E0   0x42A0             CMP      R0,R4
   \   000000E2   0xD101             BNE.N    ??TELASENHA_telaSenha_11
   \   000000E4   0x20FF             MOVS     R0,#+255
   \   000000E6   0xE02A             B.N      ??TELASENHA_telaSenha_12
   \                     ??TELASENHA_telaSenha_11:
   \   000000E8   0x200C             MOVS     R0,#+12
   \   000000EA   0x.... 0x....      BL       HD44780_writeChar
   \   000000EE   0x....             LDR.N    R0,??DataTable2_2
   \   000000F0   0x.... 0x....      BL       HD44780_writeString
   \   000000F4   0x2101             MOVS     R1,#+1
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x.... 0x....      BL       HD44780_posicionaTexto
   \   000000FC   0x....             LDR.N    R0,??DataTable2_3
   \   000000FE   0x.... 0x....      BL       HD44780_writeString
   \   00000102   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000106   0x.... 0x....      BL       vTaskDelay
   \   0000010A   0x200C             MOVS     R0,#+12
   \   0000010C   0x.... 0x....      BL       HD44780_writeChar
   \   00000110   0x2000             MOVS     R0,#+0
   \   00000112   0xE014             B.N      ??TELASENHA_telaSenha_12
   \                     ??TELASENHA_telaSenha_10:
   \   00000114   0xE799             B.N      ??TELASENHA_telaSenha_3
   \                     ??TELASENHA_telaSenha_7:
   \   00000116   0x2000             MOVS     R0,#+0
   \   00000118   0xE011             B.N      ??TELASENHA_telaSenha_12
   \                     ??TELASENHA_telaSenha_8:
   \   0000011A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000011C   0xA800             ADD      R0,SP,#+0
   \   0000011E   0x5C28             LDRB     R0,[R5, R0]
   \   00000120   0x1C40             ADDS     R0,R0,#+1
   \   00000122   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000124   0xA900             ADD      R1,SP,#+0
   \   00000126   0x5468             STRB     R0,[R5, R1]
   \   00000128   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000012A   0xA800             ADD      R0,SP,#+0
   \   0000012C   0x5C28             LDRB     R0,[R5, R0]
   \   0000012E   0x283A             CMP      R0,#+58
   \   00000130   0xDB03             BLT.N    ??TELASENHA_telaSenha_13
   \   00000132   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000134   0xA800             ADD      R0,SP,#+0
   \   00000136   0x2130             MOVS     R1,#+48
   \   00000138   0x5429             STRB     R1,[R5, R0]
   \                     ??TELASENHA_telaSenha_13:
   \   0000013A   0xE786             B.N      ??TELASENHA_telaSenha_3
    131            }      
    132            
    133            return 0;
   \                     ??TELASENHA_telaSenha_6:
   \   0000013C   0x2000             MOVS     R0,#+0
   \                     ??TELASENHA_telaSenha_12:
   \   0000013E   0xB005             ADD      SP,SP,#+20
   \   00000140   0xBDF0             POP      {R4-R7,PC}       ;; return
    134          }
    135          /************************************************************************************
    136          *       Descrição       :       Tela para o usuário informar uma
    137          *                               senha 
    138          *       Parametros      :       nenhum
    139          *       Retorno         :       (unsigned int) senha digitada
    140          ************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    141          unsigned int TELASENHA_get_senha(char *msg){
   \                     TELASENHA_get_senha:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0007             MOVS     R7,R0
    142            eTECLA tecla;
    143            unsigned char indiceDigito=0;
   \   00000006   0x2400             MOVS     R4,#+0
    144            char digitoSenha[5]={"0000"};
   \   00000008   0xA800             ADD      R0,SP,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable2_4
   \   0000000C   0xC90C             LDM      R1!,{R2,R3}
   \   0000000E   0xC00C             STM      R0!,{R2,R3}
   \   00000010   0x3908             SUBS     R1,R1,#+8
   \   00000012   0x3808             SUBS     R0,R0,#+8
    145            unsigned short int temp;  
    146            unsigned char toggle=0;
   \   00000014   0x2500             MOVS     R5,#+0
    147            unsigned char ciclos=1;
   \   00000016   0x2601             MOVS     R6,#+1
    148            char bufferLinha[5];
    149            
    150            HD44780_clearText();
   \   00000018   0x200C             MOVS     R0,#+12
   \   0000001A   0x.... 0x....      BL       HD44780_writeChar
    151            HD44780_writeString(msg);
   \   0000001E   0x0038             MOVS     R0,R7
   \   00000020   0x.... 0x....      BL       HD44780_writeString
   \   00000024   0xE030             B.N      ??TELASENHA_get_senha_0
    152            
    153            for(;TECLADO_getContadorInatividade();){
    154              
    155              tecla = TECLADO_getch();
    156              switch(tecla){
    157                case TECLA_ENTER:
    158                     indiceDigito++;
    159                     if(indiceDigito>3){
    160                       
    161                       temp = ((digitoSenha[0]-'0')*1000) + ((digitoSenha[1]-'0')*100) + ((digitoSenha[2]-'0')*10) + (digitoSenha[3]-'0');
    162                       return temp;
    163                     }
    164                     break;
    165                case TECLA_ESC:
    166                     return 0;
    167                case TECLA_INC:
    168                     digitoSenha[indiceDigito]++;
    169                     if(digitoSenha[indiceDigito]>'9')
    170                       digitoSenha[indiceDigito] = '0';
    171                     break;
    172                case TECLA_DEC:
    173                     digitoSenha[indiceDigito]--;
   \                     ??TELASENHA_get_senha_1:
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x5C20             LDRB     R0,[R4, R0]
   \   0000002C   0x1E40             SUBS     R0,R0,#+1
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0xA900             ADD      R1,SP,#+0
   \   00000032   0x5460             STRB     R0,[R4, R1]
    174                     if(digitoSenha[indiceDigito]<'0')
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0xA800             ADD      R0,SP,#+0
   \   00000038   0x5C20             LDRB     R0,[R4, R0]
   \   0000003A   0x2830             CMP      R0,#+48
   \   0000003C   0xDA03             BGE.N    ??TELASENHA_get_senha_2
    175                       digitoSenha[indiceDigito] = '9';
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0xA800             ADD      R0,SP,#+0
   \   00000042   0x2139             MOVS     R1,#+57
   \   00000044   0x5421             STRB     R1,[R4, R0]
    176                     break;
    177              }
    178              
    179              if(!--ciclos){
   \                     ??TELASENHA_get_senha_2:
   \                     ??TELASENHA_get_senha_3:
   \   00000046   0x1E76             SUBS     R6,R6,#+1
   \   00000048   0x0030             MOVS     R0,R6
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD118             BNE.N    ??TELASENHA_get_senha_4
    180                
    181                ciclos = 4;
   \   00000050   0x2604             MOVS     R6,#+4
    182                toggle = ~toggle;
   \   00000052   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000054   0x43ED             MVNS     R5,R5
    183                memcpy(bufferLinha,digitoSenha,4);
   \   00000056   0x2204             MOVS     R2,#+4
   \   00000058   0xA900             ADD      R1,SP,#+0
   \   0000005A   0xA802             ADD      R0,SP,#+8
   \   0000005C   0x.... 0x....      BL       memcpy
    184                bufferLinha[4] = 0x00;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0xF88D 0x000C      STRB     R0,[SP, #+12]
    185                if(toggle)
   \   00000066   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000068   0x2D00             CMP      R5,#+0
   \   0000006A   0xD003             BEQ.N    ??TELASENHA_get_senha_5
    186                  bufferLinha[indiceDigito] = '_';
   \   0000006C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006E   0xA802             ADD      R0,SP,#+8
   \   00000070   0x215F             MOVS     R1,#+95
   \   00000072   0x5421             STRB     R1,[R4, R0]
    187                
    188                HD44780_posicionaTexto(6,1);
   \                     ??TELASENHA_get_senha_5:
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x2006             MOVS     R0,#+6
   \   00000078   0x.... 0x....      BL       HD44780_posicionaTexto
    189                HD44780_writeString(bufferLinha);
   \   0000007C   0xA802             ADD      R0,SP,#+8
   \   0000007E   0x.... 0x....      BL       HD44780_writeString
    190              }        
    191              
    192              vTaskDelay(50);
   \                     ??TELASENHA_get_senha_4:
   \   00000082   0x2032             MOVS     R0,#+50
   \   00000084   0x.... 0x....      BL       vTaskDelay
   \                     ??TELASENHA_get_senha_0:
   \   00000088   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD039             BEQ.N    ??TELASENHA_get_senha_6
   \   00000090   0x.... 0x....      BL       TECLADO_getch
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x2801             CMP      R0,#+1
   \   00000098   0xD021             BEQ.N    ??TELASENHA_get_senha_7
   \   0000009A   0xD3D4             BCC.N    ??TELASENHA_get_senha_3
   \   0000009C   0x2803             CMP      R0,#+3
   \   0000009E   0xD0C2             BEQ.N    ??TELASENHA_get_senha_1
   \   000000A0   0xD31F             BCC.N    ??TELASENHA_get_senha_8
   \   000000A2   0x2804             CMP      R0,#+4
   \   000000A4   0xD1CF             BNE.N    ??TELASENHA_get_senha_3
   \                     ??TELASENHA_get_senha_9:
   \   000000A6   0x1C64             ADDS     R4,R4,#+1
   \   000000A8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AA   0x2C04             CMP      R4,#+4
   \   000000AC   0xDB16             BLT.N    ??TELASENHA_get_senha_10
   \   000000AE   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000B2   0xF44F 0x717A      MOV      R1,#+1000
   \   000000B6   0xF89D 0x2001      LDRB     R2,[SP, #+1]
   \   000000BA   0x2364             MOVS     R3,#+100
   \   000000BC   0x435A             MULS     R2,R3,R2
   \   000000BE   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000C2   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   000000C6   0x220A             MOVS     R2,#+10
   \   000000C8   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000CC   0xF89D 0x1003      LDRB     R1,[SP, #+3]
   \   000000D0   0x1808             ADDS     R0,R1,R0
   \   000000D2   0xF500 0x503C      ADD      R0,R0,#+12032
   \   000000D6   0x30B0             ADDS     R0,R0,#+176
   \   000000D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000DA   0xE015             B.N      ??TELASENHA_get_senha_11
   \                     ??TELASENHA_get_senha_10:
   \   000000DC   0xE7B3             B.N      ??TELASENHA_get_senha_3
   \                     ??TELASENHA_get_senha_7:
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0xE012             B.N      ??TELASENHA_get_senha_11
   \                     ??TELASENHA_get_senha_8:
   \   000000E2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E4   0xA800             ADD      R0,SP,#+0
   \   000000E6   0x5C20             LDRB     R0,[R4, R0]
   \   000000E8   0x1C40             ADDS     R0,R0,#+1
   \   000000EA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000EC   0xA900             ADD      R1,SP,#+0
   \   000000EE   0x5460             STRB     R0,[R4, R1]
   \   000000F0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F2   0xA800             ADD      R0,SP,#+0
   \   000000F4   0x5C20             LDRB     R0,[R4, R0]
   \   000000F6   0x283A             CMP      R0,#+58
   \   000000F8   0xDB03             BLT.N    ??TELASENHA_get_senha_12
   \   000000FA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000FC   0xA800             ADD      R0,SP,#+0
   \   000000FE   0x2130             MOVS     R1,#+48
   \   00000100   0x5421             STRB     R1,[R4, R0]
   \                     ??TELASENHA_get_senha_12:
   \   00000102   0xE7A0             B.N      ??TELASENHA_get_senha_3
    193            }      
    194            
    195            return 0xFFFF;
   \                     ??TELASENHA_get_senha_6:
   \   00000104   0xF64F 0x70FF      MOVW     R0,#+65535
   \                     ??TELASENHA_get_senha_11:
   \   00000108   0xB005             ADD      SP,SP,#+20
   \   0000010A   0xBDF0             POP      {R4-R7,PC}       ;; return
    196          }
    197          /************************************************************************************
    198          *       Descrição       :       Tela de contrasenha do sistema
    199          *       Parametros      :       nenhum
    200          *       Retorno         :       (unsigned char) maior do que zero
    201          *                                               se validar a contrasenha
    202          ************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    203          unsigned char TELASENHA_checa_contrasenha(char*msg){
   \                     TELASENHA_checa_contrasenha:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    204           eTECLA tecla;
    205            char bufferLinha[17];
    206            char bufferTmp[17];
    207            unsigned char indice=0;
   \   00000004   0x2400             MOVS     R4,#+0
    208            unsigned char toggle=0;
   \   00000006   0x2500             MOVS     R5,#+0
    209            unsigned char ciclos=1;
   \   00000008   0x2601             MOVS     R6,#+1
    210            unsigned short int senha;
    211            
    212            srand(MCS_contadorSemente);
   \   0000000A   0x....             LDR.N    R0,??DataTable2_5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       srand
    213            unsigned short int contraSenha = rand()%10000;
   \   00000012   0x.... 0x....      BL       rand
   \   00000016   0xF242 0x7110      MOVW     R1,#+10000
   \   0000001A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000001E   0xFB01 0x0712      MLS      R7,R1,R2,R0
    214            
    215            sprintf(bufferLinha,"TOKEN:%04d",contraSenha);  
   \   00000022   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000024   0x003A             MOVS     R2,R7
   \   00000026   0x....             LDR.N    R1,??DataTable2_6
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x.... 0x....      BL       sprintf
    216            STRING_write_to_internal(CLEAR_DISPLAY,
    217                                     bufferLinha,
    218                                     NULL);
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0xA900             ADD      R1,SP,#+0
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       STRING_write_to_internal
    219              
    220            HD44780_posicionaTexto(0,1);
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      BL       HD44780_posicionaTexto
    221            HD44780_writeString("CODE :");  
   \   00000040   0x....             LDR.N    R0,??DataTable2_7
   \   00000042   0x.... 0x....      BL       HD44780_writeString
    222            
    223            sprintf(bufferLinha,"000000");
   \   00000046   0x....             LDR.N    R1,??DataTable2_8
   \   00000048   0xA800             ADD      R0,SP,#+0
   \   0000004A   0x.... 0x....      BL       sprintf
   \   0000004E   0xE030             B.N      ??TELASENHA_checa_contrasenha_0
    224            
    225            for(;TECLADO_getContadorInatividade();){
    226              
    227              tecla = TECLADO_getch();
    228              switch(tecla){
    229                case TECLA_ENTER:
    230                     if(indice>4){
    231                       
    232                       unsigned int recebido = ((bufferLinha[0]-'0')*100000) + 
    233                                               ((bufferLinha[1]-'0')*10000) + 
    234                                               ((bufferLinha[2]-'0')*1000) + 
    235                                               ((bufferLinha[3]-'0')*100) + 
    236                                               ((bufferLinha[4]-'0')*10) + 
    237                                               ((bufferLinha[5]-'0'));
    238                       
    239                       recebido &= 0x3FFFF;             
    240                       
    241                       senha = ((recebido&0x3FFF)^3004);
    242                         HD44780_clearText();             
    243                       if(senha==contraSenha){                     
    244                         return 255;               
    245                       }             
    246                       return 0;             
    247                     }
    248                     else{
    249                       indice++;
    250                       break;
    251                     }
    252                case TECLA_ESC:
    253                     return 0;
    254                case TECLA_INC:
    255                     bufferLinha[indice]++;
    256                     if(bufferLinha[indice]>'9')
    257                       bufferLinha[indice] = '0';
    258                     break;
    259                case TECLA_DEC:    
    260                     bufferLinha[indice]--;
   \                     ??TELASENHA_checa_contrasenha_1:
   \   00000050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000052   0xA800             ADD      R0,SP,#+0
   \   00000054   0x5C20             LDRB     R0,[R4, R0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005A   0xA900             ADD      R1,SP,#+0
   \   0000005C   0x5460             STRB     R0,[R4, R1]
    261                     if(bufferLinha[indice]<'0')
   \   0000005E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000060   0xA800             ADD      R0,SP,#+0
   \   00000062   0x5C20             LDRB     R0,[R4, R0]
   \   00000064   0x2830             CMP      R0,#+48
   \   00000066   0xDA03             BGE.N    ??TELASENHA_checa_contrasenha_2
    262                       bufferLinha[indice] = '9';
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0xA800             ADD      R0,SP,#+0
   \   0000006C   0x2139             MOVS     R1,#+57
   \   0000006E   0x5421             STRB     R1,[R4, R0]
    263                     break;
    264              }
    265              
    266              if(!--ciclos){
   \                     ??TELASENHA_checa_contrasenha_2:
   \                     ??TELASENHA_checa_contrasenha_3:
   \   00000070   0x1E76             SUBS     R6,R6,#+1
   \   00000072   0x0030             MOVS     R0,R6
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD118             BNE.N    ??TELASENHA_checa_contrasenha_4
    267                ciclos = 4;
   \   0000007A   0x2604             MOVS     R6,#+4
    268                toggle = ~toggle;
   \   0000007C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007E   0x43ED             MVNS     R5,R5
    269                memcpy(bufferTmp,bufferLinha,17);
   \   00000080   0x2211             MOVS     R2,#+17
   \   00000082   0xA900             ADD      R1,SP,#+0
   \   00000084   0xA805             ADD      R0,SP,#+20
   \   00000086   0x.... 0x....      BL       memcpy
    270                bufferTmp[7] = 0x00;
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0xF88D 0x001B      STRB     R0,[SP, #+27]
    271                if(toggle)
   \   00000090   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000092   0x2D00             CMP      R5,#+0
   \   00000094   0xD003             BEQ.N    ??TELASENHA_checa_contrasenha_5
    272                  bufferTmp[indice] = '_';
   \   00000096   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000098   0xA805             ADD      R0,SP,#+20
   \   0000009A   0x215F             MOVS     R1,#+95
   \   0000009C   0x5421             STRB     R1,[R4, R0]
    273                        
    274                HD44780_posicionaTexto(7,1);
   \                     ??TELASENHA_checa_contrasenha_5:
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x2007             MOVS     R0,#+7
   \   000000A2   0x.... 0x....      BL       HD44780_posicionaTexto
    275                HD44780_writeString(bufferTmp);
   \   000000A6   0xA805             ADD      R0,SP,#+20
   \   000000A8   0x.... 0x....      BL       HD44780_writeString
    276              }       
    277              
    278              vTaskDelay(50);
   \                     ??TELASENHA_checa_contrasenha_4:
   \   000000AC   0x2032             MOVS     R0,#+50
   \   000000AE   0x.... 0x....      BL       vTaskDelay
   \                     ??TELASENHA_checa_contrasenha_0:
   \   000000B2   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD054             BEQ.N    ??TELASENHA_checa_contrasenha_6
   \   000000BA   0x.... 0x....      BL       TECLADO_getch
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C0   0x2801             CMP      R0,#+1
   \   000000C2   0xD03C             BEQ.N    ??TELASENHA_checa_contrasenha_7
   \   000000C4   0xD3D4             BCC.N    ??TELASENHA_checa_contrasenha_3
   \   000000C6   0x2803             CMP      R0,#+3
   \   000000C8   0xD0C2             BEQ.N    ??TELASENHA_checa_contrasenha_1
   \   000000CA   0xD33A             BCC.N    ??TELASENHA_checa_contrasenha_8
   \   000000CC   0x2804             CMP      R0,#+4
   \   000000CE   0xD1CF             BNE.N    ??TELASENHA_checa_contrasenha_3
   \                     ??TELASENHA_checa_contrasenha_9:
   \   000000D0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D2   0x2C05             CMP      R4,#+5
   \   000000D4   0xDB31             BLT.N    ??TELASENHA_checa_contrasenha_10
   \   000000D6   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000DA   0x....             LDR.N    R1,??DataTable2_9  ;; 0x186a0
   \   000000DC   0xF89D 0x2001      LDRB     R2,[SP, #+1]
   \   000000E0   0xF242 0x7310      MOVW     R3,#+10000
   \   000000E4   0x435A             MULS     R2,R3,R2
   \   000000E6   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000EA   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   000000EE   0xF44F 0x727A      MOV      R2,#+1000
   \   000000F2   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000F6   0xF89D 0x1003      LDRB     R1,[SP, #+3]
   \   000000FA   0x2264             MOVS     R2,#+100
   \   000000FC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000100   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   00000104   0x220A             MOVS     R2,#+10
   \   00000106   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000010A   0xF89D 0x1005      LDRB     R1,[SP, #+5]
   \   0000010E   0x1808             ADDS     R0,R1,R0
   \   00000110   0x....             LDR.N    R1,??DataTable2_10  ;; 0xffae9eb0
   \   00000112   0x1808             ADDS     R0,R1,R0
   \   00000114   0x0380             LSLS     R0,R0,#+14       ;; ZeroExtS R0,R0,#+14,#+14
   \   00000116   0x0B80             LSRS     R0,R0,#+14
   \   00000118   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   0000011A   0x0C80             LSRS     R0,R0,#+18
   \   0000011C   0xF640 0x31BC      MOVW     R1,#+3004
   \   00000120   0xEA91 0x0400      EORS     R4,R1,R0
   \   00000124   0x200C             MOVS     R0,#+12
   \   00000126   0x.... 0x....      BL       HD44780_writeChar
   \   0000012A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000012C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000012E   0x42BC             CMP      R4,R7
   \   00000130   0xD101             BNE.N    ??TELASENHA_checa_contrasenha_11
   \   00000132   0x20FF             MOVS     R0,#+255
   \   00000134   0xE017             B.N      ??TELASENHA_checa_contrasenha_12
   \                     ??TELASENHA_checa_contrasenha_11:
   \   00000136   0x2000             MOVS     R0,#+0
   \   00000138   0xE015             B.N      ??TELASENHA_checa_contrasenha_12
   \                     ??TELASENHA_checa_contrasenha_10:
   \   0000013A   0x1C64             ADDS     R4,R4,#+1
   \   0000013C   0xE798             B.N      ??TELASENHA_checa_contrasenha_3
   \                     ??TELASENHA_checa_contrasenha_7:
   \   0000013E   0x2000             MOVS     R0,#+0
   \   00000140   0xE011             B.N      ??TELASENHA_checa_contrasenha_12
   \                     ??TELASENHA_checa_contrasenha_8:
   \   00000142   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000144   0xA800             ADD      R0,SP,#+0
   \   00000146   0x5C20             LDRB     R0,[R4, R0]
   \   00000148   0x1C40             ADDS     R0,R0,#+1
   \   0000014A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000014C   0xA900             ADD      R1,SP,#+0
   \   0000014E   0x5460             STRB     R0,[R4, R1]
   \   00000150   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000152   0xA800             ADD      R0,SP,#+0
   \   00000154   0x5C20             LDRB     R0,[R4, R0]
   \   00000156   0x283A             CMP      R0,#+58
   \   00000158   0xDB03             BLT.N    ??TELASENHA_checa_contrasenha_13
   \   0000015A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000015C   0xA800             ADD      R0,SP,#+0
   \   0000015E   0x2130             MOVS     R1,#+48
   \   00000160   0x5421             STRB     R1,[R4, R0]
   \                     ??TELASENHA_checa_contrasenha_13:
   \   00000162   0xE785             B.N      ??TELASENHA_checa_contrasenha_3
    279            }      
    280            
    281            return 0;
   \                     ??TELASENHA_checa_contrasenha_6:
   \   00000164   0x2000             MOVS     R0,#+0
   \                     ??TELASENHA_checa_contrasenha_12:
   \   00000166   0xB00B             ADD      SP,SP,#+44
   \   00000168   0xBDF0             POP      {R4-R7,PC}       ;; return
    282          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     `?<Constant "0000">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     `?<Constant " Informe a senha">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     `?<Constant "Senha">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     `?<Constant "incorreta!">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     `?<Constant "0000">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     MCS_contadorSemente

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     `?<Constant "TOKEN:%04d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     `?<Constant "CODE :">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     `?<Constant "000000">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0xFFAE9EB0         DC32     0xffae9eb0

   \                                 In section .rodata, align 4
   \                     `?<Constant "0000">`:
   \   00000000   0x30 0x30          DC8 "0000"
   \              0x30 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant " Informe a senha">`:
   \   00000000   0x20 0x49          DC8 " Informe a senha"
   \              0x6E 0x66    
   \              0x6F 0x72    
   \              0x6D 0x65    
   \              0x20 0x61    
   \              0x20 0x73    
   \              0x65 0x6E    
   \              0x68 0x61    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Senha">`:
   \   00000000   0x53 0x65          DC8 "Senha"
   \              0x6E 0x68    
   \              0x61 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "incorreta!">`:
   \   00000000   0x69 0x6E          DC8 "incorreta!"
   \              0x63 0x6F    
   \              0x72 0x72    
   \              0x65 0x74    
   \              0x61 0x21    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "0000">_1`:
   \   00000000   0x30 0x30          DC8 "0000"
   \              0x30 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TOKEN:%04d">`:
   \   00000000   0x54 0x4F          DC8 "TOKEN:%04d"
   \              0x4B 0x45    
   \              0x4E 0x3A    
   \              0x25 0x30    
   \              0x34 0x64    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "CODE :">`:
   \   00000000   0x43 0x4F          DC8 "CODE :"
   \              0x44 0x45    
   \              0x20 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "000000">`:
   \   00000000   0x30 0x30          DC8 "000000"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x00         
   \   00000007   0x00               DC8 0
    283          /************************************************************************************
    284          *       Fim do arquivo
    285          ************************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   TELASENHA_checa_contrasenha
        64   -> HD44780_posicionaTexto
        64   -> HD44780_writeChar
        64   -> HD44780_writeString
        64   -> STRING_write_to_internal
        64   -> TECLADO_getContadorInatividade
        64   -> TECLADO_getch
        64   -> memcpy
        64   -> rand
        64   -> sprintf
        64   -> srand
        64   -> vTaskDelay
      40   TELASENHA_get_senha
        40   -> HD44780_posicionaTexto
        40   -> HD44780_writeChar
        40   -> HD44780_writeString
        40   -> TECLADO_getContadorInatividade
        40   -> TECLADO_getch
        40   -> memcpy
        40   -> vTaskDelay
      40   TELASENHA_telaSenha
        40   -> HD44780_posicionaTexto
        40   -> HD44780_writeChar
        40   -> HD44780_writeString
        40   -> TECLADO_getContadorInatividade
        40   -> TECLADO_getch
        40   -> memcpy
        40   -> vTaskDelay
       8   memcpy
         8   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant " Informe a senha">
       8  ?<Constant "0000">
       8  ?<Constant "0000">_1
       8  ?<Constant "000000">
       8  ?<Constant "CODE :">
       8  ?<Constant "Senha">
      12  ?<Constant "TOKEN:%04d">
      12  ?<Constant "incorreta!">
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  MCS_contadorSemente
     362  TELASENHA_checa_contrasenha
     268  TELASENHA_get_senha
     322  TELASENHA_telaSenha
      14  memcpy

 
     4 bytes in section .bss
    84 bytes in section .rodata
 1 010 bytes in section .text
 
 996 bytes of CODE  memory (+ 14 bytes shared)
  84 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none

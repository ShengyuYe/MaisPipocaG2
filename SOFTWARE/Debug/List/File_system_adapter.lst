###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      24/Jul/2017  15:06:49 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\Protocolo\File_system_adapter.c   #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\Protocolo\File_system_adapter.c   #
#                    -lC C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\Mai #
#                    sPipocaG2\SOFTWARE\Debug\List\ -lA                       #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\File_system_adapter.lst        #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\File_system_adapter.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\Protocolo\File_system_adapter.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  file_system_adapter.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :  24/07/2017
     21          |
     22          |       Revisões           :  1
     23          
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /************************************************************************************
     30          *       Includes
     31          ************************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include <string.h>
     35          #include "file_system_adapter.h"
     36          #include "..\..\includes.h"
     37          
     38          /************************************************************************************
     39          *       Definições locais
     40          ************************************************************************************/
     41          #define BLOCK_READ(X,Y,Z)                       MEMORYWRAPPER_readBytes(X,Y,Z)
     42          #define BLOCK_WRITE(X,Y,Z)                      MEMORYWRAPPER_writeBytes(X,Y,Z)
     43          
     44          #define ENDERECO_INICIAL_FLASH                  AREA_ARQUIVOS
     45          
     46          /************************************************************************************
     47          *       Variaveis locais
     48          ************************************************************************************/
     49          
     50          /************************************************************************************
     51          *       Funções locais
     52          ************************************************************************************/
     53          
     54          /************************************************************************************
     55          *       Implementação das funções
     56          ************************************************************************************/
     57          
     58          /************************************************************************************
     59          *       Descrição       :       Escreve na tabela que contém o endereço
     60          *                               do início dos arquivos de áudio
     61          *       Parametros      :       (unsigned char) indice do arquivo
     62          *                               (unsigned int) endereço inicial na flash
     63          *       Retorno         :       nenhum
     64          ************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     65          void FSA_write_start_of_file(unsigned char file_index,
     66                                       unsigned int start_address){
     67                                         
     68                                         
     69                                         
     70          }
   \                     FSA_write_start_of_file:
   \   00000000   0x4770             BX       LR               ;; return
     71          /************************************************************************************
     72          *       Descrição       :       Escreve um bloco no endereço inicial
     73          *                               da flash
     74          *       Parametros      :       (unsigned int) endereço inicial
     75          *                               (unsigned char*) ponteiro para os dados
     76          *                               (unsigned short int) tamanho
     77          *       Retorno         :       nenhum
     78          ************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     79          void FSA_write_memory_data(unsigned int start_address,
     80                                     unsigned char *pData,
     81                                     unsigned short int size){
     82                                       
     83                                       
     84          }
   \                     FSA_write_memory_data:
   \   00000000   0x4770             BX       LR               ;; return
     85          /************************************************************************************
     86          *       Descrição       :       Formata a área de memória onde se encontra
     87          *                               o bloco de aúdio
     88          *       Parametros      :       nenhum
     89          *       Retorno         :       nenhum
     90          ************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     91          void FSA_format_audio_memory(void){
   \                     FSA_format_audio_memory:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     92            unsigned long int enderecoInicial=ENDERECO_INICIAL_FLASH;
   \   00000002   0xF44F 0x5400      MOV      R4,#+8192
     93            
     94            for(unsigned short int i=0;i<599;i++){
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0xE005             B.N      ??FSA_format_audio_memory_0
     95              SST_erase4kbSector(enderecoInicial);
   \                     ??FSA_format_audio_memory_1:
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       SST_erase4kbSector
     96              enderecoInicial+=4096;
   \   00000010   0xF514 0x5480      ADDS     R4,R4,#+4096
     97            }
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \                     ??FSA_format_audio_memory_0:
   \   00000016   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000018   0xF240 0x2057      MOVW     R0,#+599
   \   0000001C   0x4285             CMP      R5,R0
   \   0000001E   0xDBF4             BLT.N    ??FSA_format_audio_memory_1
     98          }
   \   00000020   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     99          /************************************************************************************
    100          *       Fim do arquivo
    101          ************************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   FSA_format_audio_memory
        16   -> SST_erase4kbSector
       0   FSA_write_memory_data
       0   FSA_write_start_of_file


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      34  FSA_format_audio_memory
       2  FSA_write_memory_data
       2  FSA_write_start_of_file

 
 38 bytes in section .text
 
 38 bytes of CODE memory

Errors: none
Warnings: none

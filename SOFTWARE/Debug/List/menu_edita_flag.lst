###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      09/Sep/2017  15:56:32 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\menu_edi #
#                    ta_flag.c                                                #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\menu_edi #
#                    ta_flag.c -lC C:\repositorios\MaisPipocaG2\SOFTWARE\Debu #
#                    g\List\ -lA C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\ #
#                    List\ -o C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj #
#                    \ --no_cse --no_unroll --no_inline --no_code_motion      #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\menu_ed #
#                    ita_flag.lst                                             #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\menu_edi #
#                    ta_flag.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\menu_edita_flag.c
      1          /*__________________________________________________________________________________
      2          |	DEXTRO SOLUÇÕES TECNOLÓGICAS
      3          |       
      4          |       ITAJAÍ - SC
      5          |       www.dextro.ind.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by DEXTRO  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by DEXTRO 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da DEXTRO  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       DEXTRO  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  Menu_edita_flag.c
     18          |       Descrição          :  Tela para realizar a edição de números inteiros
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  07/11/2016
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *       Includes
     31          ***********************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include <string.h>
     35          #include "..\includes.h"
     36          #include "menu_edita_inteiro.h"
     37          
     38          /***********************************************************************************
     39          *       Constantes
     40          ***********************************************************************************/
     41          
     42          
     43          /***********************************************************************************
     44          *       Variaveis locais
     45          ***********************************************************************************/
     46          
     47          
     48          /***********************************************************************************
     49          *       Funções locais
     50          ***********************************************************************************/
     51          
     52          
     53          /***********************************************************************************
     54          *       Implementação das funções
     55          ***********************************************************************************/
     56          
     57          /***********************************************************************************
     58          *       Descrição       :       Ponto de entrada do menu de edição
     59          *                               de inteiro
     60          *       Parametro       :       (char*) titulo
     61          *                               (char*) String de formação
     62          *                               (unsigned int) valor inicial
     63          *                               (unsigned int) valor mínimo
     64          *                               (unsigned int) valor máximo
     65          *       Retorno         :       (unsigned int) valor editado
     66          ***********************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     67          unsigned char MEF_entry(char *titulo,unsigned char flag,char *onSTR,char*offSTR){
   \                     MEF_entry:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x001F             MOVS     R7,R3
     68            eTECLA tecla;
     69            char linha[17];
     70            unsigned char tam;
     71            unsigned char ultimo_tam;
     72            
     73            tam = strlen(titulo);
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       strlen
   \   00000014   0x4681             MOV      R9,R0
     74            
     75            HD44780_clearText();
   \   00000016   0x200C             MOVS     R0,#+12
   \   00000018   0x.... 0x....      BL       HD44780_writeChar
     76            HD44780_posicionaTexto((16-tam)>>1,0);
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000022   0xF1D9 0x0010      RSBS     R0,R9,#+16
   \   00000026   0x1040             ASRS     R0,R0,#+1
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       HD44780_posicionaTexto
     77            HD44780_writeString(titulo);
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x.... 0x....      BL       HD44780_writeString
     78            
     79            if(flag) 
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2D00             CMP      R5,#+0
   \   00000038   0xD001             BEQ.N    ??MEF_entry_0
     80              flag = 255;
   \   0000003A   0x20FF             MOVS     R0,#+255
   \   0000003C   0x0005             MOVS     R5,R0
     81            
     82            for(;TECLADO_getContadorInatividade();){
   \                     ??MEF_entry_0:
   \   0000003E   0x.... 0x....      BL       TECLADO_getContadorInatividade
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD040             BEQ.N    ??MEF_entry_1
     83                   
     84              tecla = TECLADO_getch();
   \   00000046   0x.... 0x....      BL       TECLADO_getch
   \   0000004A   0x4680             MOV      R8,R0
     85              switch(tecla){
   \   0000004C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000050   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000054   0xD007             BEQ.N    ??MEF_entry_2
   \   00000056   0xD30B             BCC.N    ??MEF_entry_3
   \   00000058   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000005C   0xD006             BEQ.N    ??MEF_entry_4
   \   0000005E   0xD305             BCC.N    ??MEF_entry_4
   \   00000060   0xF1B8 0x0F04      CMP      R8,#+4
   \   00000064   0xD104             BNE.N    ??MEF_entry_3
     86                case TECLA_ENTER:
     87                case TECLA_ESC:
     88                     return flag;
   \                     ??MEF_entry_2:
   \   00000066   0x0028             MOVS     R0,R5
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0xE02F             B.N      ??MEF_entry_5
     89                case TECLA_INC:
     90                case TECLA_DEC:        
     91                     flag^=0xFF;
   \                     ??MEF_entry_4:
   \   0000006C   0xF095 0x05FF      EORS     R5,R5,#0xFF
     92                     break;
     93              }
     94              
     95              sprintf(linha,"[%s]",flag?onSTR:offSTR);
   \                     ??MEF_entry_3:
   \   00000070   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000072   0x2D00             CMP      R5,#+0
   \   00000074   0xD001             BEQ.N    ??MEF_entry_6
   \   00000076   0x0032             MOVS     R2,R6
   \   00000078   0xE000             B.N      ??MEF_entry_7
   \                     ??MEF_entry_6:
   \   0000007A   0x003A             MOVS     R2,R7
   \                     ??MEF_entry_7:
   \   0000007C   0x4915             LDR.N    R1,??MEF_entry_8
   \   0000007E   0xA800             ADD      R0,SP,#+0
   \   00000080   0x.... 0x....      BL       sprintf
     96              tam = strlen(linha);
   \   00000084   0xA800             ADD      R0,SP,#+0
   \   00000086   0x.... 0x....      BL       strlen
   \   0000008A   0x4681             MOV      R9,R0
     97              if(tam!=ultimo_tam){
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000094   0x45D1             CMP      R9,R10
   \   00000096   0xD006             BEQ.N    ??MEF_entry_9
     98                HD44780_posicionaTexto(0,1);  
   \   00000098   0x2101             MOVS     R1,#+1
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x.... 0x....      BL       HD44780_posicionaTexto
     99                HD44780_writeString("                ");
   \   000000A0   0x480D             LDR.N    R0,??MEF_entry_8+0x4
   \   000000A2   0x.... 0x....      BL       HD44780_writeString
    100              }
    101              HD44780_posicionaTexto((16-tam)>>1,1);
   \                     ??MEF_entry_9:
   \   000000A6   0x2101             MOVS     R1,#+1
   \   000000A8   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000AC   0xF1D9 0x0010      RSBS     R0,R9,#+16
   \   000000B0   0x1040             ASRS     R0,R0,#+1
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0x.... 0x....      BL       HD44780_posicionaTexto
    102              HD44780_writeString(linha);
   \   000000B8   0xA800             ADD      R0,SP,#+0
   \   000000BA   0x.... 0x....      BL       HD44780_writeString
    103                                  
    104              ultimo_tam = tam;
   \   000000BE   0x46CA             MOV      R10,R9
    105              vTaskDelay(50);
   \   000000C0   0x2032             MOVS     R0,#+50
   \   000000C2   0x.... 0x....      BL       vTaskDelay
   \   000000C6   0xE7BA             B.N      ??MEF_entry_0
    106            }                        
    107                                   
    108            return flag;                         
   \                     ??MEF_entry_1:
   \   000000C8   0x0028             MOVS     R0,R5
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??MEF_entry_5:
   \   000000CC   0xB006             ADD      SP,SP,#+24
   \   000000CE   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   \   000000D2   0xBF00             Nop      
   \                     ??MEF_entry_8:
   \   000000D4   0x........         DC32     `?<Constant "[%s]">`
   \   000000D8   0x........         DC32     `?<Constant "                ">`
    109          }

   \                                 In section .rodata, align 4
   \                     `?<Constant "[%s]">`:
   \   00000000   0x5B 0x25          DC8 "[%s]"
   \              0x73 0x5D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "                ">`:
   \   00000000   0x20 0x20          DC8 "                "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    110          /***********************************************************************************
    111          *       Fim do arquivo
    112          ***********************************************************************************/
    113          
    114          
    115          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   MEF_entry
        56   -> HD44780_posicionaTexto
        56   -> HD44780_writeChar
        56   -> HD44780_writeString
        56   -> TECLADO_getContadorInatividade
        56   -> TECLADO_getch
        56   -> sprintf
        56   -> strlen
        56   -> vTaskDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "                ">
       8  ?<Constant "[%s]">
     220  MEF_entry

 
  28 bytes in section .rodata
 220 bytes in section .text
 
 220 bytes of CODE  memory
  28 bytes of CONST memory

Errors: none
Warnings: none

###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      13/Sep/2017  18:09:16 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\CCTALK\cct #
#                    alk.c                                                    #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\CCTALK\cct #
#                    alk.c -lC C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Li #
#                    st\ -lA C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List #
#                    \ -o C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\    #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\cctalk. #
#                    lst                                                      #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\cctalk.o #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Drivers\CCTALK\cctalk.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  cctalk.c
     18          |       Descrição          :  Biblioteca do protocolo cctalk mestre
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  17/02/2015
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          
     29          /***********************************************************************************
     30          *       Includes
     31          ***********************************************************************************/
     32          #include <stdio.h>
     33          #include <stdlib.h>
     34          #include <nxp\iolpc1768.h>

   \                                 In section .noinit, at 0xe000e280
   \   __absolute union <unnamed> volatile _A_CLRPEND0
   \                     _A_CLRPEND0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4000c000
   \   __absolute unsigned char volatile U0RBRTHR
   \                     U0RBRTHR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x4000c008
   \   __absolute union <unnamed> volatile _A_U0FCR
   \                     _A_U0FCR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4000c014
   \   __absolute union <unnamed> const volatile _A_U0LSR
   \                     _A_U0LSR:
   \   00000000                      DS8 1
     35          #include "cctalk.h"
     36          #include "..\..\includes.h"
     37          /***********************************************************************************
     38          *       Definições locais
     39          ***********************************************************************************/
     40          #define TAM_BUF_OUT                             64
     41          #define TAM_BUF_IN                              64        
     42          
     43          /***********************************************************************************
     44          *       Constantes
     45          ***********************************************************************************/

   \                                 In section .data, align 4
     46          unsigned short int crc_ccitt_lockup[256]={
   \                     crc_ccitt_lockup:
   \   00000000   0x0000 0x1021      DC16 0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161
   \              0x2042 0x3063
   \              0x4084 0x50A5
   \              0x60C6 0x70E7
   \              0x8108 0x9129
   \   00000014   0xA14A 0xB16B      DC16 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786
   \              0xC18C 0xD1AD
   \              0xE1CE 0xF1EF
   \              0x1231 0x0210
   \              0x3273 0x2252
   \   00000028   0x52B5 0x4294      DC16 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205
   \              0x72F7 0x62D6
   \              0x9339 0x8318
   \              0xB37B 0xA35A
   \              0xD3BD       
   \   0000003A   0xC39C 0xF3FF      DC16 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572
   \              0xE3DE 0x2462
   \              0x3443 0x0420
   \              0x1401 0x64E6
   \              0x74C7 0x44A4
   \   0000004E   0x5485 0xA56A      DC16 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669
   \              0xB54B 0x8528
   \              0x9509 0xE5EE
   \              0xF5CF 0xC5AC
   \              0xD58D       
   \   00000060   0x3653 0x2672      DC16 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874
   \              0x1611 0x0630
   \              0x76D7 0x66F6
   \              0x5695 0x46B4
   \              0xB75B 0xA77A
   \   00000074   0x9719 0x8738      DC16 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758
   \              0xF7DF 0xE7FE
   \              0xD79D 0xC7BC
   \              0x48C4 0x58E5
   \              0x6886       
   \   00000086   0x78A7 0x0840      DC16 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144
   \              0x1861 0x2802
   \              0x3823 0xC9CC
   \              0xD9ED 0xE98E
   \              0xF9AF 0x8948
   \   0000009A   0x9969 0xA90A      DC16 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899
   \              0xB92B 0x5AF5
   \              0x4AD4 0x7AB7
   \              0x6A96 0x1A71
   \              0x0A50 0x3A33
   \   000000AE   0x2A12 0xDBFD      DC16 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802
   \              0xCBDC 0xFBBF
   \              0xEB9E 0x9B79
   \              0x8B58 0xBB3B
   \              0xAB1A       
   \   000000C0   0x6CA6 0x7C87      DC16 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911
   \              0x4CE4 0x5CC5
   \              0x2C22 0x3C03
   \              0x0C60 0x1C41
   \              0xEDAE 0xFD8F
   \   000000D4   0xCDEC 0xDDCD      DC16 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277
   \              0xAD2A 0xBD0B
   \              0x8D68 0x9D49
   \              0x7E97 0x6EB6
   \              0x5ED5       
   \   000000E6   0x4EF4 0x3E13      DC16 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923
   \              0x2E32 0x1E51
   \              0x0E70 0xFF9F
   \              0xEFBE 0xDFDD
   \              0xCFFC 0xBF1B
   \   000000FA   0xAF3A 0x9F59      DC16 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453
   \              0x8F78 0x9188
   \              0x81A9 0xB1CA
   \              0xA1EB 0xD10C
   \              0xC12D       
   \   0000010C   0xF14E 0xE16F      DC16 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679
   \              0x1080 0x00A1
   \              0x30C2 0x20E3
   \              0x5004 0x4025
   \              0x7046 0x6067
   \   00000120   0x83B9 0x9398      DC16 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752
   \              0xA3FB 0xB3DA
   \              0xC33D 0xD31C
   \              0xE37F 0xF35E
   \              0x02B1 0x1290
   \   00000134   0x22F3 0x32D2      DC16 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312
   \              0x4235 0x5214
   \              0x6277 0x7256
   \              0xB5EA 0xA5CB
   \              0x95A8       
   \   00000146   0x8589 0xF56E      DC16 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798
   \              0xE54F 0xD52C
   \              0xC50D 0x34E2
   \              0x24C3 0x14A0
   \              0x0481 0x7466
   \   0000015A   0x6447 0x5424      DC16 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358
   \              0x4405 0xA7DB
   \              0xB7FA 0x8799
   \              0x97B8 0xE75F
   \              0xF77E       
   \   0000016C   0xC71D 0xD73C      DC16 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068
   \              0x26D3 0x36F2
   \              0x0691 0x16B0
   \              0x6657 0x7676
   \              0x4615 0x5634
   \   00000180   0xD94C 0xC96D      DC16 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596
   \              0xF90E 0xE92F
   \              0x99C8 0x89E9
   \              0xB98A 0xA9AB
   \              0x5844       
   \   00000192   0x4865 0x7806      DC16 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223
   \              0x6827 0x18C0
   \              0x08E1 0x3882
   \              0x28A3 0xCB7D
   \              0xDB5C 0xEB3F
   \   000001A6   0xFB1E 0x8BF9      DC16 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254
   \              0x9BD8 0xABBB
   \              0xBB9A 0x4A75
   \              0x5A54 0x6A37
   \              0x7A16       
   \   000001B8   0x0AF1 0x1AD0      DC16 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427
   \              0x2AB3 0x3A92
   \              0xFD2E 0xED0F
   \              0xDD6C 0xCD4D
   \              0xBDAA 0xAD8B
   \   000001CC   0x9DE8 0x8DC9      DC16 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265
   \              0x7C26 0x6C07
   \              0x5C64 0x4C45
   \              0x3CA2 0x2C83
   \              0x1CE0 0x0CC1
   \   000001E0   0xEF1F 0xFF3E      DC16 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183
   \              0xCF5D 0xDF7C
   \              0xAF9B 0xBFBA
   \              0x8FD9 0x9FF8
   \              0x6E17       
   \   000001F2   0x7E36 0x4E55      DC16 32310, 20053, 24180, 11923, 16050, 3793, 7920
   \              0x5E74 0x2E93
   \              0x3EB2 0x0ED1
   \              0x1EF0       
     47            0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50A5, 0x60C6, 0x70E7,  
     48            0x8108, 0x9129, 0xA14A, 0xB16B, 0xC18C, 0xD1AD, 0xE1CE, 0xF1EF,  
     49            0x1231, 0x0210, 0x3273, 0x2252, 0x52B5, 0x4294, 0x72F7, 0x62D6,  
     50            0x9339, 0x8318, 0xB37B, 0xA35A, 0xD3BD, 0xC39C, 0xF3FF, 0xE3DE,  
     51            0x2462, 0x3443, 0x0420, 0x1401, 0x64E6, 0x74C7, 0x44A4, 0x5485,  
     52            0xA56A, 0xB54B, 0x8528, 0x9509, 0xE5EE, 0xF5CF, 0xC5AC, 0xD58D,  
     53            0x3653, 0x2672, 0x1611, 0x0630, 0x76D7, 0x66F6, 0x5695, 0x46B4,  
     54            0xB75B, 0xA77A, 0x9719, 0x8738, 0xF7DF, 0xE7FE, 0xD79D, 0xC7BC,  
     55            0x48C4, 0x58E5, 0x6886, 0x78A7, 0x0840, 0x1861, 0x2802, 0x3823,  
     56            0xC9CC, 0xD9ED, 0xE98E, 0xF9AF, 0x8948, 0x9969, 0xA90A, 0xB92B,  
     57            0x5AF5, 0x4AD4, 0x7AB7, 0x6A96, 0x1A71, 0x0A50, 0x3A33, 0x2A12,  
     58            0xDBFD, 0xCBDC, 0xFBBF, 0xEB9E, 0x9B79, 0x8B58, 0xBB3B, 0xAB1A,  
     59            0x6CA6, 0x7C87, 0x4CE4, 0x5CC5, 0x2C22, 0x3C03, 0x0C60, 0x1C41,  
     60            0xEDAE, 0xFD8F, 0xCDEC, 0xDDCD, 0xAD2A, 0xBD0B, 0x8D68, 0x9D49,  
     61            0x7E97, 0x6EB6, 0x5ED5, 0x4EF4, 0x3E13, 0x2E32, 0x1E51, 0x0E70,  
     62            0xFF9F, 0xEFBE, 0xDFDD, 0xCFFC, 0xBF1B, 0xAF3A, 0x9F59, 0x8F78,  
     63            0x9188, 0x81A9, 0xB1CA, 0xA1EB, 0xD10C, 0xC12D, 0xF14E, 0xE16F,  
     64            0x1080, 0x00A1, 0x30C2, 0x20E3, 0x5004, 0x4025, 0x7046, 0x6067,  
     65            0x83B9, 0x9398, 0xA3FB, 0xB3DA, 0xC33D, 0xD31C, 0xE37F, 0xF35E,  
     66            0x02B1, 0x1290, 0x22F3, 0x32D2, 0x4235, 0x5214, 0x6277, 0x7256,  
     67            0xB5EA, 0xA5CB, 0x95A8, 0x8589, 0xF56E, 0xE54F, 0xD52C, 0xC50D,  
     68            0x34E2, 0x24C3, 0x14A0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,  
     69            0xA7DB, 0xB7FA, 0x8799, 0x97B8, 0xE75F, 0xF77E, 0xC71D, 0xD73C,  
     70            0x26D3, 0x36F2, 0x0691, 0x16B0, 0x6657, 0x7676, 0x4615, 0x5634,  
     71            0xD94C, 0xC96D, 0xF90E, 0xE92F, 0x99C8, 0x89E9, 0xB98A, 0xA9AB,  
     72            0x5844, 0x4865, 0x7806, 0x6827, 0x18C0, 0x08E1, 0x3882, 0x28A3,  
     73            0xCB7D, 0xDB5C, 0xEB3F, 0xFB1E, 0x8BF9, 0x9BD8, 0xABBB, 0xBB9A,  
     74            0x4A75, 0x5A54, 0x6A37, 0x7A16, 0x0AF1, 0x1AD0, 0x2AB3, 0x3A92,  
     75            0xFD2E, 0xED0F, 0xDD6C, 0xCD4D, 0xBDAA, 0xAD8B, 0x9DE8, 0x8DC9,  
     76            0x7C26, 0x6C07, 0x5C64, 0x4C45, 0x3CA2, 0x2C83, 0x1CE0, 0x0CC1,  
     77            0xEF1F, 0xFF3E, 0xCF5D, 0xDF7C, 0xAF9B, 0xBFBA, 0x8FD9, 0x9FF8,  
     78            0x6E17, 0x7E36, 0x4E55, 0x5E74, 0x2E93, 0x3EB2, 0x0ED1, 0x1EF0 
     79          };
     80          
     81          /***********************************************************************************
     82          *       Variaveis globais
     83          ***********************************************************************************/

   \                                 In section .bss, align 4
     84          unsigned char CCTALK_bufferTxd[TAM_BUF_OUT];
   \                     CCTALK_bufferTxd:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     85          unsigned char CCTALK_bufferRxd[TAM_BUF_IN];
   \                     CCTALK_bufferRxd:
   \   00000000                      DS8 64

   \                                 In section .bss, align 1
     86          unsigned char CCTALK_bytesParaEnviar=0;
   \                     CCTALK_bytesParaEnviar:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     87          unsigned char CCTALK_bytesEnviados=0;
   \                     CCTALK_bytesEnviados:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     88          unsigned char CCTALK_recebidos=0;
   \                     CCTALK_recebidos:
   \   00000000                      DS8 1
     89          
     90          /***********************************************************************************
     91          *       Funções locais
     92          ***********************************************************************************/
     93          unsigned char CCTALK_enviaPacote(unsigned char*pacote,unsigned char tamanho,
     94                                           unsigned char*recebido,unsigned short int *qtdRecebidos);
     95          void CCTALK_enviaPacoteSerial(unsigned short int tamanho);
     96          
     97          /***********************************************************************************
     98          *       Implementação das funções
     99          ***********************************************************************************/
    100          
    101          /***********************************************************************************
    102          *       Descrição       :       Inicialização da biblioteca
    103          *       Parametros      :       nenhum
    104          *       Retorno         :       nenhum
    105          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    106          void CCTALK_ini(void){
   \                     CCTALK_ini:
   \   00000000   0xB580             PUSH     {R7,LR}
    107          
    108            UART_init(0,9600,NULL,NULL,NULL);  
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0xF44F 0x5116      MOV      R1,#+9600
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       UART_init
    109          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
    110          /***********************************************************************************
    111          *       Descrição       :      Faz o calculo do CRC
    112          *       Parametros      :       (unsigned char*) ponteiro para o buffer
    113          *                               (unsigned short int) offset
    114          *                               (unsigned short int) tamanho do pacote
    115          *       Retorno         :       (unsigned shor int) crc
    116          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    117          unsigned short int CCTALK_calculaCRC(unsigned char *pData,unsigned short int offset,
    118                                               unsigned short int tamanho){
   \                     CCTALK_calculaCRC:
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x0003             MOVS     R3,R0
    119            unsigned short int crc=0;
   \   00000004   0x2000             MOVS     R0,#+0
    120            
    121            for(unsigned short int i=0;i<tamanho;i++)
   \   00000006   0x2400             MOVS     R4,#+0
   \                     ??CCTALK_calculaCRC_0:
   \   00000008   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   0x4294             CMP      R4,R2
   \   0000000E   0xD20F             BCS.N    ??CCTALK_calculaCRC_1
    122              crc = (crc<<8) ^ crc_ccitt_lockup[(crc>>8) ^ pData[i+offset]];
   \   00000010   0x0005             MOVS     R5,R0
   \   00000012   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000014   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000016   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000018   0x190E             ADDS     R6,R1,R4
   \   0000001A   0x5CF6             LDRB     R6,[R6, R3]
   \   0000001C   0xEA96 0x2525      EORS     R5,R6,R5, ASR #+8
   \   00000020   0x.... 0x....      LDR.W    R6,??DataTable4
   \   00000024   0xF836 0x5015      LDRH     R5,[R6, R5, LSL #+1]
   \   00000028   0xEA95 0x2000      EORS     R0,R5,R0, LSL #+8
   \   0000002C   0x1C64             ADDS     R4,R4,#+1
   \   0000002E   0xE7EB             B.N      ??CCTALK_calculaCRC_0
    123                                                                                        
    124            return crc;
   \                     ??CCTALK_calculaCRC_1:
   \   00000030   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000032   0xBC70             POP      {R4-R6}
   \   00000034   0x4770             BX       LR               ;; return
    125          }  
    126          /***********************************************************************************
    127          *       Descrição       :    Interrupção da uart 0
    128          *       Parametrso      :     nenhum
    129          *       Retorno         :     nenhum
    130          ***********************************************************************************/  

   \                                 In section .text, align 2, keep-with-next
    131          void CCTALK_irqUart(void){
    132          
    133            unsigned char dummy;
    134            
    135            switch(U0IIR_bit.IID){
   \                     CCTALK_irqUart:
   \   00000000   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4000c008
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0x0849             LSRS     R1,R1,#+1
   \   00000006   0xF011 0x0107      ANDS     R1,R1,#0x7
   \   0000000A   0x2901             CMP      R1,#+1
   \   0000000C   0xD006             BEQ.N    ??CCTALK_irqUart_0
   \   0000000E   0x2902             CMP      R1,#+2
   \   00000010   0xD019             BEQ.N    ??CCTALK_irqUart_1
   \   00000012   0x2903             CMP      R1,#+3
   \   00000014   0xD028             BEQ.N    ??CCTALK_irqUart_2
   \   00000016   0x2906             CMP      R1,#+6
   \   00000018   0xD02D             BEQ.N    ??CCTALK_irqUart_3
   \   0000001A   0xE02C             B.N      ??CCTALK_irqUart_4
    136              case THRE:
    137                         if(CCTALK_bytesParaEnviar){
   \                     ??CCTALK_irqUart_0:
   \   0000001C   0x....             LDR.N    R1,??DataTable4_2
   \   0000001E   0x7809             LDRB     R1,[R1, #+0]
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD00F             BEQ.N    ??CCTALK_irqUart_5
    138                           U0THR = CCTALK_bufferTxd[CCTALK_bytesEnviados++];
   \   00000024   0x....             LDR.N    R1,??DataTable4_3
   \   00000026   0x7809             LDRB     R1,[R1, #+0]
   \   00000028   0x....             LDR.N    R2,??DataTable4_4
   \   0000002A   0x5C89             LDRB     R1,[R1, R2]
   \   0000002C   0x....             LDR.N    R2,??DataTable4_5  ;; 0x4000c000
   \   0000002E   0x7011             STRB     R1,[R2, #+0]
   \   00000030   0x....             LDR.N    R1,??DataTable4_3
   \   00000032   0x7809             LDRB     R1,[R1, #+0]
   \   00000034   0x1C49             ADDS     R1,R1,#+1
   \   00000036   0x....             LDR.N    R2,??DataTable4_3
   \   00000038   0x7011             STRB     R1,[R2, #+0]
    139                           CCTALK_bytesParaEnviar--;
   \   0000003A   0x....             LDR.N    R1,??DataTable4_2
   \   0000003C   0x7809             LDRB     R1,[R1, #+0]
   \   0000003E   0x1E49             SUBS     R1,R1,#+1
   \   00000040   0x....             LDR.N    R2,??DataTable4_2
   \   00000042   0x7011             STRB     R1,[R2, #+0]
    140                         }
    141                         break; 
   \                     ??CCTALK_irqUart_5:
   \   00000044   0xE017             B.N      ??CCTALK_irqUart_4
    142              case RDA : dummy = U0RBR;
   \                     ??CCTALK_irqUart_1:
   \   00000046   0x....             LDR.N    R1,??DataTable4_5  ;; 0x4000c000
   \   00000048   0x7809             LDRB     R1,[R1, #+0]
   \   0000004A   0x0008             MOVS     R0,R1
    143                         if(CCTALK_recebidos<(TAM_BUF_IN-1))
   \   0000004C   0x....             LDR.N    R1,??DataTable4_6
   \   0000004E   0x7809             LDRB     R1,[R1, #+0]
   \   00000050   0x293F             CMP      R1,#+63
   \   00000052   0xDA08             BGE.N    ??CCTALK_irqUart_6
    144                           CCTALK_bufferRxd[CCTALK_recebidos++] = dummy;
   \   00000054   0x....             LDR.N    R1,??DataTable4_6
   \   00000056   0x7809             LDRB     R1,[R1, #+0]
   \   00000058   0x....             LDR.N    R2,??DataTable4_7
   \   0000005A   0x5488             STRB     R0,[R1, R2]
   \   0000005C   0x....             LDR.N    R1,??DataTable4_6
   \   0000005E   0x7809             LDRB     R1,[R1, #+0]
   \   00000060   0x1C49             ADDS     R1,R1,#+1
   \   00000062   0x....             LDR.N    R2,??DataTable4_6
   \   00000064   0x7011             STRB     R1,[R2, #+0]
    145                         
    146                         break;      
   \                     ??CCTALK_irqUart_6:
   \   00000066   0xE006             B.N      ??CCTALK_irqUart_4
    147              case RLS : 
    148                         dummy = U0LSR;
   \                     ??CCTALK_irqUart_2:
   \   00000068   0x....             LDR.N    R1,??DataTable4_8  ;; 0x4000c014
   \   0000006A   0x7809             LDRB     R1,[R1, #+0]
   \   0000006C   0x0008             MOVS     R0,R1
    149                         dummy = U0RBR;               
   \   0000006E   0x....             LDR.N    R1,??DataTable4_5  ;; 0x4000c000
   \   00000070   0x7809             LDRB     R1,[R1, #+0]
   \   00000072   0x0008             MOVS     R0,R1
    150                         break;      
   \   00000074   0xE7FF             B.N      ??CCTALK_irqUart_4
    151              case CTI :
    152                         break;      
    153            }
    154            
    155            //Apaga o flag de interrupção pendente
    156            CLRPEND0 |= (0x01)<<5;    
   \                     ??CCTALK_irqUart_3:
   \                     ??CCTALK_irqUart_4:
   \   00000076   0x....             LDR.N    R1,??DataTable4_9  ;; 0xe000e280
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   0000007E   0x....             LDR.N    R2,??DataTable4_9  ;; 0xe000e280
   \   00000080   0x6011             STR      R1,[R2, #+0]
    157          }
   \   00000082   0x4770             BX       LR               ;; return
   \   00000084                      REQUIRE U0RBRTHR
   \   00000084                      REQUIRE _A_U0LSR
   \   00000084                      REQUIRE _A_U0FCR
   \   00000084                      REQUIRE _A_CLRPEND0
    158          /***********************************************************************************
    159          *       Descrição       :       Envia um pacote pelo canal serial
    160          *       Parametros      :       (unsigned char) tamanho do pacote
    161          *       Retorno         ;       nenhum
    162          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    163          void CCTALK_enviaPacoteSerial(unsigned short int tamanho){
    164            
    165            CCTALK_recebidos = 0;
   \                     CCTALK_enviaPacoteSerial:
   \   00000000   0x....             LDR.N    R1,??DataTable4_6
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x700A             STRB     R2,[R1, #+0]
    166            
    167            CCTALK_bytesParaEnviar = tamanho-1;
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x1E49             SUBS     R1,R1,#+1
   \   0000000A   0x....             LDR.N    R2,??DataTable4_2
   \   0000000C   0x7011             STRB     R1,[R2, #+0]
    168            CCTALK_bytesEnviados = 1;
   \   0000000E   0x....             LDR.N    R1,??DataTable4_3
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x700A             STRB     R2,[R1, #+0]
    169            U0THR = CCTALK_bufferTxd[0];    
   \   00000014   0x....             LDR.N    R1,??DataTable4_5  ;; 0x4000c000
   \   00000016   0x....             LDR.N    R2,??DataTable4_4
   \   00000018   0x7812             LDRB     R2,[R2, #+0]
   \   0000001A   0x700A             STRB     R2,[R1, #+0]
    170          }
   \   0000001C   0x4770             BX       LR               ;; return
   \   0000001E                      REQUIRE U0RBRTHR
    171          /***********************************************************************************
    172          *       Descrição       :       Tick de timer da biblioteca
    173          *       Parametros      :       nenhum
    174          *       Retorno         :       nenhum
    175          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    176          void CCTALK_tick(void){
    177            
    178            
    179            
    180            
    181          }
   \                     CCTALK_tick:
   \   00000000   0x4770             BX       LR               ;; return
    182          /***********************************************************************************
    183          *       Descrição       :       Envia um pacote pelo canal serial
    184          *       Parametros      :       (unsigned char*) pacote
    185          *                               (unsigned char*) pacote recebido
    186          *       Retorno         :       (unsigned char) maior do que zero se receber
    187          *                                               resposta com CRC válido
    188          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    189          unsigned char CCTALK_enviaPacote(unsigned char*pacote,unsigned char tamanho,
    190                                           unsigned char*recebido,unsigned short int *qtdRecebidos){
   \                     CCTALK_enviaPacote:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    191            unsigned short int crc = CCTALK_calculaCRC(pacote, 0, tamanho);
   \   0000000C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000E   0x002A             MOVS     R2,R5
   \   00000010   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       CCTALK_calculaCRC
   \   0000001A   0x4680             MOV      R8,R0
    192            unsigned short int offset=tamanho+2;
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0xF115 0x0902      ADDS     R9,R5,#+2
    193             
    194            CCTALK_bufferTxd[0] = pacote[0];
   \   00000022   0x....             LDR.N    R0,??DataTable4_4
   \   00000024   0x7821             LDRB     R1,[R4, #+0]
   \   00000026   0x7001             STRB     R1,[R0, #+0]
    195            CCTALK_bufferTxd[1] = pacote[1];
   \   00000028   0x....             LDR.N    R0,??DataTable4_4
   \   0000002A   0x7861             LDRB     R1,[R4, #+1]
   \   0000002C   0x7041             STRB     R1,[R0, #+1]
    196            CCTALK_bufferTxd[2] = (unsigned char)crc;
   \   0000002E   0x....             LDR.N    R0,??DataTable4_4
   \   00000030   0xF880 0x8002      STRB     R8,[R0, #+2]
    197            CCTALK_bufferTxd[3] = pacote[2];
   \   00000034   0x....             LDR.N    R0,??DataTable4_4
   \   00000036   0x78A1             LDRB     R1,[R4, #+2]
   \   00000038   0x70C1             STRB     R1,[R0, #+3]
    198          
    199            for(unsigned short int i=0;i<pacote[1];i++)
   \   0000003A   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_enviaPacote_0:
   \   0000003C   0x7861             LDRB     R1,[R4, #+1]
   \   0000003E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000040   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000042   0x4288             CMP      R0,R1
   \   00000044   0xD208             BCS.N    ??CCTALK_enviaPacote_1
    200              CCTALK_bufferTxd[4+i] = pacote[3+i];
   \   00000046   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000048   0x1901             ADDS     R1,R0,R4
   \   0000004A   0x78C9             LDRB     R1,[R1, #+3]
   \   0000004C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004E   0x....             LDR.N    R2,??DataTable4_4
   \   00000050   0x1882             ADDS     R2,R0,R2
   \   00000052   0x7111             STRB     R1,[R2, #+4]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0xE7F1             B.N      ??CCTALK_enviaPacote_0
    201          
    202            CCTALK_bufferTxd[4 + pacote[1]] = (unsigned char)(crc>>8);
   \                     ??CCTALK_enviaPacote_1:
   \   00000058   0x7860             LDRB     R0,[R4, #+1]
   \   0000005A   0x....             LDR.N    R1,??DataTable4_4
   \   0000005C   0x1840             ADDS     R0,R0,R1
   \   0000005E   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000062   0xEA5F 0x2118      LSRS     R1,R8,#+8
   \   00000066   0x7101             STRB     R1,[R0, #+4]
    203            CCTALK_enviaPacoteSerial(tamanho+2);
   \   00000068   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006A   0x1CA8             ADDS     R0,R5,#+2
   \   0000006C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006E   0x.... 0x....      BL       CCTALK_enviaPacoteSerial
    204            
    205            while(CCTALK_bytesParaEnviar)
   \                     ??CCTALK_enviaPacote_2:
   \   00000072   0x....             LDR.N    R0,??DataTable4_2
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD003             BEQ.N    ??CCTALK_enviaPacote_3
    206              vTaskDelay(1);
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0x.... 0x....      BL       vTaskDelay
   \   00000080   0xE7F7             B.N      ??CCTALK_enviaPacote_2
    207            
    208            vTaskDelay(50);
   \                     ??CCTALK_enviaPacote_3:
   \   00000082   0x2032             MOVS     R0,#+50
   \   00000084   0x.... 0x....      BL       vTaskDelay
    209            
    210            unsigned short int timeout=2000;
   \   00000088   0xF44F 0x6AFA      MOV      R10,#+2000
    211            while(!CCTALK_recebidos && timeout--)
   \                     ??CCTALK_enviaPacote_4:
   \   0000008C   0x....             LDR.N    R0,??DataTable4_6
   \   0000008E   0x7800             LDRB     R0,[R0, #+0]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD109             BNE.N    ??CCTALK_enviaPacote_5
   \   00000094   0x4650             MOV      R0,R10
   \   00000096   0xF1B0 0x0A01      SUBS     R10,R0,#+1
   \   0000009A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD003             BEQ.N    ??CCTALK_enviaPacote_5
    212              vTaskDelay(1);
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x.... 0x....      BL       vTaskDelay
   \   000000A6   0xE7F1             B.N      ??CCTALK_enviaPacote_4
    213           
    214            if(CCTALK_recebidos)
   \                     ??CCTALK_enviaPacote_5:
   \   000000A8   0x....             LDR.N    R0,??DataTable4_6
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD05A             BEQ.N    ??CCTALK_enviaPacote_6
    215              if(CCTALK_bufferRxd[offset+0]==1 && CCTALK_bufferRxd[offset+3]==0){
   \   000000B0   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000B4   0x....             LDR.N    R0,??DataTable4_7
   \   000000B6   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000BA   0x2801             CMP      R0,#+1
   \   000000BC   0xD153             BNE.N    ??CCTALK_enviaPacote_6
   \   000000BE   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000C2   0x....             LDR.N    R0,??DataTable4_7
   \   000000C4   0xEB19 0x0000      ADDS     R0,R9,R0
   \   000000C8   0x78C0             LDRB     R0,[R0, #+3]
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD14B             BNE.N    ??CCTALK_enviaPacote_6
    216                
    217                unsigned short int crcRecebido = CCTALK_bufferRxd[CCTALK_recebidos-1]<<8 | CCTALK_bufferRxd[offset+2];
   \   000000CE   0x....             LDR.N    R0,??DataTable4_6
   \   000000D0   0x7800             LDRB     R0,[R0, #+0]
   \   000000D2   0x....             LDR.N    R1,??DataTable4_7
   \   000000D4   0x1840             ADDS     R0,R0,R1
   \   000000D6   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000000DA   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000DE   0x....             LDR.N    R1,??DataTable4_7
   \   000000E0   0xEB19 0x0101      ADDS     R1,R9,R1
   \   000000E4   0x7889             LDRB     R1,[R1, #+2]
   \   000000E6   0xEA51 0x2B00      ORRS     R11,R1,R0, LSL #+8
    218                
    219                recebido[0] = CCTALK_bufferRxd[offset+0];
   \   000000EA   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000EE   0x....             LDR.N    R0,??DataTable4_7
   \   000000F0   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000F4   0x7030             STRB     R0,[R6, #+0]
    220                recebido[1] = CCTALK_bufferRxd[offset+1];
   \   000000F6   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000FA   0x....             LDR.N    R0,??DataTable4_7
   \   000000FC   0xEB19 0x0000      ADDS     R0,R9,R0
   \   00000100   0x7840             LDRB     R0,[R0, #+1]
   \   00000102   0x7070             STRB     R0,[R6, #+1]
    221                recebido[2] = CCTALK_bufferRxd[offset+3];
   \   00000104   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000108   0x....             LDR.N    R0,??DataTable4_7
   \   0000010A   0xEB19 0x0000      ADDS     R0,R9,R0
   \   0000010E   0x78C0             LDRB     R0,[R0, #+3]
   \   00000110   0x70B0             STRB     R0,[R6, #+2]
    222                for(unsigned short int i=0;i<CCTALK_bufferRxd[1+offset];i++)
   \   00000112   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_enviaPacote_7:
   \   00000114   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000118   0x....             LDR.N    R1,??DataTable4_7
   \   0000011A   0xEB19 0x0101      ADDS     R1,R9,R1
   \   0000011E   0x7849             LDRB     R1,[R1, #+1]
   \   00000120   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000122   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000124   0x4288             CMP      R0,R1
   \   00000126   0xD20C             BCS.N    ??CCTALK_enviaPacote_8
    223                  recebido[3+i] = CCTALK_bufferRxd[offset+4+i];
   \   00000128   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000012C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000012E   0xEB10 0x0109      ADDS     R1,R0,R9
   \   00000132   0x....             LDR.N    R2,??DataTable4_7
   \   00000134   0x1889             ADDS     R1,R1,R2
   \   00000136   0x7909             LDRB     R1,[R1, #+4]
   \   00000138   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000013A   0x1982             ADDS     R2,R0,R6
   \   0000013C   0x70D1             STRB     R1,[R2, #+3]
   \   0000013E   0x1C40             ADDS     R0,R0,#+1
   \   00000140   0xE7E8             B.N      ??CCTALK_enviaPacote_7
    224                
    225                if(CCTALK_calculaCRC(recebido,0,CCTALK_bufferRxd[1+offset]+3)==crcRecebido)
   \                     ??CCTALK_enviaPacote_8:
   \   00000142   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000146   0x....             LDR.N    R0,??DataTable4_7
   \   00000148   0xEB19 0x0000      ADDS     R0,R9,R0
   \   0000014C   0x7840             LDRB     R0,[R0, #+1]
   \   0000014E   0x1CC2             ADDS     R2,R0,#+3
   \   00000150   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000152   0x2100             MOVS     R1,#+0
   \   00000154   0x0030             MOVS     R0,R6
   \   00000156   0x.... 0x....      BL       CCTALK_calculaCRC
   \   0000015A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000015E   0x4558             CMP      R0,R11
   \   00000160   0xD101             BNE.N    ??CCTALK_enviaPacote_6
    226                  return 255;           
   \   00000162   0x20FF             MOVS     R0,#+255
   \   00000164   0xE000             B.N      ??CCTALK_enviaPacote_9
    227              }
    228            
    229            return 0; 
   \                     ??CCTALK_enviaPacote_6:
   \   00000166   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_enviaPacote_9:
   \   00000168   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    230          }
    231          /***********************************************************************************
    232          *       Descrição       :       Lê a fila de eventos de pagamento
    233          *       Parametros      :       (unsigned char) endereço do dispositivo
    234          *                               (unsigned char*) quantidade de eventos
    235          *                               (unsigned short int*) eventos
    236          *       Retorno         :       (unsigned char) maior do que zero se conseguir
    237          *                                               realizar a leitura
    238          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    239          unsigned char CCTALK_leFilaEventos(unsigned char endereco,unsigned char*qtdEventos,
    240                                             unsigned short int *eventos){
   \                     CCTALK_leFilaEventos:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    241            unsigned char buffer[10];
    242            unsigned char resposta[20];
    243            unsigned short int recebidos;
    244            
    245            buffer[0] = endereco;
   \   0000000A   0xF88D 0x4004      STRB     R4,[SP, #+4]
    246            buffer[1] = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0005      STRB     R0,[SP, #+5]
    247            buffer[2] = (unsigned char)READ_BUFFERED_BILL_EV;
   \   00000014   0x209F             MOVS     R0,#+159
   \   00000016   0xF88D 0x0006      STRB     R0,[SP, #+6]
    248            
    249            if(CCTALK_enviaPacote(buffer,3,resposta,&recebidos)){
   \   0000001A   0xAB00             ADD      R3,SP,#+0
   \   0000001C   0xAA04             ADD      R2,SP,#+16
   \   0000001E   0x2103             MOVS     R1,#+3
   \   00000020   0xA801             ADD      R0,SP,#+4
   \   00000022   0x.... 0x....      BL       CCTALK_enviaPacote
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD019             BEQ.N    ??CCTALK_leFilaEventos_0
    250              
    251              *qtdEventos = resposta[3];
   \   0000002A   0xF89D 0x0013      LDRB     R0,[SP, #+19]
   \   0000002E   0x7028             STRB     R0,[R5, #+0]
    252              
    253              for(unsigned char i=0,j=0;i<5;i++,j+=2)      
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x2100             MOVS     R1,#+0
   \                     ??CCTALK_leFilaEventos_1:
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x2805             CMP      R0,#+5
   \   00000038   0xDA0F             BGE.N    ??CCTALK_leFilaEventos_2
    254                eventos[i] = resposta[5+j]<<8 | resposta[4+j];    
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0xAA04             ADD      R2,SP,#+16
   \   0000003E   0x188A             ADDS     R2,R1,R2
   \   00000040   0x7952             LDRB     R2,[R2, #+5]
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0xAB04             ADD      R3,SP,#+16
   \   00000046   0x18CB             ADDS     R3,R1,R3
   \   00000048   0x791B             LDRB     R3,[R3, #+4]
   \   0000004A   0xEA53 0x2202      ORRS     R2,R3,R2, LSL #+8
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0xF826 0x2010      STRH     R2,[R6, R0, LSL #+1]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0x1C89             ADDS     R1,R1,#+2
   \   00000058   0xE7EC             B.N      ??CCTALK_leFilaEventos_1
    255              
    256              return 255;
   \                     ??CCTALK_leFilaEventos_2:
   \   0000005A   0x20FF             MOVS     R0,#+255
   \   0000005C   0xE000             B.N      ??CCTALK_leFilaEventos_3
    257            }   
    258            
    259            return 0;                                     
   \                     ??CCTALK_leFilaEventos_0:
   \   0000005E   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_leFilaEventos_3:
   \   00000060   0xB00A             ADD      SP,SP,#+40
   \   00000062   0xBD70             POP      {R4-R6,PC}       ;; return
    260          }
    261          /***********************************************************************************
    262          *       Descrição       :       Puxa o dinheiro para dentro do cofre
    263          *       Parametros      :       (unsigned char) endereço do dispositivo
    264          *       Retorno         :       (unsigned char) maior do que zero se 
    265          *                                               obter sucesso na operação
    266          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    267          unsigned char CCTALK_rotacionaValidador(unsigned char endereco){
   \                     CCTALK_rotacionaValidador:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    268            unsigned char buffer[4];
    269            unsigned char resposta[5];
    270            unsigned short int recebidos;  
    271            
    272            buffer[0] = endereco;
   \   00000004   0xF88D 0x4000      STRB     R4,[SP, #+0]
    273            buffer[1] = 1;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    274            buffer[2] = (unsigned char)ROUTE_BILL;
   \   0000000E   0x209A             MOVS     R0,#+154
   \   00000010   0xF88D 0x0002      STRB     R0,[SP, #+2]
    275            buffer[3] = 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0003      STRB     R0,[SP, #+3]
    276            
    277            if(CCTALK_enviaPacote(buffer,4,resposta,&recebidos)){
   \   0000001A   0xAB01             ADD      R3,SP,#+4
   \   0000001C   0xAA02             ADD      R2,SP,#+8
   \   0000001E   0x2104             MOVS     R1,#+4
   \   00000020   0xA800             ADD      R0,SP,#+0
   \   00000022   0x.... 0x....      BL       CCTALK_enviaPacote
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD001             BEQ.N    ??CCTALK_rotacionaValidador_0
    278              
    279               return 255; 
   \   0000002A   0x20FF             MOVS     R0,#+255
   \   0000002C   0xE000             B.N      ??CCTALK_rotacionaValidador_1
    280            } 
    281            
    282            return 0x00;
   \                     ??CCTALK_rotacionaValidador_0:
   \   0000002E   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_rotacionaValidador_1:
   \   00000030   0xB004             ADD      SP,SP,#+16
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    283          }
    284          /***********************************************************************************
    285          *       Descrição       :       Escreve no registrador de habilitação (inhibit)
    286          *       Parametros      :       (unsigned char) endereço do dispositivo
    287          *                               (unsigned short int) dados
    288          *       Retorno         :       (unsigned char) maior do que zero se conseguir
    289          *                                               realizar a leitura
    290          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    291          unsigned char CCTALK_setBitsHabilitacaoCanal(unsigned char endereco,
    292                                                       unsigned short int mascara){
   \                     CCTALK_setBitsHabilitacaoCanal:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    293            unsigned char buffer[5];                                             
    294            unsigned char resposta[5];
    295            unsigned short int recebidos;
    296            
    297            buffer[0] = endereco;
   \   00000008   0xF88D 0x4000      STRB     R4,[SP, #+0]
    298            buffer[1] = 2;
   \   0000000C   0x2002             MOVS     R0,#+2
   \   0000000E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    299            buffer[2] = (unsigned char)SET_INHIBITS;
   \   00000012   0x20E7             MOVS     R0,#+231
   \   00000014   0xF88D 0x0002      STRB     R0,[SP, #+2]
    300            buffer[3] = mascara;
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0xF88D 0x0003      STRB     R0,[SP, #+3]
    301            buffer[4] = mascara>>8;
   \   0000001E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000020   0x0A28             LSRS     R0,R5,#+8
   \   00000022   0xF88D 0x0004      STRB     R0,[SP, #+4]
    302            
    303            if(CCTALK_enviaPacote(buffer,5,resposta,&recebidos)){
   \   00000026   0xAB02             ADD      R3,SP,#+8
   \   00000028   0xAA03             ADD      R2,SP,#+12
   \   0000002A   0x2105             MOVS     R1,#+5
   \   0000002C   0xA800             ADD      R0,SP,#+0
   \   0000002E   0x.... 0x....      BL       CCTALK_enviaPacote
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD001             BEQ.N    ??CCTALK_setBitsHabilitacaoCanal_0
    304              
    305                
    306              return 255;
   \   00000036   0x20FF             MOVS     R0,#+255
   \   00000038   0xE000             B.N      ??CCTALK_setBitsHabilitacaoCanal_1
    307            }           
    308            
    309            return 0x00;
   \                     ??CCTALK_setBitsHabilitacaoCanal_0:
   \   0000003A   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_setBitsHabilitacaoCanal_1:
   \   0000003C   0xB005             ADD      SP,SP,#+20
   \   0000003E   0xBD30             POP      {R4,R5,PC}       ;; return
    310          }
    311          /***********************************************************************************
    312          *       Descrição       :       Habilitação geral do aceitador
    313          *       Parametros      :       (unsigned char) endereço do dispositivo
    314          *                               (unsigned char) flag de habilitação geral
    315          *       Retorno         :       (unsigned char) maior do que zero
    316          *                                               se conseguir obter resposta
    317          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    318          unsigned char CCTALK_setFlagHabilitacaoGeral(unsigned char endereco,
    319                                                       unsigned char flagBloqueio){
   \                     CCTALK_setFlagHabilitacaoGeral:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    320            unsigned char buffer[4];
    321            unsigned char resposta[5];
    322            unsigned short int recebidos;
    323            
    324            buffer[0] = endereco;
   \   00000008   0xF88D 0x4000      STRB     R4,[SP, #+0]
    325            buffer[1] = 1;
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    326            buffer[2] = (unsigned char)SET_MASTER_INHIBIT;
   \   00000012   0x20E4             MOVS     R0,#+228
   \   00000014   0xF88D 0x0002      STRB     R0,[SP, #+2]
    327            buffer[3] = flagBloqueio;
   \   00000018   0xF88D 0x5003      STRB     R5,[SP, #+3]
    328            
    329            if(CCTALK_enviaPacote(buffer,4,resposta,&recebidos)){
   \   0000001C   0xAB01             ADD      R3,SP,#+4
   \   0000001E   0xAA02             ADD      R2,SP,#+8
   \   00000020   0x2104             MOVS     R1,#+4
   \   00000022   0xA800             ADD      R0,SP,#+0
   \   00000024   0x.... 0x....      BL       CCTALK_enviaPacote
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD001             BEQ.N    ??CCTALK_setFlagHabilitacaoGeral_0
    330              
    331              
    332              return 255; 
   \   0000002C   0x20FF             MOVS     R0,#+255
   \   0000002E   0xE000             B.N      ??CCTALK_setFlagHabilitacaoGeral_1
    333            }
    334                                                         
    335            return 0;                                              
   \                     ??CCTALK_setFlagHabilitacaoGeral_0:
   \   00000030   0x2000             MOVS     R0,#+0
   \                     ??CCTALK_setFlagHabilitacaoGeral_1:
   \   00000032   0xB005             ADD      SP,SP,#+20
   \   00000034   0xBD30             POP      {R4,R5,PC}       ;; return
    336          }
    337          /***********************************************************************************
    338          *       Descrição       :       Converte a enumeração das mensagens
    339          *                               do noteiro para string
    340          *       Parametros      :       (CCTALK_BILL_EVENTS) mensagem
    341          *       Retorno         :       nenhum
    342          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    343          char* CCTAK_msg_to_string(CCTALK_BILL_EVENTS msg){        
   \                     CCTAK_msg_to_string:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB096             SUB      SP,SP,#+88
   \   00000004   0x0004             MOVS     R4,R0
    344            const char *msg_bv20[]={
    345              "BILL_VALIDATED_OK\n\r",
    346              "BILL_VALIDATED_OK_AND_SCROW\n\r",
    347              "MASTER_INHIBIT_ACTIVE\n\r",
    348              "BILL_RETURNED_FROM_ESCROW\n\r",
    349              "INVALID_BILL_VALIDATION\n\r",
    350              "INVALID_BILL_TRANSPORTATION\n\r",
    351              "INHIBIT_BILL_SERIAL\n\r",
    352              "INHIBIT_BILL_DIPSWITCH\n\r",
    353              "BILL_JAMMED_IN_TRANSPORT\n\r",
    354              "BILL_JAMMED_IN_BACKWARDS\n\r",
    355              "BILL_TAMPER\n\r",
    356              "STACKER_OK\n\r",
    357              "STACKER_INVERTED\n\r",
    358              "STACKER_FAULTY\n\r",
    359              "STACKER_FULL\n\r",
    360              "STACKER_JAMMED\n\r",
    361              "BILL_JAMMED_IN_TRANSPORT_SAFE\n\r",
    362              "OPTO_FRAUD_DETECTED\n\r",
    363              "STRING_FRAUD_DETECTED\n\r",
    364              "ANTI_STRING_MECHANISM_FAULTY\n\r",
    365              "BARCODE_DETECTED\n\r",
    366              "UNKNOWN_BILL_TYPE_STACKED\n\r"  
    367            };
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x....             LDR.N    R1,??DataTable4_10
   \   0000000A   0x2258             MOVS     R2,#+88
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
    368            
    369            return (char*)msg_bv20[(unsigned char)msg];
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000018   0xB016             ADD      SP,SP,#+88
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    370          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     crc_ccitt_lockup

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4000C008         DC32     0x4000c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     CCTALK_bytesParaEnviar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     CCTALK_bytesEnviados

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     CCTALK_bufferTxd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x4000C000         DC32     0x4000c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     CCTALK_recebidos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     CCTALK_bufferRxd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x4000C014         DC32     0x4000c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0xE000E280         DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant {&"BILL_VALIDATED_OK\\n\\r", &"BILL_V`

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_VALIDATED_OK\\n\\r">`:
   \   00000000   0x42 0x49          DC8 "BILL_VALIDATED_OK\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x56    
   \              0x41 0x4C    
   \              0x49 0x44    
   \              0x41 0x54    
   \              0x45 0x44    
   \              0x5F 0x4F    
   \              0x4B 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_VALIDATED_OK_AND...">`:
   \   00000000   0x42 0x49          DC8 "BILL_VALIDATED_OK_AND_SCROW\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x56    
   \              0x41 0x4C    
   \              0x49 0x44    
   \              0x41 0x54    
   \              0x45 0x44    
   \              0x5F 0x4F    
   \              0x4B 0x5F    
   \              0x41 0x4E    
   \              0x44 0x5F    
   \              0x53 0x43    
   \              0x52 0x4F    
   \              0x57 0x0A    
   \              0x0D 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MASTER_INHIBIT_ACTIVE\\n\\r">`:
   \   00000000   0x4D 0x41          DC8 "MASTER_INHIBIT_ACTIVE\012\015"
   \              0x53 0x54    
   \              0x45 0x52    
   \              0x5F 0x49    
   \              0x4E 0x48    
   \              0x49 0x42    
   \              0x49 0x54    
   \              0x5F 0x41    
   \              0x43 0x54    
   \              0x49 0x56    
   \              0x45 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_RETURNED_FROM_ES...">`:
   \   00000000   0x42 0x49          DC8 "BILL_RETURNED_FROM_ESCROW\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x52    
   \              0x45 0x54    
   \              0x55 0x52    
   \              0x4E 0x45    
   \              0x44 0x5F    
   \              0x46 0x52    
   \              0x4F 0x4D    
   \              0x5F 0x45    
   \              0x53 0x43    
   \              0x52 0x4F    
   \              0x57 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "INVALID_BILL_VALIDATI...">`:
   \   00000000   0x49 0x4E          DC8 "INVALID_BILL_VALIDATION\012\015"
   \              0x56 0x41    
   \              0x4C 0x49    
   \              0x44 0x5F    
   \              0x42 0x49    
   \              0x4C 0x4C    
   \              0x5F 0x56    
   \              0x41 0x4C    
   \              0x49 0x44    
   \              0x41 0x54    
   \              0x49 0x4F    
   \              0x4E 0x0A    
   \              0x0D 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "INVALID_BILL_TRANSPOR...">`:
   \   00000000   0x49 0x4E          DC8 "INVALID_BILL_TRANSPORTATION\012\015"
   \              0x56 0x41    
   \              0x4C 0x49    
   \              0x44 0x5F    
   \              0x42 0x49    
   \              0x4C 0x4C    
   \              0x5F 0x54    
   \              0x52 0x41    
   \              0x4E 0x53    
   \              0x50 0x4F    
   \              0x52 0x54    
   \              0x41 0x54    
   \              0x49 0x4F    
   \              0x4E 0x0A    
   \              0x0D 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "INHIBIT_BILL_SERIAL\\n\\r">`:
   \   00000000   0x49 0x4E          DC8 "INHIBIT_BILL_SERIAL\012\015"
   \              0x48 0x49    
   \              0x42 0x49    
   \              0x54 0x5F    
   \              0x42 0x49    
   \              0x4C 0x4C    
   \              0x5F 0x53    
   \              0x45 0x52    
   \              0x49 0x41    
   \              0x4C 0x0A    
   \              0x0D 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "INHIBIT_BILL_DIPSWITCH\\n\\r">`:
   \   00000000   0x49 0x4E          DC8 "INHIBIT_BILL_DIPSWITCH\012\015"
   \              0x48 0x49    
   \              0x42 0x49    
   \              0x54 0x5F    
   \              0x42 0x49    
   \              0x4C 0x4C    
   \              0x5F 0x44    
   \              0x49 0x50    
   \              0x53 0x57    
   \              0x49 0x54    
   \              0x43 0x48    
   \              0x0A 0x0D    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_JAMMED_IN_TRANSP...">`:
   \   00000000   0x42 0x49          DC8 "BILL_JAMMED_IN_TRANSPORT\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x4A    
   \              0x41 0x4D    
   \              0x4D 0x45    
   \              0x44 0x5F    
   \              0x49 0x4E    
   \              0x5F 0x54    
   \              0x52 0x41    
   \              0x4E 0x53    
   \              0x50 0x4F    
   \              0x52 0x54    
   \              0x0A 0x0D    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_JAMMED_IN_BACKWA...">`:
   \   00000000   0x42 0x49          DC8 "BILL_JAMMED_IN_BACKWARDS\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x4A    
   \              0x41 0x4D    
   \              0x4D 0x45    
   \              0x44 0x5F    
   \              0x49 0x4E    
   \              0x5F 0x42    
   \              0x41 0x43    
   \              0x4B 0x57    
   \              0x41 0x52    
   \              0x44 0x53    
   \              0x0A 0x0D    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_TAMPER\\n\\r">`:
   \   00000000   0x42 0x49          DC8 "BILL_TAMPER\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x54    
   \              0x41 0x4D    
   \              0x50 0x45    
   \              0x52 0x0A    
   \              0x0D 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "STACKER_OK\\n\\r">`:
   \   00000000   0x53 0x54          DC8 "STACKER_OK\012\015"
   \              0x41 0x43    
   \              0x4B 0x45    
   \              0x52 0x5F    
   \              0x4F 0x4B    
   \              0x0A 0x0D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "STACKER_INVERTED\\n\\r">`:
   \   00000000   0x53 0x54          DC8 "STACKER_INVERTED\012\015"
   \              0x41 0x43    
   \              0x4B 0x45    
   \              0x52 0x5F    
   \              0x49 0x4E    
   \              0x56 0x45    
   \              0x52 0x54    
   \              0x45 0x44    
   \              0x0A 0x0D    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "STACKER_FAULTY\\n\\r">`:
   \   00000000   0x53 0x54          DC8 "STACKER_FAULTY\012\015"
   \              0x41 0x43    
   \              0x4B 0x45    
   \              0x52 0x5F    
   \              0x46 0x41    
   \              0x55 0x4C    
   \              0x54 0x59    
   \              0x0A 0x0D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "STACKER_FULL\\n\\r">`:
   \   00000000   0x53 0x54          DC8 "STACKER_FULL\012\015"
   \              0x41 0x43    
   \              0x4B 0x45    
   \              0x52 0x5F    
   \              0x46 0x55    
   \              0x4C 0x4C    
   \              0x0A 0x0D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "STACKER_JAMMED\\n\\r">`:
   \   00000000   0x53 0x54          DC8 "STACKER_JAMMED\012\015"
   \              0x41 0x43    
   \              0x4B 0x45    
   \              0x52 0x5F    
   \              0x4A 0x41    
   \              0x4D 0x4D    
   \              0x45 0x44    
   \              0x0A 0x0D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "BILL_JAMMED_IN_TRANSP...">_1`:
   \   00000000   0x42 0x49          DC8 "BILL_JAMMED_IN_TRANSPORT_SAFE\012\015"
   \              0x4C 0x4C    
   \              0x5F 0x4A    
   \              0x41 0x4D    
   \              0x4D 0x45    
   \              0x44 0x5F    
   \              0x49 0x4E    
   \              0x5F 0x54    
   \              0x52 0x41    
   \              0x4E 0x53    
   \              0x50 0x4F    
   \              0x52 0x54    
   \              0x5F 0x53    
   \              0x41 0x46    
   \              0x45 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "OPTO_FRAUD_DETECTED\\n\\r">`:
   \   00000000   0x4F 0x50          DC8 "OPTO_FRAUD_DETECTED\012\015"
   \              0x54 0x4F    
   \              0x5F 0x46    
   \              0x52 0x41    
   \              0x55 0x44    
   \              0x5F 0x44    
   \              0x45 0x54    
   \              0x45 0x43    
   \              0x54 0x45    
   \              0x44 0x0A    
   \              0x0D 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "STRING_FRAUD_DETECTED\\n\\r">`:
   \   00000000   0x53 0x54          DC8 "STRING_FRAUD_DETECTED\012\015"
   \              0x52 0x49    
   \              0x4E 0x47    
   \              0x5F 0x46    
   \              0x52 0x41    
   \              0x55 0x44    
   \              0x5F 0x44    
   \              0x45 0x54    
   \              0x45 0x43    
   \              0x54 0x45    
   \              0x44 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ANTI_STRING_MECHANISM...">`:
   \   00000000   0x41 0x4E          DC8 "ANTI_STRING_MECHANISM_FAULTY\012\015"
   \              0x54 0x49    
   \              0x5F 0x53    
   \              0x54 0x52    
   \              0x49 0x4E    
   \              0x47 0x5F    
   \              0x4D 0x45    
   \              0x43 0x48    
   \              0x41 0x4E    
   \              0x49 0x53    
   \              0x4D 0x5F    
   \              0x46 0x41    
   \              0x55 0x4C    
   \              0x54 0x59    
   \              0x0A 0x0D    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "BARCODE_DETECTED\\n\\r">`:
   \   00000000   0x42 0x41          DC8 "BARCODE_DETECTED\012\015"
   \              0x52 0x43    
   \              0x4F 0x44    
   \              0x45 0x5F    
   \              0x44 0x45    
   \              0x54 0x45    
   \              0x43 0x54    
   \              0x45 0x44    
   \              0x0A 0x0D    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "UNKNOWN_BILL_TYPE_STA...">`:
   \   00000000   0x55 0x4E          DC8 "UNKNOWN_BILL_TYPE_STACKED\012\015"
   \              0x4B 0x4E    
   \              0x4F 0x57    
   \              0x4E 0x5F    
   \              0x42 0x49    
   \              0x4C 0x4C    
   \              0x5F 0x54    
   \              0x59 0x50    
   \              0x45 0x5F    
   \              0x53 0x54    
   \              0x41 0x43    
   \              0x4B 0x45    
   \              0x44 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {&"BILL_VALIDATED_OK\\n\\r", &"BILL_V`:
   \   00000000   0x........         DC32 `?<Constant "BILL_VALIDATED_OK\\n\\r">`
   \   00000004   0x........         DC32 `?<Constant "BILL_VALIDATED_OK_AND...">`
   \   00000008   0x........         DC32 `?<Constant "MASTER_INHIBIT_ACTIVE\\n\\r">`
   \   0000000C   0x........         DC32 `?<Constant "BILL_RETURNED_FROM_ES...">`
   \   00000010   0x........         DC32 `?<Constant "INVALID_BILL_VALIDATI...">`
   \   00000014   0x........         DC32 `?<Constant "INVALID_BILL_TRANSPOR...">`
   \   00000018   0x........         DC32 `?<Constant "INHIBIT_BILL_SERIAL\\n\\r">`
   \   0000001C   0x........         DC32 `?<Constant "INHIBIT_BILL_DIPSWITCH\\n\\r">`
   \   00000020   0x........         DC32 `?<Constant "BILL_JAMMED_IN_TRANSP...">`
   \   00000024   0x........         DC32 `?<Constant "BILL_JAMMED_IN_BACKWA...">`
   \   00000028   0x........         DC32 `?<Constant "BILL_TAMPER\\n\\r">`
   \   0000002C   0x........         DC32 `?<Constant "STACKER_OK\\n\\r">`
   \   00000030   0x........         DC32 `?<Constant "STACKER_INVERTED\\n\\r">`
   \   00000034   0x........         DC32 `?<Constant "STACKER_FAULTY\\n\\r">`
   \   00000038   0x........         DC32 `?<Constant "STACKER_FULL\\n\\r">`
   \   0000003C   0x........         DC32 `?<Constant "STACKER_JAMMED\\n\\r">`
   \   00000040   0x........         DC32 `?<Constant "BILL_JAMMED_IN_TRANSP...">_1`
   \   00000044   0x........         DC32 `?<Constant "OPTO_FRAUD_DETECTED\\n\\r">`
   \   00000048   0x........         DC32 `?<Constant "STRING_FRAUD_DETECTED\\n\\r">`
   \   0000004C   0x........         DC32 `?<Constant "ANTI_STRING_MECHANISM...">`
   \   00000050   0x........         DC32 `?<Constant "BARCODE_DETECTED\\n\\r">`
   \   00000054   0x........         DC32 `?<Constant "UNKNOWN_BILL_TYPE_STA...">`
    371          /***********************************************************************************
    372          *       Fim do arquivo
    373          ***********************************************************************************/
    374          
    375          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      96   CCTAK_msg_to_string
        96   -> __aeabi_memcpy4
      12   CCTALK_calculaCRC
      40   CCTALK_enviaPacote
        40   -> CCTALK_calculaCRC
        40   -> CCTALK_enviaPacoteSerial
        40   -> vTaskDelay
       0   CCTALK_enviaPacoteSerial
       8   CCTALK_ini
         8   -> UART_init
       0   CCTALK_irqUart
      56   CCTALK_leFilaEventos
        56   -> CCTALK_enviaPacote
      24   CCTALK_rotacionaValidador
        24   -> CCTALK_enviaPacote
      32   CCTALK_setBitsHabilitacaoCanal
        32   -> CCTALK_enviaPacote
      32   CCTALK_setFlagHabilitacaoGeral
        32   -> CCTALK_enviaPacote
       0   CCTALK_tick


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  ?<Constant "ANTI_STRING_MECHANISM...">
      20  ?<Constant "BARCODE_DETECTED\n\r">
      28  ?<Constant "BILL_JAMMED_IN_BACKWA...">
      28  ?<Constant "BILL_JAMMED_IN_TRANSP...">
      32  ?<Constant "BILL_JAMMED_IN_TRANSP...">_1
      28  ?<Constant "BILL_RETURNED_FROM_ES...">
      16  ?<Constant "BILL_TAMPER\n\r">
      20  ?<Constant "BILL_VALIDATED_OK\n\r">
      32  ?<Constant "BILL_VALIDATED_OK_AND...">
      28  ?<Constant "INHIBIT_BILL_DIPSWITCH\n\r">
      24  ?<Constant "INHIBIT_BILL_SERIAL\n\r">
      32  ?<Constant "INVALID_BILL_TRANSPOR...">
      28  ?<Constant "INVALID_BILL_VALIDATI...">
      24  ?<Constant "MASTER_INHIBIT_ACTIVE\n\r">
      24  ?<Constant "OPTO_FRAUD_DETECTED\n\r">
      20  ?<Constant "STACKER_FAULTY\n\r">
      16  ?<Constant "STACKER_FULL\n\r">
      20  ?<Constant "STACKER_INVERTED\n\r">
      20  ?<Constant "STACKER_JAMMED\n\r">
      16  ?<Constant "STACKER_OK\n\r">
      24  ?<Constant "STRING_FRAUD_DETECTED\n\r">
      28  ?<Constant "UNKNOWN_BILL_TYPE_STA...">
      88  ?<Constant {&"BILL_VALIDATED_OK\n\r", &"BILL_V
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      28  CCTAK_msg_to_string
      64  CCTALK_bufferRxd
      64  CCTALK_bufferTxd
       1  CCTALK_bytesEnviados
       1  CCTALK_bytesParaEnviar
      54  CCTALK_calculaCRC
     364  CCTALK_enviaPacote
      30  CCTALK_enviaPacoteSerial
      22  CCTALK_ini
     132  CCTALK_irqUart
     100  CCTALK_leFilaEventos
       1  CCTALK_recebidos
      52  CCTALK_rotacionaValidador
      64  CCTALK_setBitsHabilitacaoCanal
      54  CCTALK_setFlagHabilitacaoGeral
       2  CCTALK_tick
       1  U0RBRTHR
       4  _A_CLRPEND0
       4  _A_U0FCR
       1  _A_U0LSR
     512  crc_ccitt_lockup

 
 131 bytes in section .bss
 512 bytes in section .data
  10 bytes in section .noinit (abs)
 628 bytes in section .rodata
 946 bytes in section .text
 
 946 bytes of CODE  memory
 628 bytes of CONST memory
 643 bytes of DATA  memory (+ 10 bytes shared)

Errors: none
Warnings: none

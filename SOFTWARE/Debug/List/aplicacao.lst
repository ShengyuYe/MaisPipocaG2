###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      09/Sep/2017  15:56:26 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\aplicaca #
#                    o.c                                                      #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\aplicaca #
#                    o.c -lC C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List #
#                    \ -lA C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\  #
#                    -o C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\      #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\aplicac #
#                    ao.lst                                                   #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\aplicaca #
#                    o.o                                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Aplicacao\aplicacao.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  aplicacao.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :  22/04/2017
     21          |
     22          |       Revisões           :  001
     23          |
     24          |                             (22/04/2017) criado módulo de controle da preparação (Marcos)
     25          |                             (25/05/2017) alterado para criar o flag que habilita o 
     26          |                                          uso do troco ou não
     27          |                             (23/07/2017) Alterado para só rodar o bloco de verificação
     28          |                                          do CCTALK quando ele estiver habilitado
     29          |                                          nos acessórios
     30          |
     31          | __________________________________________________________________________________
     32          */
     33          
     34          /***********************************************************************************
     35          *       Includes
     36          ***********************************************************************************/
     37          #include <stdio.h>
     38          #include <stdlib.h>
     39          #include <string.h>
     40          #include "aplicacao.h"
     41          #include "..\includes.h"
     42          
     43          /***********************************************************************************
     44          *       Constantes
     45          ***********************************************************************************/
     46          #define TEMPO_DESUMIDIFICADOR                   1000*60*30
     47          #define TEMPO_MENSAGEM_LINHA_INFERIOR           10000
     48          
     49          #define _DEBUG_PAGAMENTOS_
     50          
     51          /***********************************************************************************
     52          *       Enumerações
     53          ***********************************************************************************/
     54          
     55          
     56          /***********************************************************************************
     57          *       Variaveis 
     58          ***********************************************************************************/

   \                                 In section .bss, align 4
     59          xSemaphoreHandle  APLICACAO_sem_LCD;
   \                     APLICACAO_sem_LCD:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     60          unsigned char APLICACAO_tubos[16]={0};
   \                     APLICACAO_tubos:
   \   00000000                      DS8 16

   \                                 In section .data, align 4
     61          unsigned int APLICACAO_tempo_desumidificador=30*1000;//TEMPO_DESUMIDIFICADOR;
   \                     APLICACAO_tempo_desumidificador:
   \   00000000   0x00007530         DC32 30000

   \                                 In section .bss, align 4
     62          unsigned int APLICACAO_tempo_mensagem=0;
   \                     APLICACAO_tempo_mensagem:
   \   00000000                      DS8 4
     63          /***********************************************************************************
     64          *       Funções
     65          ***********************************************************************************/
     66          void APLICACAO_ini(void);
     67          void APLICACAO_tela_descanso(void);
     68          void APLICACAO_exibe_valor(unsigned char idioma);
     69          unsigned int APLICACACAO_verifica_troco(void);
     70          void APLICACAO_verifica_preparacao(unsigned int valor_pipoca,unsigned char idioma,unsigned char troco);
     71          void APLICACAO_menu_falha(void);
     72          unsigned char APLICACAO_devolve_troco(void);
     73          unsigned char APLICACAO_verifica_post(void);
     74          void APLICACAO_verifica_disponibilidade_troco(unsigned char idioma);
     75          void APLICACAO_verifica_MDB(void);
     76          void APLICACAO_verifica_preparacao(unsigned int valor_pipoca,unsigned char idioma,
     77                                             unsigned char troco);
     78          void APLICACAO_verifica_cctalk(void);
     79          void APLICACAO_verificao_ciclica(void);
     80          void APLICACAO_loop_falha_ciclica(void);
     81          void APLICACAO_ciclo_desumidificador(unsigned char flag);
     82          
     83          /***********************************************************************************
     84          *       Implementação das funções
     85          ***********************************************************************************/
     86          
     87          /***********************************************************************************
     88          *       Descrição       :       Função principal da interface de usuário
     89          *       Parametros      :       nenhum
     90          *       Retorno         :       nenhum
     91          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     92          void APLICACAO_main(void*pPar){
   \                     APLICACAO_main:
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     93            eTECLA tecla;
     94            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000004   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000008   0x0006             MOVS     R6,R0
     95            unsigned int valorPipoca;
     96            unsigned char modo_gratis;
     97            unsigned char modo_troco;
     98            unsigned char flag_desumidificador;
     99            
    100            APLICACAO_ini();
   \   0000000A   0x.... 0x....      BL       APLICACAO_ini
    101            
    102            PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valorPipoca);
   \   0000000E   0xA901             ADD      R1,SP,#+4
   \   00000010   0x2003             MOVS     R0,#+3
   \   00000012   0x.... 0x....      BL       PARAMETROS_le
    103            PARAMETROS_le(ADR_FLAG_FREE,(void*)&modo_gratis);
   \   00000016   0xF10D 0x0101      ADD      R1,SP,#+1
   \   0000001A   0x2020             MOVS     R0,#+32
   \   0000001C   0x.... 0x....      BL       PARAMETROS_le
    104            PARAMETROS_le(ADR_FLAG_TROCO,(void*)&modo_troco);
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0x2022             MOVS     R0,#+34
   \   00000024   0x.... 0x....      BL       PARAMETROS_le
    105            PARAMETROS_le(ADR_FLAG_DESUMIDIFICADOR,(void*)&flag_desumidificador);
   \   00000028   0xF10D 0x0102      ADD      R1,SP,#+2
   \   0000002C   0x2026             MOVS     R0,#+38
   \   0000002E   0x.... 0x....      BL       PARAMETROS_le
    106            
    107          #ifndef _DEBUG_PAGAMENTOS_
    108            vTaskDelay(3000);
    109            PREPARACAO_limpeza_inicial(idioma);
    110          #endif
    111            
    112            
    113            STRING_write_to_external(CLEAR_DISPLAY,NULL,NULL);
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       STRING_write_to_external
    114            
    115            BOARD_liga_placa_instrucao(1); // Liga a placa de instrução  
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    116            
    117            BOARD_setter_contador_propaganda(0); // Deixa a propaganda agendada para o primeiro ciclo
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       BOARD_setter_contador_propaganda
    118            
    119          #ifndef _DEBUG_PAGAMENTOS_  
    120            APLICACAO_verifica_post();
    121          #endif
    122              
    123            PAGAMENTOS_subtrai_valores(PAGAMENTOS_get_valor_acumulado());
   \   00000048   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000004C   0x.... 0x....      BL       PAGAMENTOS_subtrai_valores
    124            PAGAMENTOS_set_bloqueio(0);
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    125            
    126            for(;;){
    127              
    128              PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valorPipoca);
   \                     ??APLICACAO_main_0:
   \   00000056   0xA901             ADD      R1,SP,#+4
   \   00000058   0x2003             MOVS     R0,#+3
   \   0000005A   0x.... 0x....      BL       PARAMETROS_le
    129              PARAMETROS_le(ADR_FLAG_FREE,(void*)&modo_gratis);
   \   0000005E   0xF10D 0x0101      ADD      R1,SP,#+1
   \   00000062   0x2020             MOVS     R0,#+32
   \   00000064   0x.... 0x....      BL       PARAMETROS_le
    130              PARAMETROS_le(ADR_FLAG_TROCO,(void*)&modo_troco);    
   \   00000068   0xA900             ADD      R1,SP,#+0
   \   0000006A   0x2022             MOVS     R0,#+34
   \   0000006C   0x.... 0x....      BL       PARAMETROS_le
    131              
    132              tecla = TECLADO_getch();
   \   00000070   0x.... 0x....      BL       TECLADO_getch
   \   00000074   0x0005             MOVS     R5,R0
    133              switch(tecla){
   \   00000076   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000078   0x2D01             CMP      R5,#+1
   \   0000007A   0xD030             BEQ.N    ??APLICACAO_main_1
   \   0000007C   0xD338             BCC.N    ??APLICACAO_main_2
   \   0000007E   0x2D03             CMP      R5,#+3
   \   00000080   0xD005             BEQ.N    ??APLICACAO_main_3
   \   00000082   0xD303             BCC.N    ??APLICACAO_main_4
   \   00000084   0x2D05             CMP      R5,#+5
   \   00000086   0xD02B             BEQ.N    ??APLICACAO_main_5
   \   00000088   0xD302             BCC.N    ??APLICACAO_main_6
   \   0000008A   0xE031             B.N      ??APLICACAO_main_2
    134                case TECLA_INC:
    135                     //SMDB_cashless_vend(100,1);
    136                     break;
   \                     ??APLICACAO_main_4:
   \   0000008C   0xE030             B.N      ??APLICACAO_main_2
    137                case TECLA_DEC:
    138                     break;
   \                     ??APLICACAO_main_3:
   \   0000008E   0xE02F             B.N      ??APLICACAO_main_2
    139                case TECLA_ENTER:
    140                     APLIACAO_wait_lcd();
   \                     ??APLICACAO_main_6:
   \   00000090   0x.... 0x....      BL       APLIACAO_wait_lcd
    141                       BOARD_liga_placa_instrucao(0);
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    142                       MCFG_entry();                     
   \   0000009A   0x.... 0x....      BL       MCFG_entry
    143                       BOARD_liga_placa_instrucao(1);
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    144                       idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   000000A4   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   000000A8   0x0006             MOVS     R6,R0
    145                       
    146                       PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valorPipoca);
   \   000000AA   0xA901             ADD      R1,SP,#+4
   \   000000AC   0x2003             MOVS     R0,#+3
   \   000000AE   0x.... 0x....      BL       PARAMETROS_le
    147                       PARAMETROS_le(ADR_FLAG_FREE,(void*)&modo_gratis);
   \   000000B2   0xF10D 0x0101      ADD      R1,SP,#+1
   \   000000B6   0x2020             MOVS     R0,#+32
   \   000000B8   0x.... 0x....      BL       PARAMETROS_le
    148                       PARAMETROS_le(ADR_FLAG_TROCO,(void*)&modo_troco);
   \   000000BC   0xA900             ADD      R1,SP,#+0
   \   000000BE   0x2022             MOVS     R0,#+34
   \   000000C0   0x.... 0x....      BL       PARAMETROS_le
    149                       
    150                       APLICACAO_tempo_desumidificador=TEMPO_DESUMIDIFICADOR;
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable14_1  ;; 0x1b7740
   \   000000CC   0x6001             STR      R1,[R0, #+0]
    151                       
    152                     APLICACAO_release_lcd();  
   \   000000CE   0x.... 0x....      BL       APLICACAO_release_lcd
    153                     
    154                     STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
   \   000000D2   0x2200             MOVS     R2,#+0
   \   000000D4   0x2100             MOVS     R1,#+0
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      BL       STRING_write_to_internal
    155                     break;
   \   000000DC   0xE008             B.N      ??APLICACAO_main_2
    156                case TECLA_ESC:
    157                     break;
   \                     ??APLICACAO_main_1:
   \   000000DE   0xE007             B.N      ??APLICACAO_main_2
    158                case TECLA_GRATIS:
    159                     if(modo_gratis)
   \                     ??APLICACAO_main_5:
   \   000000E0   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   000000E4   0x2800             CMP      R0,#+0
   \   000000E6   0xD003             BEQ.N    ??APLICACAO_main_7
    160                       PAGAMENTOS_adiciona_valores(valorPipoca);
   \   000000E8   0x9801             LDR      R0,[SP, #+4]
   \   000000EA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000EC   0x.... 0x....      BL       PAGAMENTOS_adiciona_valores
    161                     break;      
    162              }
    163              
    164              if(modo_gratis)
   \                     ??APLICACAO_main_7:
   \                     ??APLICACAO_main_2:
   \   000000F0   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   000000F4   0x2800             CMP      R0,#+0
   \   000000F6   0xD00E             BEQ.N    ??APLICACAO_main_8
    165                STRING_write_to_external(NO_CLEAR,(void*)STRING_mensagem_modo_gratis[idioma][0],(void*)STRING_mensagem_modo_gratis[idioma][1]);
   \   000000F8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable14_2
   \   000000FE   0xEB10 0x00C6      ADDS     R0,R0,R6, LSL #+3
   \   00000102   0x6842             LDR      R2,[R0, #+4]
   \   00000104   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable14_2
   \   0000010A   0xF850 0x1036      LDR      R1,[R0, R6, LSL #+3]
   \   0000010E   0x2001             MOVS     R0,#+1
   \   00000110   0x.... 0x....      BL       STRING_write_to_external
   \   00000114   0xE00F             B.N      ??APLICACAO_main_9
    166              else{
    167                APLICACAO_exibe_valor(idioma);     
   \                     ??APLICACAO_main_8:
   \   00000116   0x0030             MOVS     R0,R6
   \   00000118   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011A   0x.... 0x....      BL       APLICACAO_exibe_valor
    168                if(modo_troco)
   \   0000011E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000122   0x2800             CMP      R0,#+0
   \   00000124   0xD003             BEQ.N    ??APLICACAO_main_10
    169                  APLICACAO_verifica_disponibilidade_troco(idioma);
   \   00000126   0x0030             MOVS     R0,R6
   \   00000128   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012A   0x.... 0x....      BL       APLICACAO_verifica_disponibilidade_troco
    170                // Verifica a conectividade dos
    171                // meios de pagamento seriais
    172                APLICACAO_verifica_MDB();
   \                     ??APLICACAO_main_10:
   \   0000012E   0x.... 0x....      BL       APLICACAO_verifica_MDB
    173                APLICACAO_verifica_cctalk();
   \   00000132   0x.... 0x....      BL       APLICACAO_verifica_cctalk
    174              }
    175              
    176              APLICACAO_verifica_preparacao(valorPipoca,idioma,modo_troco);             
   \                     ??APLICACAO_main_9:
   \   00000136   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   0000013A   0x0031             MOVS     R1,R6
   \   0000013C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013E   0x9801             LDR      R0,[SP, #+4]
   \   00000140   0x.... 0x....      BL       APLICACAO_verifica_preparacao
    177              BOARD_setter_led_instrucao(LED_INSIRA_DINHEIRO,PISCANDO); // Ativa o modo inserir dinheiro
   \   00000144   0x2102             MOVS     R1,#+2
   \   00000146   0x2002             MOVS     R0,#+2
   \   00000148   0x.... 0x....      BL       BOARD_setter_led_instrucao
    178              APLICACAO_tela_descanso();    
   \   0000014C   0x.... 0x....      BL       APLICACAO_tela_descanso
    179          #ifndef _DEBUG_PAGAMENTOS_    
    180              APLICACAO_verificao_ciclica();
    181          #endif
    182              vTaskDelay(50);
   \   00000150   0x2032             MOVS     R0,#+50
   \   00000152   0x.... 0x....      BL       vTaskDelay
    183              APLICACAO_ciclo_desumidificador(flag_desumidificador);
   \   00000156   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   0000015A   0x.... 0x....      BL       APLICACAO_ciclo_desumidificador
   \   0000015E   0xE77A             B.N      ??APLICACAO_main_0
    184            }   
    185          }
    186          /***********************************************************************************
    187          *       Descrição       :       Inicialização do ódulo
    188          *       Parametros      :       nenhum
    189          *       Retorno         :       nenhum
    190          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    191          void APLICACAO_ini(void){
   \                     APLICACAO_ini:
   \   00000000   0xB510             PUSH     {R4,LR}
    192            eIDIOMA idioma  = BRASIL;
   \   00000002   0x2400             MOVS     R4,#+0
    193                 
    194            HD44780_init(LCD_DISPLAY_8X5 | LCD_2_LINHAS,
    195                         LCD_DISPLAY_LIGADO | LCD_CURSOR_DESLIGADO | LCD_CURSOR_FIXO);     
   \   00000004   0x2104             MOVS     R1,#+4
   \   00000006   0x2008             MOVS     R0,#+8
   \   00000008   0x.... 0x....      BL       HD44780_init
    196            
    197            HD44780_2_init(LCD_DISPLAY_8X5 | LCD_2_LINHAS,
    198                           LCD_DISPLAY_LIGADO | LCD_CURSOR_DESLIGADO | LCD_CURSOR_FIXO);       
   \   0000000C   0x2104             MOVS     R1,#+4
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0x.... 0x....      BL       HD44780_2_init
    199            
    200            STRING_write_to_internal(CLEAR_DISPLAY,
    201                                     (char*)STRING_splash[idioma][0],
    202                                     (char*)STRING_splash[idioma][1]);      
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable14_3
   \   0000001A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001E   0x6842             LDR      R2,[R0, #+4]
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable14_3
   \   00000026   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       STRING_write_to_internal
    203            
    204            STRING_write_to_external(CLEAR_DISPLAY,
    205                                     (char*)STRING_mensagem_saudacao_maquina[idioma][0],
    206                                     (char*)STRING_mensagem_saudacao_maquina[idioma][1]);      
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable14_4
   \   00000036   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000003A   0x6842             LDR      R2,[R0, #+4]
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable14_4
   \   00000042   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       STRING_write_to_external
    207            
    208            vSemaphoreCreateBinary(APLICACAO_sem_LCD);
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       xQueueCreate
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD007             BEQ.N    ??APLICACAO_ini_0
   \   00000064   0x2300             MOVS     R3,#+0
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x.... 0x....      BL       xQueueGenericSend
    209          }
   \                     ??APLICACAO_ini_0:
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
    210          /***********************************************************************************
    211          *       Descrição       :       Semáforo para acessar o LCD
    212          *       Parametros      :       nenhum
    213          *       Retorno         :       nenhum
    214          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    215          void APLIACAO_wait_lcd(void){
   \                     APLIACAO_wait_lcd:
   \   00000000   0xB580             PUSH     {R7,LR}
    216            
    217            while(!xSemaphoreTake(APLICACAO_sem_LCD,portTICK_RATE_MS*1));
   \                     ??APLIACAO_wait_lcd_0:
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       xQueueGenericReceive
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD0F5             BEQ.N    ??APLIACAO_wait_lcd_0
    218          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    219          /***********************************************************************************
    220          *       Descrição       :       Libera o semáforo do LCD
    221          *       Parametros      :       nenhum
    222          *       Retorno         :       nenhum
    223          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    224          void APLICACAO_release_lcd(void){
   \                     APLICACAO_release_lcd:
   \   00000000   0xB580             PUSH     {R7,LR}
    225            
    226            xSemaphoreGive(APLICACAO_sem_LCD);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       xQueueGenericSend
    227          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    228          /***********************************************************************************
    229          *       Descrição       :       Funções para carregar o idioma
    230          *       Parametros      :       nenhum
    231          *       Retorno         :       nenhum
    232          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    233          unsigned char APLICACAO_carrega_idioma(void){
   \                     APLICACAO_carrega_idioma:
   \   00000000   0xB580             PUSH     {R7,LR}
    234            unsigned char idioma  = BRASIL;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
    235            
    236            PARAMETROS_le(ADR_FLAG_IDIOMA,(void*)&idioma);  
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       PARAMETROS_le
    237            if(idioma>QTY_OF_LANGUAGES)
   \   00000010   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000014   0x2808             CMP      R0,#+8
   \   00000016   0xDB02             BLT.N    ??APLICACAO_carrega_idioma_0
    238              idioma = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    239            
    240            return idioma;
   \                     ??APLICACAO_carrega_idioma_0:
   \   0000001E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000022   0xBD02             POP      {R1,PC}          ;; return
    241          }
    242          /***********************************************************************************
    243          *       Descrição       :       Tela de descanso do display interno
    244          *       Parametros      :       nenhum
    245          *       Retorno         :       nenhum
    246          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    247          void APLICACAO_tela_descanso(void){
   \                     APLICACAO_tela_descanso:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    248            char buffer_linha[17];
    249            
    250            sprintf(buffer_linha,"RPM:%05d T%03doC",POTENCIA_getRPMmedido(),AA_calculaTemperatura());
   \   00000004   0x.... 0x....      BL       AA_calculaTemperatura
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x.... 0x....      BL       POTENCIA_getRPMmedido
   \   0000000E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000010   0x0023             MOVS     R3,R4
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable14_6
   \   00000018   0xA801             ADD      R0,SP,#+4
   \   0000001A   0x.... 0x....      BL       sprintf
    251            STRING_write_to_internal(NO_CLEAR,buffer_linha,NULL);    
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0xA901             ADD      R1,SP,#+4
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x.... 0x....      BL       STRING_write_to_internal
    252            
    253            sprintf(buffer_linha,"P:%04d M:%04d,%02d",AA_mediaMovelPapel(),
    254                                                      PAGAMENTOS_get_valor_acumulado()/100,
    255                                                      PAGAMENTOS_get_valor_acumulado()%100);
   \   00000028   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000002C   0x0004             MOVS     R4,R0
   \   0000002E   0x2564             MOVS     R5,#+100
   \   00000030   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   00000034   0x0006             MOVS     R6,R0
   \   00000036   0x.... 0x....      BL       AA_mediaMovelPapel
   \   0000003A   0xFB94 0xF1F5      SDIV     R1,R4,R5
   \   0000003E   0xFB05 0x4111      MLS      R1,R5,R1,R4
   \   00000042   0x9100             STR      R1,[SP, #+0]
   \   00000044   0x2164             MOVS     R1,#+100
   \   00000046   0xFB96 0xF3F1      SDIV     R3,R6,R1
   \   0000004A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004C   0x0002             MOVS     R2,R0
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000052   0xA801             ADD      R0,SP,#+4
   \   00000054   0x.... 0x....      BL       sprintf
    256            
    257            STRING_write_to_internal(NO_CLEAR,NULL,buffer_linha);
   \   00000058   0xAA01             ADD      R2,SP,#+4
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       STRING_write_to_internal
    258          }
   \   00000062   0xB006             ADD      SP,SP,#+24
   \   00000064   0xBD70             POP      {R4-R6,PC}       ;; return
    259          /***********************************************************************************
    260          *       Descrição       :       Exibe o valor da pipoca e 
    261          *                               o quanto já foi pago pelo cliente
    262          *       Parametros      :       nenhum
    263          *       Retorno         :       nenhum
    264          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    265          void APLICACAO_exibe_valor(unsigned char idioma){
   \                     APLICACAO_exibe_valor:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x0004             MOVS     R4,R0
    266            unsigned int valor;
    267            char buffer_linha[17];
    268            static unsigned char indice=0;
    269            
    270            PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valor);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    271            sprintf(buffer_linha,STRING_mensagem_preco[idioma],valor/100,valor%100);
   \   0000000E   0x9800             LDR      R0,[SP, #+0]
   \   00000010   0x2164             MOVS     R1,#+100
   \   00000012   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000016   0xFB01 0x0312      MLS      R3,R1,R2,R0
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
   \   0000001C   0x2164             MOVS     R1,#+100
   \   0000001E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable14_8
   \   00000028   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000002C   0xA801             ADD      R0,SP,#+4
   \   0000002E   0x.... 0x....      BL       sprintf
    272            STRING_write_to_external(NO_CLEAR,buffer_linha,NULL);    
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0xA901             ADD      R1,SP,#+4
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       STRING_write_to_external
    273            
    274            unsigned int pago = PAGAMENTOS_get_valor_acumulado();
   \   0000003C   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   00000040   0x0005             MOVS     R5,R0
    275            
    276            if(pago){    
   \   00000042   0x2D00             CMP      R5,#+0
   \   00000044   0xD015             BEQ.N    ??APLICACAO_exibe_valor_0
    277              sprintf(buffer_linha,STRING_mensagem_pago[idioma],pago/100,pago%100);
   \   00000046   0x2064             MOVS     R0,#+100
   \   00000048   0xFBB5 0xF1F0      UDIV     R1,R5,R0
   \   0000004C   0xFB00 0x5311      MLS      R3,R0,R1,R5
   \   00000050   0x2064             MOVS     R0,#+100
   \   00000052   0xFBB5 0xF2F0      UDIV     R2,R5,R0
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable14_9
   \   0000005C   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   00000060   0xA801             ADD      R0,SP,#+4
   \   00000062   0x.... 0x....      BL       sprintf
    278              STRING_write_to_external(NO_CLEAR,NULL,buffer_linha);
   \   00000066   0xAA01             ADD      R2,SP,#+4
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x.... 0x....      BL       STRING_write_to_external
   \   00000070   0xE021             B.N      ??APLICACAO_exibe_valor_1
    279            }
    280            else{
    281              if(!APLICACAO_tempo_mensagem){
   \                     ??APLICACAO_exibe_valor_0:
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable14_10
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD110             BNE.N    ??APLICACAO_exibe_valor_2
    282                indice = (indice+1) % 4;
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable14_11
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x1C40             ADDS     R0,R0,#+1
   \   00000084   0x2104             MOVS     R1,#+4
   \   00000086   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000008A   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable14_11
   \   00000092   0x7002             STRB     R2,[R0, #+0]
    283                APLICACAO_tempo_mensagem = TEMPO_MENSAGEM_LINHA_INFERIOR;
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable14_10
   \   00000098   0xF242 0x7110      MOVW     R1,#+10000
   \   0000009C   0x6001             STR      R1,[R0, #+0]
    284              }
    285              PARAMETROS_le(ADR_MENSAGEM_CLIENTE_01+indice,(void*)buffer_linha);
   \                     ??APLICACAO_exibe_valor_2:
   \   0000009E   0xA901             ADD      R1,SP,#+4
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable14_11
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x303C             ADDS     R0,R0,#+60
   \   000000A8   0x.... 0x....      BL       PARAMETROS_le
    286              STRING_write_to_external(NO_CLEAR,NULL,buffer_linha);
   \   000000AC   0xAA01             ADD      R2,SP,#+4
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0x2001             MOVS     R0,#+1
   \   000000B2   0x.... 0x....      BL       STRING_write_to_external
    287            }
    288          }
   \                     ??APLICACAO_exibe_valor_1:
   \   000000B6   0xB007             ADD      SP,SP,#+28
   \   000000B8   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .bss, align 1
   \                     ??indice:
   \   00000000                      DS8 1
    289          /***********************************************************************************
    290          *       Descrição       :       Verifica a contagem dos tubos de moeda
    291          *       Parametros      :       nenhum
    292          *       Retorno         :       (unsigned char) maior do que zero se há troco
    293          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    294          unsigned int APLICACACAO_verifica_troco(void){
   \                     APLICACACAO_verifica_troco:
   \   00000000   0xB580             PUSH     {R7,LR}
    295            unsigned int troco;
    296            
    297            if(MDB_checa_troco(&troco))
   \   00000002   0xA800             ADD      R0,SP,#+0
   \   00000004   0x.... 0x....      BL       MDB_checa_troco
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD001             BEQ.N    ??APLICACACAO_verifica_troco_0
    298              return troco;
   \   0000000C   0x9800             LDR      R0,[SP, #+0]
   \   0000000E   0xE000             B.N      ??APLICACACAO_verifica_troco_1
    299            
    300            return 0;
   \                     ??APLICACACAO_verifica_troco_0:
   \   00000010   0x2000             MOVS     R0,#+0
   \                     ??APLICACACAO_verifica_troco_1:
   \   00000012   0xBD02             POP      {R1,PC}          ;; return
    301          }
    302          /***********************************************************************************
    303          *       Descrição       :       Faz a verificação dos pagamentos para
    304          *                               iniciar o ciclo de preparação
    305          *       Parametros      :       (unsigned int) valor da pipoca
    306          *       Retorno         :       nenhum
    307          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    308          void APLICACAO_verifica_preparacao(unsigned int valor_pipoca,unsigned char idioma,
    309                                             unsigned char troco){
   \                     APLICACAO_verifica_preparacao:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    310             unsigned int ajuste;
    311            
    312            if( PAGAMENTOS_get_valor_acumulado()>=valor_pipoca) {      
   \   0000000A   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000000E   0x42A0             CMP      R0,R4
   \   00000010   0xF0C0 0x8083      BCC.W    ??APLICACAO_verifica_preparacao_0
    313              
    314              if(troco==OPERA_SEM_TROCO || APLICACACAO_verifica_troco()>=valor_pipoca){     
   \   00000014   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000016   0x2E00             CMP      R6,#+0
   \   00000018   0xD003             BEQ.N    ??APLICACAO_verifica_preparacao_1
   \   0000001A   0x.... 0x....      BL       APLICACACAO_verifica_troco
   \   0000001E   0x42A0             CMP      R0,R4
   \   00000020   0xD372             BCC.N    ??APLICACAO_verifica_preparacao_2
    315                // Switch para 
    316                // capturar os resultados da execução do processo
    317                switch(PREPARACAO_entry(&ajuste,CONTABILIZA)){
   \                     ??APLICACAO_verifica_preparacao_1:
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       PREPARACAO_entry
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD006             BEQ.N    ??APLICACAO_verifica_preparacao_3
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD03B             BEQ.N    ??APLICACAO_verifica_preparacao_4
   \   00000032   0xD32A             BCC.N    ??APLICACAO_verifica_preparacao_5
   \   00000034   0x2804             CMP      R0,#+4
   \   00000036   0xD058             BEQ.N    ??APLICACAO_verifica_preparacao_6
   \   00000038   0xD347             BCC.N    ??APLICACAO_verifica_preparacao_7
   \   0000003A   0xE065             B.N      ??APLICACAO_verifica_preparacao_2
    318                  case SUCESSO:
    319                       PAGAMENTOS_subtrai_valores(valor_pipoca);          
   \                     ??APLICACAO_verifica_preparacao_3:
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       PAGAMENTOS_subtrai_valores
    320                       // Devolve o troco caso ainda reste valor
    321                       // pago no acumulador de moeda
    322                       if(troco==OPERA_COM_TROCO && PAGAMENTOS_get_valor_acumulado()){               
   \   00000042   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000044   0x2EFF             CMP      R6,#+255
   \   00000046   0xD113             BNE.N    ??APLICACAO_verifica_preparacao_8
   \   00000048   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD00F             BEQ.N    ??APLICACAO_verifica_preparacao_8
    323                         STRING_write_to_external(CLEAR_DISPLAY,
    324                                                  (char*)STRING_mensagem_retire_troco[idioma][0],
    325                                                  (char*)STRING_mensagem_retire_troco[idioma][1]);
   \   00000050   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable14_12
   \   00000056   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   0000005A   0x6842             LDR      R2,[R0, #+4]
   \   0000005C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable14_12
   \   00000062   0xF850 0x1035      LDR      R1,[R0, R5, LSL #+3]
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       STRING_write_to_external
    326                         APLICACAO_devolve_troco();      
   \   0000006C   0x.... 0x....      BL       APLICACAO_devolve_troco
    327                       }
    328                       PREPARACAO_resfriamento(idioma);
   \                     ??APLICACAO_verifica_preparacao_8:
   \   00000070   0x0028             MOVS     R0,R5
   \   00000072   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000074   0x.... 0x....      BL       PREPARACAO_resfriamento
    329                       STRING_write_to_external(CLEAR_DISPLAY,NULL,NULL);                
   \   00000078   0x2200             MOVS     R2,#+0
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       STRING_write_to_external
    330                       PAGAMENTOS_set_bloqueio(0);
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    331                       break;
   \   00000088   0xE03E             B.N      ??APLICACAO_verifica_preparacao_2
    332                  case FALHA_VENTILADOR:
    333                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E0:VENTILADOR");                       
   \                     ??APLICACAO_verifica_preparacao_5:
   \   0000008A   0x.... 0x....      LDR.W    R2,??DataTable14_13
   \   0000008E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   00000094   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x.... 0x....      BL       STRING_write_to_external
    334                       APLICACAO_menu_falha();
   \   0000009E   0x.... 0x....      BL       APLICACAO_menu_falha
    335                       PAGAMENTOS_set_bloqueio(0);             
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    336                       break;
   \   000000A8   0xE02E             B.N      ??APLICACAO_verifica_preparacao_2
    337                  case FALHA_RESISTENCIA:
    338                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E1:AQUECIMENTO");
   \                     ??APLICACAO_verifica_preparacao_4:
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable14_15
   \   000000AE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   000000B4   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       STRING_write_to_external
    339                       APLICACAO_menu_falha();
   \   000000BE   0x.... 0x....      BL       APLICACAO_menu_falha
    340                       PAGAMENTOS_set_bloqueio(0);             
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    341                       break;
   \   000000C8   0xE01E             B.N      ??APLICACAO_verifica_preparacao_2
    342                  case FALHA_DOSE:
    343                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E2:DOSADOR");          
   \                     ??APLICACAO_verifica_preparacao_7:
   \   000000CA   0x.... 0x....      LDR.W    R2,??DataTable14_16
   \   000000CE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   000000D4   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      BL       STRING_write_to_external
    344                       APLICACAO_menu_falha();
   \   000000DE   0x.... 0x....      BL       APLICACAO_menu_falha
    345                       PAGAMENTOS_set_bloqueio(0);             
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    346                       break;
   \   000000E8   0xE00E             B.N      ??APLICACAO_verifica_preparacao_2
    347                  case FALHA_EMBALAGEM:
    348                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E3:EMBALAGEM");                                                 
   \                     ??APLICACAO_verifica_preparacao_6:
   \   000000EA   0x.... 0x....      LDR.W    R2,??DataTable14_17
   \   000000EE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   000000F4   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0x.... 0x....      BL       STRING_write_to_external
    349                       APLICACAO_menu_falha();
   \   000000FE   0x.... 0x....      BL       APLICACAO_menu_falha
    350                       PAGAMENTOS_set_bloqueio(0);
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    351                       break;
    352                }     
    353              }
    354                   
    355              STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
   \                     ??APLICACAO_verifica_preparacao_2:
   \   00000108   0x2200             MOVS     R2,#+0
   \   0000010A   0x2100             MOVS     R1,#+0
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x.... 0x....      BL       STRING_write_to_internal
    356              BOARD_setter_contador_propaganda(0);
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x.... 0x....      BL       BOARD_setter_contador_propaganda
   \   00000118   0xE00C             B.N      ??APLICACAO_verifica_preparacao_9
    357            }//Fim do inicio do processo de preparação
    358            else
    359              if(troco==OPERA_COM_TROCO && !PAGAMENTOS_get_timeout_pagamento() && PAGAMENTOS_get_valor_acumulado()){        
   \                     ??APLICACAO_verifica_preparacao_0:
   \   0000011A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000011C   0x2EFF             CMP      R6,#+255
   \   0000011E   0xD109             BNE.N    ??APLICACAO_verifica_preparacao_9
   \   00000120   0x.... 0x....      BL       PAGAMENTOS_get_timeout_pagamento
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD105             BNE.N    ??APLICACAO_verifica_preparacao_9
   \   00000128   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD001             BEQ.N    ??APLICACAO_verifica_preparacao_9
    360                APLICACAO_devolve_troco();
   \   00000130   0x.... 0x....      BL       APLICACAO_devolve_troco
    361              }  
    362          }
   \                     ??APLICACAO_verifica_preparacao_9:
   \   00000134   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    363          /***********************************************************************************
    364          *       Descrição       :       Tela quando há alguma falha na máquina
    365          *       Parametros      :       (unsigned char) idioma
    366          *       Retorno         :       nenhum
    367          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    368          void APLICACAO_menu_falha(void){
   \                     APLICACAO_menu_falha:
   \   00000000   0xB510             PUSH     {R4,LR}
    369            eTECLA tecla;
    370                           
    371            BOARD_setter_led_instrucao(LED_FORA_SERVICO,PISCANDO);
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x2006             MOVS     R0,#+6
   \   00000006   0x.... 0x....      BL       BOARD_setter_led_instrucao
    372            APLICACAO_devolve_troco(); // Devolve o valor ao cliente
   \   0000000A   0x.... 0x....      BL       APLICACAO_devolve_troco
    373                                       // devido a uma falha no sistema
    374            
    375            PAGAMENTOS_set_bloqueio(1);
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    376            
    377            for(;;){
    378              
    379              APLICACAO_tela_descanso();           
   \                     ??APLICACAO_menu_falha_0:
   \   00000014   0x.... 0x....      BL       APLICACAO_tela_descanso
    380              
    381              tecla = TECLADO_getch();
   \   00000018   0x.... 0x....      BL       TECLADO_getch
   \   0000001C   0x0004             MOVS     R4,R0
    382              switch(tecla){
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2C01             CMP      R4,#+1
   \   00000022   0xD017             BEQ.N    ??APLICACAO_menu_falha_1
   \   00000024   0xD3F6             BCC.N    ??APLICACAO_menu_falha_0
   \   00000026   0x2C03             CMP      R4,#+3
   \   00000028   0xD016             BEQ.N    ??APLICACAO_menu_falha_2
   \   0000002A   0xD314             BCC.N    ??APLICACAO_menu_falha_3
   \   0000002C   0x2C04             CMP      R4,#+4
   \   0000002E   0xD1F1             BNE.N    ??APLICACAO_menu_falha_0
    383                case TECLA_ENTER:
    384                    APLIACAO_wait_lcd();
   \                     ??APLICACAO_menu_falha_4:
   \   00000030   0x.... 0x....      BL       APLIACAO_wait_lcd
    385                    BOARD_liga_placa_instrucao(0);
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    386                    MCFG_entry();                     
   \   0000003A   0x.... 0x....      BL       MCFG_entry
    387                    BOARD_liga_placa_instrucao(1);
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    388                    APLICACAO_release_lcd();             
   \   00000044   0x.... 0x....      BL       APLICACAO_release_lcd
    389                    STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);                   
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x.... 0x....      BL       STRING_write_to_internal
    390                    break;
   \   00000052   0xE7DF             B.N      ??APLICACAO_menu_falha_0
    391                case TECLA_ESC:
    392                    break;
   \                     ??APLICACAO_menu_falha_1:
   \   00000054   0xE7DE             B.N      ??APLICACAO_menu_falha_0
    393                case TECLA_INC:
    394                    break;
   \                     ??APLICACAO_menu_falha_3:
   \   00000056   0xE7DD             B.N      ??APLICACAO_menu_falha_0
    395                case TECLA_DEC:
    396                    break;
   \                     ??APLICACAO_menu_falha_2:
   \   00000058   0xE7DC             B.N      ??APLICACAO_menu_falha_0
    397              }       
    398            }
    399          }
    400          /***********************************************************************************
    401          *       Descrição       :       Função para devolver o troco ao cliente
    402          *       Parametros      :       (void)
    403          *       Retorno         :       (unsigned char) maior do que zero se
    404          *                               conseguiu devolver o troco
    405          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    406          unsigned char APLICACAO_devolve_troco(void){
   \                     APLICACAO_devolve_troco:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB08A             SUB      SP,SP,#+40
    407            unsigned int valor = PAGAMENTOS_get_valor_acumulado();
   \   00000006   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000000A   0x0004             MOVS     R4,R0
    408            unsigned char tubos[16];
    409            unsigned char escala;
    410            unsigned char change_coins[16];
    411            eMDB_reply res;
    412            unsigned int tentativas;
    413            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   0000000C   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000010   0x0006             MOVS     R6,R0
    414            
    415            PAGAMENTOS_set_bloqueio(0);
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    416            vTaskDelay(500);
   \   00000018   0xF44F 0x70FA      MOV      R0,#+500
   \   0000001C   0x.... 0x....      BL       vTaskDelay
    417            
    418            
    419            // Busca a quantidade de moedas nos tubos
    420            // e a escala do pais
    421            tentativas=10;
   \   00000020   0x200A             MOVS     R0,#+10
   \   00000022   0x0007             MOVS     R7,R0
    422            do res = MDB_checa_valor_moedas(&escala,tubos);
   \                     ??APLICACAO_devolve_troco_0:
   \   00000024   0xA905             ADD      R1,SP,#+20
   \   00000026   0xA800             ADD      R0,SP,#+0
   \   00000028   0x.... 0x....      BL       MDB_checa_valor_moedas
   \   0000002C   0x0005             MOVS     R5,R0
    423            while(res!=MDB_OK && --tentativas);
   \   0000002E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000030   0x2D00             CMP      R5,#+0
   \   00000032   0xD002             BEQ.N    ??APLICACAO_devolve_troco_1
   \   00000034   0x1E7F             SUBS     R7,R7,#+1
   \   00000036   0x2F00             CMP      R7,#+0
   \   00000038   0xD1F4             BNE.N    ??APLICACAO_devolve_troco_0
    424            
    425            if(res==MDB_OK){
   \                     ??APLICACAO_devolve_troco_1:
   \   0000003A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003C   0x2D00             CMP      R5,#+0
   \   0000003E   0xD14A             BNE.N    ??APLICACAO_devolve_troco_2
    426              
    427              STRING_write_to_external(NO_CLEAR,NULL,(char*)STRING_liberando_troco[(unsigned char)idioma]);
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable14_18
   \   00000046   0xF850 0x2026      LDR      R2,[R0, R6, LSL #+2]
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x.... 0x....      BL       STRING_write_to_external
    428                    
    429              SMDB_wait();
   \   00000052   0x.... 0x....      BL       SMDB_wait
    430            
    431              tentativas = 10;
   \   00000056   0x200A             MOVS     R0,#+10
   \   00000058   0x0007             MOVS     R7,R0
    432              do res = MDBCOIN_alternative_payout(valor,escala);
   \                     ??APLICACAO_devolve_troco_3:
   \   0000005A   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000062   0x.... 0x....      BL       MDBCOIN_alternative_payout
   \   00000066   0x0005             MOVS     R5,R0
    433              while(res!=MDB_OK && tentativas--);
   \   00000068   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006A   0x2D00             CMP      R5,#+0
   \   0000006C   0xD003             BEQ.N    ??APLICACAO_devolve_troco_4
   \   0000006E   0x0038             MOVS     R0,R7
   \   00000070   0x1E47             SUBS     R7,R0,#+1
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD1F1             BNE.N    ??APLICACAO_devolve_troco_3
    434              
    435              SMDB_release();
   \                     ??APLICACAO_devolve_troco_4:
   \   00000076   0x.... 0x....      BL       SMDB_release
    436              
    437              if(res==MDB_OK){      
   \   0000007A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007C   0x2D00             CMP      R5,#+0
   \   0000007E   0xD12A             BNE.N    ??APLICACAO_devolve_troco_2
    438                
    439                SMDB_wait();
   \   00000080   0x.... 0x....      BL       SMDB_wait
    440                
    441                
    442                tentativas = 10;
   \   00000084   0x200A             MOVS     R0,#+10
   \   00000086   0x0007             MOVS     R7,R0
    443                do res = MDBCOIN_get_payout_status(change_coins);
   \                     ??APLICACAO_devolve_troco_5:
   \   00000088   0xA801             ADD      R0,SP,#+4
   \   0000008A   0x.... 0x....      BL       MDBCOIN_get_payout_status
   \   0000008E   0x0005             MOVS     R5,R0
    444                while(res!=MDB_OK && --tentativas);      
   \   00000090   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000092   0x2D00             CMP      R5,#+0
   \   00000094   0xD002             BEQ.N    ??APLICACAO_devolve_troco_6
   \   00000096   0x1E7F             SUBS     R7,R7,#+1
   \   00000098   0x2F00             CMP      R7,#+0
   \   0000009A   0xD1F5             BNE.N    ??APLICACAO_devolve_troco_5
    445                
    446                SMDB_release();      
   \                     ??APLICACAO_devolve_troco_6:
   \   0000009C   0x.... 0x....      BL       SMDB_release
    447                
    448                if(res==MDB_OK){                                      
   \   000000A0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A2   0x2D00             CMP      R5,#+0
   \   000000A4   0xD117             BNE.N    ??APLICACAO_devolve_troco_2
    449                  unsigned int troco=0;
   \   000000A6   0xF05F 0x0800      MOVS     R8,#+0
    450                  for(unsigned char i=0;i<16;i++)
   \   000000AA   0x2000             MOVS     R0,#+0
   \                     ??APLICACAO_devolve_troco_7:
   \   000000AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AE   0x2810             CMP      R0,#+16
   \   000000B0   0xDA0C             BGE.N    ??APLICACAO_devolve_troco_8
    451                    troco+= (change_coins[i]*escala*tubos[i]);
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0xA901             ADD      R1,SP,#+4
   \   000000B6   0x5C41             LDRB     R1,[R0, R1]
   \   000000B8   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   000000BC   0x4351             MULS     R1,R2,R1
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C0   0xAA05             ADD      R2,SP,#+20
   \   000000C2   0x5C82             LDRB     R2,[R0, R2]
   \   000000C4   0xFB02 0x8801      MLA      R8,R2,R1,R8
   \   000000C8   0x1C40             ADDS     R0,R0,#+1
   \   000000CA   0xE7EF             B.N      ??APLICACAO_devolve_troco_7
    452                  
    453                    // Confirmação de que o troco liberado
    454                    // corresponde ao valor solicitado
    455                    // assim pode descontar o montante do módulo
    456                    // Pagamentos
    457                    if(troco==valor)
   \                     ??APLICACAO_devolve_troco_8:
   \   000000CC   0x45A0             CMP      R8,R4
   \   000000CE   0xD102             BNE.N    ??APLICACAO_devolve_troco_2
    458                      PAGAMENTOS_subtrai_valores(valor);  
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0x.... 0x....      BL       PAGAMENTOS_subtrai_valores
    459                }
    460              }
    461            }        
    462            
    463            return 1;      
   \                     ??APLICACAO_devolve_troco_2:
   \   000000D6   0x2001             MOVS     R0,#+1
   \   000000D8   0xB00A             ADD      SP,SP,#+40
   \   000000DA   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    464          }
    465          /***********************************************************************************
    466          *       Descrição       :       Faz a verificação do POST
    467          *       Parametros      :       nenhum
    468          *       Retorno         :       nenhum
    469          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    470          unsigned char APLICACAO_verifica_post(void){
   \                     APLICACAO_verifica_post:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    471            ePOST_RESULT post = POST_entry();
   \   00000002   0x.... 0x....      BL       POST_entry
   \   00000006   0x0004             MOVS     R4,R0
    472            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000008   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   0000000C   0x0005             MOVS     R5,R0
    473            
    474            switch(post){
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C00             CMP      R4,#+0
   \   00000012   0xD101             BNE.N    ??APLICACAO_verifica_post_0
    475              case POST_SUCESSO:
    476                   return 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xE05D             B.N      ??APLICACAO_verifica_post_1
    477              case POST_FALHA_VENTILADOR:
    478              case POST_FALHA_RESISTENCIA:
    479              case POST_FALHA_MDB_BILL:
    480              case POST_FALHA_MDB_COIN:
    481              case POST_FALHA_MDB_CASHLESS:
    482              case POST_FALHA_CCTALK:
    483              case POST_FALHA_PAPEL:
    484              default:
    485                   switch(post){
   \                     ??APLICACAO_verifica_post_0:
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C01             CMP      R4,#+1
   \   0000001C   0xD00A             BEQ.N    ??APLICACAO_verifica_post_2
   \   0000001E   0xD32D             BCC.N    ??APLICACAO_verifica_post_3
   \   00000020   0x2C03             CMP      R4,#+3
   \   00000022   0xD01D             BEQ.N    ??APLICACAO_verifica_post_4
   \   00000024   0xD311             BCC.N    ??APLICACAO_verifica_post_5
   \   00000026   0x2C05             CMP      R4,#+5
   \   00000028   0xD01C             BEQ.N    ??APLICACAO_verifica_post_6
   \   0000002A   0xD31A             BCC.N    ??APLICACAO_verifica_post_7
   \   0000002C   0x2C07             CMP      R4,#+7
   \   0000002E   0xD01B             BEQ.N    ??APLICACAO_verifica_post_8
   \   00000030   0xD319             BCC.N    ??APLICACAO_verifica_post_9
   \   00000032   0xE023             B.N      ??APLICACAO_verifica_post_3
    486                     case POST_FALHA_VENTILADOR:
    487                          STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E0:MOTOR AR");                                    
   \                     ??APLICACAO_verifica_post_2:
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable14_19
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   0000003E   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       STRING_write_to_external
    488                          break;
   \   00000048   0xE018             B.N      ??APLICACAO_verifica_post_3
    489                     case POST_FALHA_RESISTENCIA:
    490                          STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E1:AQUECIMENTO");                
   \                     ??APLICACAO_verifica_post_5:
   \   0000004A   0x.... 0x....      LDR.W    R2,??DataTable14_15
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   00000054   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       STRING_write_to_external
    491                          break;
   \   0000005E   0xE00D             B.N      ??APLICACAO_verifica_post_3
    492                     case POST_FALHA_MDB_BILL:
    493                          break;
   \                     ??APLICACAO_verifica_post_4:
   \   00000060   0xE00C             B.N      ??APLICACAO_verifica_post_3
    494                     case POST_FALHA_MDB_COIN:
    495                          break;
   \                     ??APLICACAO_verifica_post_7:
   \   00000062   0xE00B             B.N      ??APLICACAO_verifica_post_3
    496                     case POST_FALHA_MDB_CASHLESS:
    497                          break;
   \                     ??APLICACAO_verifica_post_6:
   \   00000064   0xE00A             B.N      ??APLICACAO_verifica_post_3
    498                     case POST_FALHA_CCTALK:
    499                          break;
   \                     ??APLICACAO_verifica_post_9:
   \   00000066   0xE009             B.N      ??APLICACAO_verifica_post_3
    500                     case POST_FALHA_PAPEL:   
    501                          STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E3:EMBALAGEM");              
   \                     ??APLICACAO_verifica_post_8:
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable14_17
   \   0000006C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   00000072   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       STRING_write_to_external
    502                          break;
    503                   }         
    504                   
    505                   PAGAMENTOS_set_bloqueio(1); // Bloqueia os meios de pagamento
   \                     ??APLICACAO_verifica_post_3:
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    506                   BOARD_liga_placa_instrucao(LED_FORA_SERVICO);
   \   00000082   0x2006             MOVS     R0,#+6
   \   00000084   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    507                   
    508                   for(;;){
    509                     eTECLA tecla;
    510                     
    511                     tecla = TECLADO_getch();
   \                     ??APLICACAO_verifica_post_10:
   \   00000088   0x.... 0x....      BL       TECLADO_getch
   \   0000008C   0x0006             MOVS     R6,R0
    512                     
    513                     switch(tecla){
   \   0000008E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000090   0x2E01             CMP      R6,#+1
   \   00000092   0xD01A             BEQ.N    ??APLICACAO_verifica_post_11
   \   00000094   0xD31B             BCC.N    ??APLICACAO_verifica_post_12
   \   00000096   0x2E03             CMP      R6,#+3
   \   00000098   0xD019             BEQ.N    ??APLICACAO_verifica_post_13
   \   0000009A   0xD317             BCC.N    ??APLICACAO_verifica_post_14
   \   0000009C   0x2E04             CMP      R6,#+4
   \   0000009E   0xD116             BNE.N    ??APLICACAO_verifica_post_12
    514                       case TECLA_ENTER:
    515                            APLIACAO_wait_lcd();
   \                     ??APLICACAO_verifica_post_15:
   \   000000A0   0x.... 0x....      BL       APLIACAO_wait_lcd
    516                            BOARD_liga_placa_instrucao(0);
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    517                            MCFG_entry();                     
   \   000000AA   0x.... 0x....      BL       MCFG_entry
    518                            BOARD_liga_placa_instrucao(1);
   \   000000AE   0x2001             MOVS     R0,#+1
   \   000000B0   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    519                            idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   000000B4   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   000000B8   0x0005             MOVS     R5,R0
    520                            APLICACAO_release_lcd();  
   \   000000BA   0x.... 0x....      BL       APLICACAO_release_lcd
    521                     
    522                            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);               
   \   000000BE   0x2200             MOVS     R2,#+0
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      BL       STRING_write_to_internal
    523                            break;
   \   000000C8   0xE001             B.N      ??APLICACAO_verifica_post_12
    524                       case TECLA_ESC:
    525                            break;
   \                     ??APLICACAO_verifica_post_11:
   \   000000CA   0xE000             B.N      ??APLICACAO_verifica_post_12
    526                       case TECLA_INC:
    527                            break;
   \                     ??APLICACAO_verifica_post_14:
   \   000000CC   0xE7FF             B.N      ??APLICACAO_verifica_post_12
    528                       case TECLA_DEC: 
    529                            break;
    530                     }
    531                     
    532                     APLICACAO_tela_descanso();
   \                     ??APLICACAO_verifica_post_13:
   \                     ??APLICACAO_verifica_post_12:
   \   000000CE   0x.... 0x....      BL       APLICACAO_tela_descanso
   \   000000D2   0xE7D9             B.N      ??APLICACAO_verifica_post_10
    533                   }       
    534            }
   \                     ??APLICACAO_verifica_post_1:
   \   000000D4   0xBD70             POP      {R4-R6,PC}       ;; return
    535          }
    536          /***********************************************************************************
    537          *       Descrição       :       Faz a verificação de troco para o primeiro
    538          *                               processo
    539          *       Parametros      :       nenhum
    540          *       Retorno         :       (unsigned char) maior do que zero
    541          *                               se houver troco suficiente
    542          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    543          void APLICACAO_verifica_disponibilidade_troco(unsigned char idioma){
   \                     APLICACAO_verifica_disponibilidade_troco:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    544            unsigned char flag_notas;
    545            unsigned int maior_nota=0;
   \   00000006   0x2500             MOVS     R5,#+0
    546            eTECLA tecla;
    547            
    548            PARAMETROS_le(ADR_NOTAS,(void*)&flag_notas);
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0x.... 0x....      BL       PARAMETROS_le
    549            if(flag_notas&0x01)
   \   00000010   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000014   0x07C0             LSLS     R0,R0,#+31
   \   00000016   0xD501             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_0
    550              maior_nota = 100;
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0x0005             MOVS     R5,R0
    551            if(flag_notas&0x02)
   \                     ??APLICACAO_verifica_disponibilidade_troco_0:
   \   0000001C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000020   0x0780             LSLS     R0,R0,#+30
   \   00000022   0xD501             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_1
    552              maior_nota = 200;
   \   00000024   0x20C8             MOVS     R0,#+200
   \   00000026   0x0005             MOVS     R5,R0
    553            if(flag_notas&0x04)
   \                     ??APLICACAO_verifica_disponibilidade_troco_1:
   \   00000028   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000002C   0x0740             LSLS     R0,R0,#+29
   \   0000002E   0xD502             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_2
    554              maior_nota = 500;
   \   00000030   0xF44F 0x70FA      MOV      R0,#+500
   \   00000034   0x0005             MOVS     R5,R0
    555            if(flag_notas&0x08)
   \                     ??APLICACAO_verifica_disponibilidade_troco_2:
   \   00000036   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000003A   0x0700             LSLS     R0,R0,#+28
   \   0000003C   0xD502             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_3
    556              maior_nota = 1000;
   \   0000003E   0xF44F 0x707A      MOV      R0,#+1000
   \   00000042   0x0005             MOVS     R5,R0
    557            if(flag_notas&0x10)
   \                     ??APLICACAO_verifica_disponibilidade_troco_3:
   \   00000044   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000048   0x06C0             LSLS     R0,R0,#+27
   \   0000004A   0xD502             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_4
    558              maior_nota = 2000;
   \   0000004C   0xF44F 0x60FA      MOV      R0,#+2000
   \   00000050   0x0005             MOVS     R5,R0
    559            /*
    560            if(flag_notas&0x20)
    561              maior_nota = 5000;
    562            */
    563            
    564            if( APLICACACAO_verifica_troco()<maior_nota){
   \                     ??APLICACAO_verifica_disponibilidade_troco_4:
   \   00000052   0x.... 0x....      BL       APLICACACAO_verifica_troco
   \   00000056   0x42A8             CMP      R0,R5
   \   00000058   0xD244             BCS.N    ??APLICACAO_verifica_disponibilidade_troco_5
    565              
    566              BOARD_setter_led_instrucao(LED_FORA_SERVICO,PISCANDO);
   \   0000005A   0x2102             MOVS     R1,#+2
   \   0000005C   0x2006             MOVS     R0,#+6
   \   0000005E   0x.... 0x....      BL       BOARD_setter_led_instrucao
    567              PAGAMENTOS_set_bloqueio(1);
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    568              STRING_write_to_external(CLEAR_DISPLAY,
    569                                       (char*)STRING_mensagem_sem_troco[idioma][0],
    570                                       (char*)STRING_mensagem_sem_troco[idioma][1]);    
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0x....             LDR.N    R0,??DataTable14_20
   \   0000006C   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000070   0x6842             LDR      R2,[R0, #+4]
   \   00000072   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000074   0x....             LDR.N    R0,??DataTable14_20
   \   00000076   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       STRING_write_to_external
    571              
    572              for(;APLICACACAO_verifica_troco()<maior_nota;){
   \                     ??APLICACAO_verifica_disponibilidade_troco_6:
   \   00000080   0x.... 0x....      BL       APLICACACAO_verifica_troco
   \   00000084   0x42A8             CMP      R0,R5
   \   00000086   0xD220             BCS.N    ??APLICACAO_verifica_disponibilidade_troco_7
    573                  
    574                tecla = TECLADO_getch();
   \   00000088   0x.... 0x....      BL       TECLADO_getch
   \   0000008C   0x0006             MOVS     R6,R0
    575                switch(tecla){
   \   0000008E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000090   0x0030             MOVS     R0,R6
   \   00000092   0x2801             CMP      R0,#+1
   \   00000094   0xD016             BEQ.N    ??APLICACAO_verifica_disponibilidade_troco_8
   \   00000096   0x2804             CMP      R0,#+4
   \   00000098   0xD114             BNE.N    ??APLICACAO_verifica_disponibilidade_troco_9
    576                  case TECLA_ENTER:
    577                      APLIACAO_wait_lcd();
   \                     ??APLICACAO_verifica_disponibilidade_troco_10:
   \   0000009A   0x.... 0x....      BL       APLIACAO_wait_lcd
    578                      BOARD_liga_placa_instrucao(0);
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    579                      MCFG_entry();                     
   \   000000A4   0x.... 0x....      BL       MCFG_entry
    580                      BOARD_liga_placa_instrucao(1);
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    581                      idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   000000AE   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   000000B2   0x0004             MOVS     R4,R0
    582                      APLICACAO_release_lcd();             
   \   000000B4   0x.... 0x....      BL       APLICACAO_release_lcd
    583                      STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);        
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x.... 0x....      BL       STRING_write_to_internal
    584                      break;
   \   000000C2   0xE7FF             B.N      ??APLICACAO_verifica_disponibilidade_troco_9
    585                  case TECLA_ESC:
    586                      break;
    587                }    
    588                
    589                APLICACAO_tela_descanso();      
   \                     ??APLICACAO_verifica_disponibilidade_troco_8:
   \                     ??APLICACAO_verifica_disponibilidade_troco_9:
   \   000000C4   0x.... 0x....      BL       APLICACAO_tela_descanso
   \   000000C8   0xE7DA             B.N      ??APLICACAO_verifica_disponibilidade_troco_6
    590              }//Fim do for(;;)        
    591              PAGAMENTOS_set_bloqueio(0);
   \                     ??APLICACAO_verifica_disponibilidade_troco_7:
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    592              BOARD_liga_placa_instrucao(0);
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    593              BOARD_liga_placa_instrucao(1);
   \   000000D6   0x2001             MOVS     R0,#+1
   \   000000D8   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    594              BOARD_setter_led_instrucao(LED_INSIRA_DINHEIRO,PISCANDO);
   \   000000DC   0x2102             MOVS     R1,#+2
   \   000000DE   0x2002             MOVS     R0,#+2
   \   000000E0   0x.... 0x....      BL       BOARD_setter_led_instrucao
    595            }  
    596          }
   \                     ??APLICACAO_verifica_disponibilidade_troco_5:
   \   000000E4   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    597          /***********************************************************************************
    598          *       Descrição       :       Verifica o barramento MDB
    599          *       Parametros      :       nenhum
    600          *       Retorno         :       nenhum
    601          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    602          void APLICACAO_verifica_MDB(void){
   \                     APLICACAO_verifica_MDB:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    603            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    604            
    605            switch(MDB_checa_dispositivos()){
   \   00000008   0x.... 0x....      BL       MDB_checa_dispositivos
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD003             BEQ.N    ??APLICACAO_verifica_MDB_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00F             BEQ.N    ??APLICACAO_verifica_MDB_1
   \   00000014   0xD301             BCC.N    ??APLICACAO_verifica_MDB_2
   \   00000016   0xE019             B.N      ??APLICACAO_verifica_MDB_3
    606              case MDB_TODOS_ONLINE:            
    607                   return;
   \                     ??APLICACAO_verifica_MDB_0:
   \   00000018   0xE041             B.N      ??APLICACAO_verifica_MDB_4
    608              case MDB_BILL_OFFLINE:
    609                   STRING_write_to_external(CLEAR_DISPLAY,
    610                                            (char*)STRING_mensagem_noteiro_mdb_offline[idioma][0],
    611                                            (char*)STRING_mensagem_noteiro_mdb_offline[idioma][1]);          
   \                     ??APLICACAO_verifica_MDB_2:
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x....             LDR.N    R0,??DataTable14_21
   \   0000001E   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000022   0x6842             LDR      R2,[R0, #+4]
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x....             LDR.N    R0,??DataTable14_21
   \   00000028   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       STRING_write_to_external
    612                   break;
   \   00000032   0xE00B             B.N      ??APLICACAO_verifica_MDB_3
    613              case MDB_COIN_OFFLINE:
    614                   STRING_write_to_external(CLEAR_DISPLAY,
    615                                            (char*)STRING_mensagem_moedeiro_mdb_offline[idioma][0],
    616                                            (char*)STRING_mensagem_moedeiro_mdb_offline[idioma][1]);           
   \                     ??APLICACAO_verifica_MDB_1:
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x....             LDR.N    R0,??DataTable14_22
   \   00000038   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000003C   0x6842             LDR      R2,[R0, #+4]
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0x....             LDR.N    R0,??DataTable14_22
   \   00000042   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       STRING_write_to_external
    617                   break;
    618            }  
    619            
    620            eTECLA tecla;
    621            
    622            for(;;){
    623              
    624              if(MDB_checa_dispositivos()==MDB_TODOS_ONLINE)
   \                     ??APLICACAO_verifica_MDB_3:
   \                     ??APLICACAO_verifica_MDB_5:
   \   0000004C   0x.... 0x....      BL       MDB_checa_dispositivos
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD024             BEQ.N    ??APLICACAO_verifica_MDB_4
    625                return;
    626              
    627              tecla = TECLADO_getch();
   \                     ??APLICACAO_verifica_MDB_6:
   \   00000054   0x.... 0x....      BL       TECLADO_getch
   \   00000058   0x0005             MOVS     R5,R0
    628              switch(tecla){
   \   0000005A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005C   0x0028             MOVS     R0,R5
   \   0000005E   0x2801             CMP      R0,#+1
   \   00000060   0xD016             BEQ.N    ??APLICACAO_verifica_MDB_7
   \   00000062   0x2804             CMP      R0,#+4
   \   00000064   0xD114             BNE.N    ??APLICACAO_verifica_MDB_8
    629                case TECLA_ENTER:
    630                      APLIACAO_wait_lcd();
   \                     ??APLICACAO_verifica_MDB_9:
   \   00000066   0x.... 0x....      BL       APLIACAO_wait_lcd
    631                      BOARD_liga_placa_instrucao(0);
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    632                      MCFG_entry();                     
   \   00000070   0x.... 0x....      BL       MCFG_entry
    633                      BOARD_liga_placa_instrucao(1);
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    634                      idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   0000007A   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   0000007E   0x0004             MOVS     R4,R0
    635                      APLICACAO_release_lcd();             
   \   00000080   0x.... 0x....      BL       APLICACAO_release_lcd
    636                      STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);              
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       STRING_write_to_internal
    637                     break;
   \   0000008E   0xE7FF             B.N      ??APLICACAO_verifica_MDB_8
    638                case TECLA_ESC:
    639                     break;
    640              }    
    641              APLICACAO_tela_descanso();      
   \                     ??APLICACAO_verifica_MDB_7:
   \                     ??APLICACAO_verifica_MDB_8:
   \   00000090   0x.... 0x....      BL       APLICACAO_tela_descanso
    642              vTaskDelay(500);
   \   00000094   0xF44F 0x70FA      MOV      R0,#+500
   \   00000098   0x.... 0x....      BL       vTaskDelay
   \   0000009C   0xE7D6             B.N      ??APLICACAO_verifica_MDB_5
    643            }
   \                     ??APLICACAO_verifica_MDB_4:
   \   0000009E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    644          }
    645          /***********************************************************************************
    646          *       Descrição       :       Faz a verificação do meio de pagamento
    647          *                               CCTALK
    648          *       Parametros      :       nenhum
    649          *       Retorno         :       nenhum
    650          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    651          void APLICACAO_verifica_cctalk(void){
   \                     APLICACAO_verifica_cctalk:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    652            unsigned char flag;
    653            
    654            PARAMETROS_le(ADR_FLAG_BV20,(void*)&flag);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       PARAMETROS_le
    655            
    656            if(!flag)
   \   0000000C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD043             BEQ.N    ??APLICACAO_verifica_cctalk_0
    657              return;  
    658            
    659            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \                     ??APLICACAO_verifica_cctalk_1:
   \   00000014   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000018   0x0004             MOVS     R4,R0
    660            eBV20_state estado_atual = BV20_get_current_state();
   \   0000001A   0x.... 0x....      BL       BV20_get_current_state
   \   0000001E   0x0005             MOVS     R5,R0
    661            
    662            if(estado_atual!=BV20_OFFLINE)
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2D03             CMP      R5,#+3
   \   00000024   0xD13A             BNE.N    ??APLICACAO_verifica_cctalk_0
    663              return;
    664            
    665            STRING_write_to_external(CLEAR_DISPLAY,
    666                                     (char*)STRING_mensagem_cctalk_offline[idioma][0],
    667                                     (char*)STRING_mensagem_cctalk_offline[idioma][1]);       
   \                     ??APLICACAO_verifica_cctalk_2:
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x....             LDR.N    R0,??DataTable14_23
   \   0000002A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000002E   0x6842             LDR      R2,[R0, #+4]
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x....             LDR.N    R0,??DataTable14_23
   \   00000034   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       STRING_write_to_external
    668              
    669            eTECLA tecla;
    670            
    671            for(;;){
    672              
    673              estado_atual = BV20_get_current_state();
   \                     ??APLICACAO_verifica_cctalk_3:
   \   0000003E   0x.... 0x....      BL       BV20_get_current_state
   \   00000042   0x0005             MOVS     R5,R0
    674              
    675              if(estado_atual!=BV20_OFFLINE)
   \   00000044   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000046   0x2D03             CMP      R5,#+3
   \   00000048   0xD128             BNE.N    ??APLICACAO_verifica_cctalk_0
    676                return;
    677              
    678              tecla = TECLADO_getch();
   \                     ??APLICACAO_verifica_cctalk_4:
   \   0000004A   0x.... 0x....      BL       TECLADO_getch
   \   0000004E   0x0006             MOVS     R6,R0
    679              switch(tecla){
   \   00000050   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000052   0x0030             MOVS     R0,R6
   \   00000054   0x2801             CMP      R0,#+1
   \   00000056   0xD01A             BEQ.N    ??APLICACAO_verifica_cctalk_5
   \   00000058   0x2804             CMP      R0,#+4
   \   0000005A   0xD118             BNE.N    ??APLICACAO_verifica_cctalk_6
    680                case TECLA_ENTER:
    681                      BOARD_reset_tempo_propaganda();
   \                     ??APLICACAO_verifica_cctalk_7:
   \   0000005C   0x.... 0x....      BL       BOARD_reset_tempo_propaganda
    682                      APLIACAO_wait_lcd();
   \   00000060   0x.... 0x....      BL       APLIACAO_wait_lcd
    683                      BOARD_liga_placa_instrucao(0);
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    684                      MCFG_entry();                     
   \   0000006A   0x.... 0x....      BL       MCFG_entry
    685                      BOARD_liga_placa_instrucao(1);
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    686                      idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000074   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000078   0x0004             MOVS     R4,R0
    687                      APLICACAO_release_lcd();             
   \   0000007A   0x.... 0x....      BL       APLICACAO_release_lcd
    688                      STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);              
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x.... 0x....      BL       STRING_write_to_internal
    689                      BOARD_reset_tempo_propaganda();
   \   00000088   0x.... 0x....      BL       BOARD_reset_tempo_propaganda
    690                     break;
   \   0000008C   0xE7FF             B.N      ??APLICACAO_verifica_cctalk_6
    691                case TECLA_ESC:
    692                     break;
    693              }    
    694              APLICACAO_tela_descanso();      
   \                     ??APLICACAO_verifica_cctalk_5:
   \                     ??APLICACAO_verifica_cctalk_6:
   \   0000008E   0x.... 0x....      BL       APLICACAO_tela_descanso
    695              vTaskDelay(500);
   \   00000092   0xF44F 0x70FA      MOV      R0,#+500
   \   00000096   0x.... 0x....      BL       vTaskDelay
   \   0000009A   0xE7D0             B.N      ??APLICACAO_verifica_cctalk_3
    696            }    
   \                     ??APLICACAO_verifica_cctalk_0:
   \   0000009C   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    697          }
    698          /***********************************************************************************
    699          *       Descrição       :       Faz a verificação cíclica dos sinais 
    700          *                               do papel e do termistor
    701          *       Parametros      :       nenhum
    702          *       Retorno         :       nenhum
    703          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    704          void APLICACAO_verificao_ciclica(void){
   \                     APLICACAO_verificao_ciclica:
   \   00000000   0xB580             PUSH     {R7,LR}
    705            
    706            switch(POST_verificacao_ciclica()){
   \   00000002   0x.... 0x....      BL       POST_verificacao_ciclica
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD003             BEQ.N    ??APLICACAO_verificao_ciclica_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD00A             BEQ.N    ??APLICACAO_verificao_ciclica_1
   \   0000000E   0xD301             BCC.N    ??APLICACAO_verificao_ciclica_2
   \   00000010   0xE00F             B.N      ??APLICACAO_verificao_ciclica_3
    707             case POST_CICLICO_SUCESSO:
    708                  break;
   \                     ??APLICACAO_verificao_ciclica_0:
   \   00000012   0xE00E             B.N      ??APLICACAO_verificao_ciclica_3
    709             case POST_CICLICO_FALHA_EMBALAGEM:
    710                  STRING_write_to_external(CLEAR_DISPLAY,"E03:FALTA","EMBALAGEM");
   \                     ??APLICACAO_verificao_ciclica_2:
   \   00000014   0x....             LDR.N    R2,??DataTable14_24
   \   00000016   0x....             LDR.N    R1,??DataTable14_25
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       STRING_write_to_external
    711                  APLICACAO_loop_falha_ciclica();
   \   0000001E   0x.... 0x....      BL       APLICACAO_loop_falha_ciclica
    712                  break;
   \   00000022   0xE006             B.N      ??APLICACAO_verificao_ciclica_3
    713             case POST_CICLICO_FALHA_TERMISTOR:
    714                  STRING_write_to_external(CLEAR_DISPLAY,"E04:FALHA","SENS. TEMP.");
   \                     ??APLICACAO_verificao_ciclica_1:
   \   00000024   0x....             LDR.N    R2,??DataTable14_26
   \   00000026   0x....             LDR.N    R1,??DataTable14_27
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       STRING_write_to_external
    715                  APLICACAO_loop_falha_ciclica();
   \   0000002E   0x.... 0x....      BL       APLICACAO_loop_falha_ciclica
    716                  break;
    717            }  
    718          }
   \                     ??APLICACAO_verificao_ciclica_3:
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    719          /***********************************************************************************
    720          *       Descrição       :       Menu do loop onde há a falha no sensor de
    721          *                               temperatura ou falta de embalagem
    722          *       Parametros      :       nenhum
    723          *       Retorno         :       nenhum
    724          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    725          void APLICACAO_loop_falha_ciclica(void){
   \                     APLICACAO_loop_falha_ciclica:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    726            eTECLA tecla;
    727            unsigned char loop=1;
   \   00000002   0x2501             MOVS     R5,#+1
    728              
    729            for(;loop;){
   \                     ??APLICACAO_loop_falha_ciclica_0:
   \   00000004   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000006   0x2D00             CMP      R5,#+0
   \   00000008   0xD010             BEQ.N    ??APLICACAO_loop_falha_ciclica_1
    730              
    731              tecla = TECLADO_getch();
   \   0000000A   0x.... 0x....      BL       TECLADO_getch
   \   0000000E   0x0004             MOVS     R4,R0
    732              switch(tecla){
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD004             BEQ.N    ??APLICACAO_loop_falha_ciclica_2
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xD104             BNE.N    ??APLICACAO_loop_falha_ciclica_3
    733                case TECLA_ENTER:
    734                    MCFG_entry();                     
   \                     ??APLICACAO_loop_falha_ciclica_4:
   \   0000001C   0x.... 0x....      BL       MCFG_entry
    735                     break;
   \   00000020   0xE001             B.N      ??APLICACAO_loop_falha_ciclica_3
    736                case TECLA_ESC:
    737                     loop = 0;
   \                     ??APLICACAO_loop_falha_ciclica_2:
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x0005             MOVS     R5,R0
    738                     break;
    739              }      
    740              
    741              APLICACAO_tela_descanso();    
   \                     ??APLICACAO_loop_falha_ciclica_3:
   \   00000026   0x.... 0x....      BL       APLICACAO_tela_descanso
   \   0000002A   0xE7EB             B.N      ??APLICACAO_loop_falha_ciclica_0
    742            }  
    743            
    744            STRING_write_to_internal(CLEAR_DISPLAY,"REINICIANDO","VERIFICACAO");
   \                     ??APLICACAO_loop_falha_ciclica_1:
   \   0000002C   0x....             LDR.N    R2,??DataTable14_28
   \   0000002E   0x....             LDR.N    R1,??DataTable14_29
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       STRING_write_to_internal
    745            vTaskDelay(3000);  
   \   00000036   0xF640 0x30B8      MOVW     R0,#+3000
   \   0000003A   0x.... 0x....      BL       vTaskDelay
    746          }
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    747          /***********************************************************************************
    748          *       Descrição       :       Ciclo de desumidificação da máquina
    749          *       Parametros      :       nenhum
    750          *       Retorno         :       nenhum
    751          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    752          void APLICACAO_ciclo_desumidificador(unsigned char flag){
   \                     APLICACAO_ciclo_desumidificador:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    753            
    754            if(flag && !APLICACAO_tempo_desumidificador){
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD042             BEQ.N    ??APLICACAO_ciclo_desumidificador_0
   \   0000000A   0x....             LDR.N    R0,??DataTable14
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD13E             BNE.N    ??APLICACAO_ciclo_desumidificador_0
    755              
    756              unsigned int tempo=30000;
   \   00000012   0xF247 0x5530      MOVW     R5,#+30000
    757              
    758              STRING_write_to_internal(CLEAR_DISPLAY,"CICLO DE","DESUMIDIFICACAO");
   \   00000016   0x....             LDR.N    R2,??DataTable14_30
   \   00000018   0x....             LDR.N    R1,??DataTable14_31
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       STRING_write_to_internal
    759              STRING_write_to_external(CLEAR_DISPLAY,"CICLO DE","DESUMIDIFICACAO");
   \   00000020   0x....             LDR.N    R2,??DataTable14_30
   \   00000022   0x....             LDR.N    R1,??DataTable14_31
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       STRING_write_to_external
    760              
    761              POTENCIA_set_neutro(1);
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       POTENCIA_set_neutro
    762              POTENCIA_setRPM(6000);
   \   00000030   0xF241 0x7070      MOVW     R0,#+6000
   \   00000034   0x.... 0x....      BL       POTENCIA_setRPM
    763              CT_set_temperatura(60);
   \   00000038   0x203C             MOVS     R0,#+60
   \   0000003A   0x.... 0x....      BL       CT_set_temperatura
    764              vTaskDelay(3000);
   \   0000003E   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000042   0x.... 0x....      BL       vTaskDelay
    765              
    766              while(tempo--){
   \                     ??APLICACAO_ciclo_desumidificador_1:
   \   00000046   0x0028             MOVS     R0,R5
   \   00000048   0x1E45             SUBS     R5,R0,#+1
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD012             BEQ.N    ??APLICACAO_ciclo_desumidificador_2
    767                
    768                if(POTENCIA_getRPMmedido()<1000){
   \   0000004E   0x.... 0x....      BL       POTENCIA_getRPMmedido
   \   00000052   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000056   0xD209             BCS.N    ??APLICACAO_ciclo_desumidificador_3
    769                  CT_set_temperatura(0);
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       CT_set_temperatura
    770                  POTENCIA_setRPM(0);
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       POTENCIA_setRPM
    771                  POTENCIA_set_neutro(0);        
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       POTENCIA_set_neutro
    772                  return;
   \   0000006A   0xE011             B.N      ??APLICACAO_ciclo_desumidificador_4
    773                }
    774                vTaskDelay(1);
   \                     ??APLICACAO_ciclo_desumidificador_3:
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0x.... 0x....      BL       vTaskDelay
   \   00000072   0xE7E8             B.N      ??APLICACAO_ciclo_desumidificador_1
    775              }
    776              
    777              CT_set_temperatura(0);
   \                     ??APLICACAO_ciclo_desumidificador_2:
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       CT_set_temperatura
    778              POTENCIA_setRPM(0);
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       POTENCIA_setRPM
    779              POTENCIA_set_neutro(0);
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       POTENCIA_set_neutro
    780              APLICACAO_verifica_post();
   \   00000086   0x.... 0x....      BL       APLICACAO_verifica_post
    781              APLICACAO_tempo_desumidificador = TEMPO_DESUMIDIFICADOR;
   \   0000008A   0x....             LDR.N    R0,??DataTable14
   \   0000008C   0x....             LDR.N    R1,??DataTable14_1  ;; 0x1b7740
   \   0000008E   0x6001             STR      R1,[R0, #+0]
    782            }
    783          }
   \                     ??APLICACAO_ciclo_desumidificador_0:
   \                     ??APLICACAO_ciclo_desumidificador_4:
   \   00000090   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     APLICACAO_tempo_desumidificador

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x001B7740         DC32     0x1b7740

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     STRING_mensagem_modo_gratis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x........         DC32     STRING_splash

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x........         DC32     STRING_mensagem_saudacao_maquina

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     APLICACAO_sem_LCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x........         DC32     `?<Constant "RPM:%05d T%03doC">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     `?<Constant "P:%04d M:%04d,%02d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     STRING_mensagem_preco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \   00000000   0x........         DC32     STRING_mensagem_pago

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \   00000000   0x........         DC32     APLICACAO_tempo_mensagem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \   00000000   0x........         DC32     ??indice

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \   00000000   0x........         DC32     STRING_mensagem_retire_troco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \   00000000   0x........         DC32     `?<Constant "E0:VENTILADOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_14:
   \   00000000   0x........         DC32     STRING_mensagem_fora_servico

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_15:
   \   00000000   0x........         DC32     `?<Constant "E1:AQUECIMENTO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_16:
   \   00000000   0x........         DC32     `?<Constant "E2:DOSADOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_17:
   \   00000000   0x........         DC32     `?<Constant "E3:EMBALAGEM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_18:
   \   00000000   0x........         DC32     STRING_liberando_troco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_19:
   \   00000000   0x........         DC32     `?<Constant "E0:MOTOR AR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_20:
   \   00000000   0x........         DC32     STRING_mensagem_sem_troco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_21:
   \   00000000   0x........         DC32     STRING_mensagem_noteiro_mdb_offline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_22:
   \   00000000   0x........         DC32     STRING_mensagem_moedeiro_mdb_offline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_23:
   \   00000000   0x........         DC32     STRING_mensagem_cctalk_offline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_24:
   \   00000000   0x........         DC32     `?<Constant "EMBALAGEM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_25:
   \   00000000   0x........         DC32     `?<Constant "E03:FALTA">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_26:
   \   00000000   0x........         DC32     `?<Constant "SENS. TEMP.">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_27:
   \   00000000   0x........         DC32     `?<Constant "E04:FALHA">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_28:
   \   00000000   0x........         DC32     `?<Constant "VERIFICACAO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_29:
   \   00000000   0x........         DC32     `?<Constant "REINICIANDO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_30:
   \   00000000   0x........         DC32     `?<Constant "DESUMIDIFICACAO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_31:
   \   00000000   0x........         DC32     `?<Constant "CICLO DE">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "RPM:%05d T%03doC">`:
   \   00000000   0x52 0x50          DC8 "RPM:%05d T%03doC"
   \              0x4D 0x3A    
   \              0x25 0x30    
   \              0x35 0x64    
   \              0x20 0x54    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x6F 0x43    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "P:%04d M:%04d,%02d">`:
   \   00000000   0x50 0x3A          DC8 "P:%04d M:%04d,%02d"
   \              0x25 0x30    
   \              0x34 0x64    
   \              0x20 0x4D    
   \              0x3A 0x25    
   \              0x30 0x34    
   \              0x64 0x2C    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E0:VENTILADOR">`:
   \   00000000   0x45 0x30          DC8 "E0:VENTILADOR"
   \              0x3A 0x56    
   \              0x45 0x4E    
   \              0x54 0x49    
   \              0x4C 0x41    
   \              0x44 0x4F    
   \              0x52 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E1:AQUECIMENTO">`:
   \   00000000   0x45 0x31          DC8 "E1:AQUECIMENTO"
   \              0x3A 0x41    
   \              0x51 0x55    
   \              0x45 0x43    
   \              0x49 0x4D    
   \              0x45 0x4E    
   \              0x54 0x4F    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E2:DOSADOR">`:
   \   00000000   0x45 0x32          DC8 "E2:DOSADOR"
   \              0x3A 0x44    
   \              0x4F 0x53    
   \              0x41 0x44    
   \              0x4F 0x52    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E3:EMBALAGEM">`:
   \   00000000   0x45 0x33          DC8 "E3:EMBALAGEM"
   \              0x3A 0x45    
   \              0x4D 0x42    
   \              0x41 0x4C    
   \              0x41 0x47    
   \              0x45 0x4D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "E0:MOTOR AR">`:
   \   00000000   0x45 0x30          DC8 "E0:MOTOR AR"
   \              0x3A 0x4D    
   \              0x4F 0x54    
   \              0x4F 0x52    
   \              0x20 0x41    
   \              0x52 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "E03:FALTA">`:
   \   00000000   0x45 0x30          DC8 "E03:FALTA"
   \              0x33 0x3A    
   \              0x46 0x41    
   \              0x4C 0x54    
   \              0x41 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "EMBALAGEM">`:
   \   00000000   0x45 0x4D          DC8 "EMBALAGEM"
   \              0x42 0x41    
   \              0x4C 0x41    
   \              0x47 0x45    
   \              0x4D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E04:FALHA">`:
   \   00000000   0x45 0x30          DC8 "E04:FALHA"
   \              0x34 0x3A    
   \              0x46 0x41    
   \              0x4C 0x48    
   \              0x41 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SENS. TEMP.">`:
   \   00000000   0x53 0x45          DC8 "SENS. TEMP."
   \              0x4E 0x53    
   \              0x2E 0x20    
   \              0x54 0x45    
   \              0x4D 0x50    
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "REINICIANDO">`:
   \   00000000   0x52 0x45          DC8 "REINICIANDO"
   \              0x49 0x4E    
   \              0x49 0x43    
   \              0x49 0x41    
   \              0x4E 0x44    
   \              0x4F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "VERIFICACAO">`:
   \   00000000   0x56 0x45          DC8 "VERIFICACAO"
   \              0x52 0x49    
   \              0x46 0x49    
   \              0x43 0x41    
   \              0x43 0x41    
   \              0x4F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "CICLO DE">`:
   \   00000000   0x43 0x49          DC8 "CICLO DE"
   \              0x43 0x4C    
   \              0x4F 0x20    
   \              0x44 0x45    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "DESUMIDIFICACAO">`:
   \   00000000   0x44 0x45          DC8 "DESUMIDIFICACAO"
   \              0x53 0x55    
   \              0x4D 0x49    
   \              0x44 0x49    
   \              0x46 0x49    
   \              0x43 0x41    
   \              0x43 0x41    
   \              0x4F 0x00    
    784          /***********************************************************************************
    785          *       Fim do arquivo
    786          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   APLIACAO_wait_lcd
         8   -> xQueueGenericReceive
       8   APLICACACAO_verifica_troco
         8   -> MDB_checa_troco
       8   APLICACAO_carrega_idioma
         8   -> PARAMETROS_le
      16   APLICACAO_ciclo_desumidificador
        16   -> APLICACAO_verifica_post
        16   -> CT_set_temperatura
        16   -> POTENCIA_getRPMmedido
        16   -> POTENCIA_setRPM
        16   -> POTENCIA_set_neutro
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> vTaskDelay
      64   APLICACAO_devolve_troco
        64   -> APLICACAO_carrega_idioma
        64   -> MDBCOIN_alternative_payout
        64   -> MDBCOIN_get_payout_status
        64   -> MDB_checa_valor_moedas
        64   -> PAGAMENTOS_get_valor_acumulado
        64   -> PAGAMENTOS_set_bloqueio
        64   -> PAGAMENTOS_subtrai_valores
        64   -> SMDB_release
        64   -> SMDB_wait
        64   -> STRING_write_to_external
        64   -> vTaskDelay
      40   APLICACAO_exibe_valor
        40   -> PAGAMENTOS_get_valor_acumulado
        40   -> PARAMETROS_le
        40   -> STRING_write_to_external
        40   -> sprintf
       8   APLICACAO_ini
         8   -> HD44780_2_init
         8   -> HD44780_init
         8   -> STRING_write_to_external
         8   -> STRING_write_to_internal
         8   -> xQueueCreate
         8   -> xQueueGenericSend
      16   APLICACAO_loop_falha_ciclica
        16   -> APLICACAO_tela_descanso
        16   -> MCFG_entry
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
        16   -> vTaskDelay
      24   APLICACAO_main
        24   -> APLIACAO_wait_lcd
        24   -> APLICACAO_carrega_idioma
        24   -> APLICACAO_ciclo_desumidificador
        24   -> APLICACAO_exibe_valor
        24   -> APLICACAO_ini
        24   -> APLICACAO_release_lcd
        24   -> APLICACAO_tela_descanso
        24   -> APLICACAO_verifica_MDB
        24   -> APLICACAO_verifica_cctalk
        24   -> APLICACAO_verifica_disponibilidade_troco
        24   -> APLICACAO_verifica_preparacao
        24   -> BOARD_liga_placa_instrucao
        24   -> BOARD_setter_contador_propaganda
        24   -> BOARD_setter_led_instrucao
        24   -> MCFG_entry
        24   -> PAGAMENTOS_adiciona_valores
        24   -> PAGAMENTOS_get_valor_acumulado
        24   -> PAGAMENTOS_set_bloqueio
        24   -> PAGAMENTOS_subtrai_valores
        24   -> PARAMETROS_le
        24   -> STRING_write_to_external
        24   -> STRING_write_to_internal
        24   -> TECLADO_getch
        24   -> vTaskDelay
       8   APLICACAO_menu_falha
         8   -> APLIACAO_wait_lcd
         8   -> APLICACAO_devolve_troco
         8   -> APLICACAO_release_lcd
         8   -> APLICACAO_tela_descanso
         8   -> BOARD_liga_placa_instrucao
         8   -> BOARD_setter_led_instrucao
         8   -> MCFG_entry
         8   -> PAGAMENTOS_set_bloqueio
         8   -> STRING_write_to_internal
         8   -> TECLADO_getch
       8   APLICACAO_release_lcd
         8   -> xQueueGenericSend
      40   APLICACAO_tela_descanso
        40   -> AA_calculaTemperatura
        40   -> AA_mediaMovelPapel
        40   -> PAGAMENTOS_get_valor_acumulado
        40   -> POTENCIA_getRPMmedido
        40   -> STRING_write_to_internal
        40   -> sprintf
      16   APLICACAO_verifica_MDB
        16   -> APLIACAO_wait_lcd
        16   -> APLICACAO_carrega_idioma
        16   -> APLICACAO_release_lcd
        16   -> APLICACAO_tela_descanso
        16   -> BOARD_liga_placa_instrucao
        16   -> MCFG_entry
        16   -> MDB_checa_dispositivos
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
        16   -> vTaskDelay
      24   APLICACAO_verifica_cctalk
        24   -> APLIACAO_wait_lcd
        24   -> APLICACAO_carrega_idioma
        24   -> APLICACAO_release_lcd
        24   -> APLICACAO_tela_descanso
        24   -> BOARD_liga_placa_instrucao
        24   -> BOARD_reset_tempo_propaganda
        24   -> BV20_get_current_state
        24   -> MCFG_entry
        24   -> PARAMETROS_le
        24   -> STRING_write_to_external
        24   -> STRING_write_to_internal
        24   -> TECLADO_getch
        24   -> vTaskDelay
      24   APLICACAO_verifica_disponibilidade_troco
        24   -> APLIACAO_wait_lcd
        24   -> APLICACACAO_verifica_troco
        24   -> APLICACAO_carrega_idioma
        24   -> APLICACAO_release_lcd
        24   -> APLICACAO_tela_descanso
        24   -> BOARD_liga_placa_instrucao
        24   -> BOARD_setter_led_instrucao
        24   -> MCFG_entry
        24   -> PAGAMENTOS_set_bloqueio
        24   -> PARAMETROS_le
        24   -> STRING_write_to_external
        24   -> STRING_write_to_internal
        24   -> TECLADO_getch
      16   APLICACAO_verifica_post
        16   -> APLIACAO_wait_lcd
        16   -> APLICACAO_carrega_idioma
        16   -> APLICACAO_release_lcd
        16   -> APLICACAO_tela_descanso
        16   -> BOARD_liga_placa_instrucao
        16   -> MCFG_entry
        16   -> PAGAMENTOS_set_bloqueio
        16   -> POST_entry
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
      24   APLICACAO_verifica_preparacao
        24   -> APLICACACAO_verifica_troco
        24   -> APLICACAO_devolve_troco
        24   -> APLICACAO_menu_falha
        24   -> BOARD_setter_contador_propaganda
        24   -> PAGAMENTOS_get_timeout_pagamento
        24   -> PAGAMENTOS_get_valor_acumulado
        24   -> PAGAMENTOS_set_bloqueio
        24   -> PAGAMENTOS_subtrai_valores
        24   -> PREPARACAO_entry
        24   -> PREPARACAO_resfriamento
        24   -> STRING_write_to_external
        24   -> STRING_write_to_internal
       8   APLICACAO_verificao_ciclica
         8   -> APLICACAO_loop_falha_ciclica
         8   -> POST_verificacao_ciclica
         8   -> STRING_write_to_external


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "CICLO DE">
      16  ?<Constant "DESUMIDIFICACAO">
      12  ?<Constant "E03:FALTA">
      12  ?<Constant "E04:FALHA">
      12  ?<Constant "E0:MOTOR AR">
      16  ?<Constant "E0:VENTILADOR">
      16  ?<Constant "E1:AQUECIMENTO">
      12  ?<Constant "E2:DOSADOR">
      16  ?<Constant "E3:EMBALAGEM">
      12  ?<Constant "EMBALAGEM">
      20  ?<Constant "P:%04d M:%04d,%02d">
      12  ?<Constant "REINICIANDO">
      20  ?<Constant "RPM:%05d T%03doC">
      12  ?<Constant "SENS. TEMP.">
      12  ?<Constant "VERIFICACAO">
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_14
       4  ??DataTable14_15
       4  ??DataTable14_16
       4  ??DataTable14_17
       4  ??DataTable14_18
       4  ??DataTable14_19
       4  ??DataTable14_2
       4  ??DataTable14_20
       4  ??DataTable14_21
       4  ??DataTable14_22
       4  ??DataTable14_23
       4  ??DataTable14_24
       4  ??DataTable14_25
       4  ??DataTable14_26
       4  ??DataTable14_27
       4  ??DataTable14_28
       4  ??DataTable14_29
       4  ??DataTable14_3
       4  ??DataTable14_30
       4  ??DataTable14_31
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
      24  APLIACAO_wait_lcd
      20  APLICACACAO_verifica_troco
      36  APLICACAO_carrega_idioma
     146  APLICACAO_ciclo_desumidificador
     222  APLICACAO_devolve_troco
     186  APLICACAO_exibe_valor
     118  APLICACAO_ini
      64  APLICACAO_loop_falha_ciclica
     352  APLICACAO_main
      90  APLICACAO_menu_falha
      20  APLICACAO_release_lcd
       4  APLICACAO_sem_LCD
     102  APLICACAO_tela_descanso
       4  APLICACAO_tempo_desumidificador
       4  APLICACAO_tempo_mensagem
      16  APLICACAO_tubos
     160  APLICACAO_verifica_MDB
     158  APLICACAO_verifica_cctalk
     230  APLICACAO_verifica_disponibilidade_troco
     214  APLICACAO_verifica_post
     310  APLICACAO_verifica_preparacao
      52  APLICACAO_verificao_ciclica
       1  indice

 
    25 bytes in section .bss
     4 bytes in section .data
   212 bytes in section .rodata
 2 632 bytes in section .text
 
 2 632 bytes of CODE  memory
   212 bytes of CONST memory
    29 bytes of DATA  memory

Errors: none
Warnings: none

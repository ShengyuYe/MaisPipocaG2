###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      06/Jul/2017  17:35:10 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\aplicacao.c                     #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Aplicacao\aplicacao.c -lC                 #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\aplicacao.lst                  #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\aplicacao.o                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\aplicacao.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  aplicacao.c
     18          | 
     19          |       Autor              :  Marcos Aquino
     20          |       Data criação       :  22/04/2017
     21          |
     22          |       Revisões           :  001
     23          |
     24          |                             (22/04/2017) criado módulo de controle da preparação (Marcos)
     25          |                             (25/05/2017) alterado para criar o flag que habilita o 
     26          |                                          uso do troco ou não
     27          |                             (23/07/2017) Alterado para só rodar o bloco de verificação
     28          |                                          do CCTALK quando ele estiver habilitado
     29          |                                          nos acessórios
     30          |
     31          | __________________________________________________________________________________
     32          */
     33          
     34          /***********************************************************************************
     35          *       Includes
     36          ***********************************************************************************/
     37          #include <stdio.h>
     38          #include <stdlib.h>
     39          #include <string.h>
     40          #include "aplicacao.h"
     41          #include "..\includes.h"
     42          
     43          /***********************************************************************************
     44          *       Constantes
     45          ***********************************************************************************/
     46          #define TEMPO_DESUMIDIFICADOR                   1000*60*30
     47          #define TEMPO_MENSAGEM_LINHA_INFERIOR           10000
     48          
     49          #define _DEBUG_PAGAMENTOS_
     50          
     51          /***********************************************************************************
     52          *       Enumerações
     53          ***********************************************************************************/
     54          
     55          
     56          /***********************************************************************************
     57          *       Variaveis 
     58          ***********************************************************************************/

   \                                 In section .bss, align 4
     59          xSemaphoreHandle  APLICACAO_sem_LCD;
   \                     APLICACAO_sem_LCD:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     60          unsigned char APLICACAO_tubos[16]={0};
   \                     APLICACAO_tubos:
   \   00000000                      DS8 16

   \                                 In section .data, align 4
     61          unsigned int APLICACAO_tempo_desumidificador=30*1000;//TEMPO_DESUMIDIFICADOR;
   \                     APLICACAO_tempo_desumidificador:
   \   00000000   0x00007530         DC32 30000

   \                                 In section .bss, align 4
     62          unsigned int APLICACAO_tempo_mensagem=0;
   \                     APLICACAO_tempo_mensagem:
   \   00000000                      DS8 4
     63          /***********************************************************************************
     64          *       Funções
     65          ***********************************************************************************/
     66          void APLICACAO_ini(void);
     67          void APLICACAO_tela_descanso(void);
     68          void APLICACAO_exibe_valor(unsigned char idioma);
     69          unsigned int APLICACACAO_verifica_troco(void);
     70          void APLICACAO_verifica_preparacao(unsigned int valor_pipoca,unsigned char idioma,unsigned char troco);
     71          void APLICACAO_menu_falha(void);
     72          unsigned char APLICACAO_devolve_troco(void);
     73          unsigned char APLICACAO_verifica_post(void);
     74          void APLICACAO_verifica_disponibilidade_troco(unsigned char idioma);
     75          void APLICACAO_verifica_MDB(void);
     76          void APLICACAO_verifica_preparacao(unsigned int valor_pipoca,unsigned char idioma,
     77                                             unsigned char troco);
     78          void APLICACAO_verifica_cctalk(void);
     79          void APLICACAO_verificao_ciclica(void);
     80          void APLICACAO_loop_falha_ciclica(void);
     81          void APLICACAO_ciclo_desumidificador(unsigned char flag);
     82          
     83          void APLICACAO_teste_arquivo(void);
     84          /***********************************************************************************
     85          *       Implementação das funções
     86          ***********************************************************************************/
     87          
     88          /***********************************************************************************
     89          *       Descrição       :       Função principal da interface de usuário
     90          *       Parametros      :       nenhum
     91          *       Retorno         :       nenhum
     92          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     93          void APLICACAO_main(void*pPar){
   \                     APLICACAO_main:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
     94            eTECLA tecla;
     95            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
     96            unsigned int valorPipoca;
     97            unsigned char modo_gratis;
     98            unsigned char modo_troco;
     99            unsigned char flag_desumidificador;
    100            
    101            APLICACAO_ini();
   \   00000008   0x.... 0x....      BL       APLICACAO_ini
    102            
    103            PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valorPipoca);
   \   0000000C   0xA901             ADD      R1,SP,#+4
   \   0000000E   0x2003             MOVS     R0,#+3
   \   00000010   0x.... 0x....      BL       PARAMETROS_le
    104            PARAMETROS_le(ADR_FLAG_FREE,(void*)&modo_gratis);
   \   00000014   0xF10D 0x0101      ADD      R1,SP,#+1
   \   00000018   0x2020             MOVS     R0,#+32
   \   0000001A   0x.... 0x....      BL       PARAMETROS_le
    105            PARAMETROS_le(ADR_FLAG_TROCO,(void*)&modo_troco);
   \   0000001E   0xA900             ADD      R1,SP,#+0
   \   00000020   0x2022             MOVS     R0,#+34
   \   00000022   0x.... 0x....      BL       PARAMETROS_le
    106            PARAMETROS_le(ADR_FLAG_DESUMIDIFICADOR,(void*)&flag_desumidificador);
   \   00000026   0xF10D 0x0102      ADD      R1,SP,#+2
   \   0000002A   0x2026             MOVS     R0,#+38
   \   0000002C   0x.... 0x....      BL       PARAMETROS_le
    107            
    108          #ifndef _DEBUG_PAGAMENTOS_
    109            vTaskDelay(3000);
    110            PREPARACAO_limpeza_inicial(idioma);
    111          #endif
    112            
    113            
    114            STRING_write_to_external(CLEAR_DISPLAY,NULL,NULL);
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      BL       STRING_write_to_external
    115            
    116            BOARD_liga_placa_instrucao(1); // Liga a placa de instrução  
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    117            
    118            BOARD_setter_contador_propaganda(0); // Deixa a propaganda agendada para o primeiro ciclo
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       BOARD_setter_contador_propaganda
    119            
    120          #ifndef _DEBUG_PAGAMENTOS_  
    121            APLICACAO_verifica_post();
    122          #endif
    123              
    124            PAGAMENTOS_subtrai_valores(PAGAMENTOS_get_valor_acumulado());
   \   00000046   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000004A   0x.... 0x....      BL       PAGAMENTOS_subtrai_valores
    125            PAGAMENTOS_set_bloqueio(0);
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
   \   00000054   0xE023             B.N      ??APLICACAO_main_0
    126            
    127            for(;;){
    128              
    129              PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valorPipoca);
    130              PARAMETROS_le(ADR_FLAG_FREE,(void*)&modo_gratis);
    131              PARAMETROS_le(ADR_FLAG_TROCO,(void*)&modo_troco);    
    132              
    133              tecla = TECLADO_getch();
    134              switch(tecla){
    135                case TECLA_INC:           
    136                     APLICACAO_teste_arquivo();
    137                     break;
    138                case TECLA_DEC:
    139                     break;
    140                case TECLA_ENTER:
    141                     APLIACAO_wait_lcd();
    142                       BOARD_liga_placa_instrucao(0);
    143                       MCFG_entry();                     
    144                       BOARD_liga_placa_instrucao(1);
    145                       idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
    146                       
    147                       PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valorPipoca);
    148                       PARAMETROS_le(ADR_FLAG_FREE,(void*)&modo_gratis);
    149                       PARAMETROS_le(ADR_FLAG_TROCO,(void*)&modo_troco);
    150                       
    151                       APLICACAO_tempo_desumidificador=TEMPO_DESUMIDIFICADOR;
    152                       
    153                     APLICACAO_release_lcd();  
    154                     
    155                     STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
    156                     break;
    157                case TECLA_ESC:
    158                     break;
    159                case TECLA_GRATIS:
    160                     if(modo_gratis)
    161                       PAGAMENTOS_adiciona_valores(valorPipoca);
    162                     break;      
    163              }
    164              
    165              if(modo_gratis)
    166                STRING_write_to_external(NO_CLEAR,(void*)STRING_mensagem_modo_gratis[idioma][0],(void*)STRING_mensagem_modo_gratis[idioma][1]);
    167              else{
    168                APLICACAO_exibe_valor(idioma);     
   \                     ??APLICACAO_main_1:
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       APLICACAO_exibe_valor
    169                if(modo_troco)
   \   0000005E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD003             BEQ.N    ??APLICACAO_main_2
    170                  APLICACAO_verifica_disponibilidade_troco(idioma);
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       APLICACAO_verifica_disponibilidade_troco
    171                // Verifica a conectividade dos
    172                // meios de pagamento seriais
    173                APLICACAO_verifica_MDB();
   \                     ??APLICACAO_main_2:
   \   0000006E   0x.... 0x....      BL       APLICACAO_verifica_MDB
    174                APLICACAO_verifica_cctalk();
   \   00000072   0x.... 0x....      BL       APLICACAO_verifica_cctalk
    175              }
    176              
    177              APLICACAO_verifica_preparacao(valorPipoca,idioma,modo_troco);             
   \                     ??APLICACAO_main_3:
   \   00000076   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   0000007A   0x0021             MOVS     R1,R4
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0x9801             LDR      R0,[SP, #+4]
   \   00000080   0x.... 0x....      BL       APLICACAO_verifica_preparacao
    178              BOARD_setter_led_instrucao(LED_INSIRA_DINHEIRO,PISCANDO); // Ativa o modo inserir dinheiro
   \   00000084   0x2102             MOVS     R1,#+2
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0x.... 0x....      BL       BOARD_setter_led_instrucao
    179              APLICACAO_tela_descanso();    
   \   0000008C   0x.... 0x....      BL       APLICACAO_tela_descanso
    180          #ifndef _DEBUG_PAGAMENTOS_    
    181              APLICACAO_verificao_ciclica();
    182          #endif
    183              vTaskDelay(50);
   \   00000090   0x2032             MOVS     R0,#+50
   \   00000092   0x.... 0x....      BL       vTaskDelay
    184              APLICACAO_ciclo_desumidificador(flag_desumidificador);
   \   00000096   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   0000009A   0x.... 0x....      BL       APLICACAO_ciclo_desumidificador
   \                     ??APLICACAO_main_0:
   \   0000009E   0xA901             ADD      R1,SP,#+4
   \   000000A0   0x2003             MOVS     R0,#+3
   \   000000A2   0x.... 0x....      BL       PARAMETROS_le
   \   000000A6   0xF10D 0x0101      ADD      R1,SP,#+1
   \   000000AA   0x2020             MOVS     R0,#+32
   \   000000AC   0x.... 0x....      BL       PARAMETROS_le
   \   000000B0   0xA900             ADD      R1,SP,#+0
   \   000000B2   0x2022             MOVS     R0,#+34
   \   000000B4   0x.... 0x....      BL       PARAMETROS_le
   \   000000B8   0x.... 0x....      BL       TECLADO_getch
   \   000000BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BE   0x2801             CMP      R0,#+1
   \   000000C0   0xD032             BEQ.N    ??APLICACAO_main_4
   \   000000C2   0xD33A             BCC.N    ??APLICACAO_main_5
   \   000000C4   0x2803             CMP      R0,#+3
   \   000000C6   0xD007             BEQ.N    ??APLICACAO_main_6
   \   000000C8   0xD303             BCC.N    ??APLICACAO_main_7
   \   000000CA   0x2805             CMP      R0,#+5
   \   000000CC   0xD02D             BEQ.N    ??APLICACAO_main_8
   \   000000CE   0xD304             BCC.N    ??APLICACAO_main_9
   \   000000D0   0xE033             B.N      ??APLICACAO_main_5
   \                     ??APLICACAO_main_7:
   \   000000D2   0x.... 0x....      BL       APLICACAO_teste_arquivo
   \   000000D6   0xE030             B.N      ??APLICACAO_main_5
   \                     ??APLICACAO_main_6:
   \   000000D8   0xE02F             B.N      ??APLICACAO_main_5
   \                     ??APLICACAO_main_9:
   \   000000DA   0x.... 0x....      BL       APLIACAO_wait_lcd
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   000000E4   0x.... 0x....      BL       MCFG_entry
   \   000000E8   0x2001             MOVS     R0,#+1
   \   000000EA   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   000000EE   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   000000F2   0x0004             MOVS     R4,R0
   \   000000F4   0xA901             ADD      R1,SP,#+4
   \   000000F6   0x2003             MOVS     R0,#+3
   \   000000F8   0x.... 0x....      BL       PARAMETROS_le
   \   000000FC   0xF10D 0x0101      ADD      R1,SP,#+1
   \   00000100   0x2020             MOVS     R0,#+32
   \   00000102   0x.... 0x....      BL       PARAMETROS_le
   \   00000106   0xA900             ADD      R1,SP,#+0
   \   00000108   0x2022             MOVS     R0,#+34
   \   0000010A   0x.... 0x....      BL       PARAMETROS_le
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable15_1  ;; 0x1b7740
   \   00000116   0x6001             STR      R1,[R0, #+0]
   \   00000118   0x.... 0x....      BL       APLICACAO_release_lcd
   \   0000011C   0x2200             MOVS     R2,#+0
   \   0000011E   0x2100             MOVS     R1,#+0
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x.... 0x....      BL       STRING_write_to_internal
   \   00000126   0xE008             B.N      ??APLICACAO_main_5
   \                     ??APLICACAO_main_4:
   \   00000128   0xE007             B.N      ??APLICACAO_main_5
   \                     ??APLICACAO_main_8:
   \   0000012A   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   0000012E   0x2800             CMP      R0,#+0
   \   00000130   0xD003             BEQ.N    ??APLICACAO_main_10
   \   00000132   0x9801             LDR      R0,[SP, #+4]
   \   00000134   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000136   0x.... 0x....      BL       PAGAMENTOS_adiciona_valores
   \                     ??APLICACAO_main_10:
   \                     ??APLICACAO_main_5:
   \   0000013A   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   0000013E   0x2800             CMP      R0,#+0
   \   00000140   0xD089             BEQ.N    ??APLICACAO_main_1
   \   00000142   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \   00000148   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000014C   0x6842             LDR      R2,[R0, #+4]
   \   0000014E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \   00000154   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000158   0x2001             MOVS     R0,#+1
   \   0000015A   0x.... 0x....      BL       STRING_write_to_external
   \   0000015E   0xE78A             B.N      ??APLICACAO_main_3
    185            }   
    186          }
    187          /***********************************************************************************
    188          *       Descrição       :       Inicialização do ódulo
    189          *       Parametros      :       nenhum
    190          *       Retorno         :       nenhum
    191          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    192          void APLICACAO_ini(void){
   \                     APLICACAO_ini:
   \   00000000   0xB510             PUSH     {R4,LR}
    193            eIDIOMA idioma  = BRASIL;
   \   00000002   0x2400             MOVS     R4,#+0
    194                 
    195            HD44780_init(LCD_DISPLAY_8X5 | LCD_2_LINHAS,
    196                         LCD_DISPLAY_LIGADO | LCD_CURSOR_DESLIGADO | LCD_CURSOR_FIXO);     
   \   00000004   0x2104             MOVS     R1,#+4
   \   00000006   0x2008             MOVS     R0,#+8
   \   00000008   0x.... 0x....      BL       HD44780_init
    197            
    198            HD44780_2_init(LCD_DISPLAY_8X5 | LCD_2_LINHAS,
    199                           LCD_DISPLAY_LIGADO | LCD_CURSOR_DESLIGADO | LCD_CURSOR_FIXO);       
   \   0000000C   0x2104             MOVS     R1,#+4
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0x.... 0x....      BL       HD44780_2_init
    200            
    201            STRING_write_to_internal(CLEAR_DISPLAY,
    202                                     (char*)STRING_splash[idioma][0],
    203                                     (char*)STRING_splash[idioma][1]);      
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable15_3
   \   0000001A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001E   0x6842             LDR      R2,[R0, #+4]
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable15_3
   \   00000026   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       STRING_write_to_internal
    204            
    205            STRING_write_to_external(CLEAR_DISPLAY,
    206                                     (char*)STRING_mensagem_saudacao_maquina[idioma][0],
    207                                     (char*)STRING_mensagem_saudacao_maquina[idioma][1]);      
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable15_4
   \   00000036   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000003A   0x6842             LDR      R2,[R0, #+4]
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable15_4
   \   00000042   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       STRING_write_to_external
    208            
    209            vSemaphoreCreateBinary(APLICACAO_sem_LCD);
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       xQueueCreate
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD007             BEQ.N    ??APLICACAO_ini_0
   \   00000064   0x2300             MOVS     R3,#+0
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x.... 0x....      BL       xQueueGenericSend
    210          }
   \                     ??APLICACAO_ini_0:
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
    211          /***********************************************************************************
    212          *       Descrição       :       Semáforo para acessar o LCD
    213          *       Parametros      :       nenhum
    214          *       Retorno         :       nenhum
    215          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    216          void APLIACAO_wait_lcd(void){
   \                     APLIACAO_wait_lcd:
   \   00000000   0xB580             PUSH     {R7,LR}
    217            
    218            while(!xSemaphoreTake(APLICACAO_sem_LCD,portTICK_RATE_MS*1));
   \                     ??APLIACAO_wait_lcd_0:
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       xQueueGenericReceive
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD0F5             BEQ.N    ??APLIACAO_wait_lcd_0
    219          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    220          /***********************************************************************************
    221          *       Descrição       :       Libera o semáforo do LCD
    222          *       Parametros      :       nenhum
    223          *       Retorno         :       nenhum
    224          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    225          void APLICACAO_release_lcd(void){
   \                     APLICACAO_release_lcd:
   \   00000000   0xB580             PUSH     {R7,LR}
    226            
    227            xSemaphoreGive(APLICACAO_sem_LCD);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       xQueueGenericSend
    228          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    229          /***********************************************************************************
    230          *       Descrição       :       Funções para carregar o idioma
    231          *       Parametros      :       nenhum
    232          *       Retorno         :       nenhum
    233          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    234          unsigned char APLICACAO_carrega_idioma(void){
   \                     APLICACAO_carrega_idioma:
   \   00000000   0xB580             PUSH     {R7,LR}
    235            unsigned char idioma  = BRASIL;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
    236            
    237            PARAMETROS_le(ADR_FLAG_IDIOMA,(void*)&idioma);  
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       PARAMETROS_le
    238            if(idioma>QTY_OF_LANGUAGES)
   \   00000010   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000014   0x2808             CMP      R0,#+8
   \   00000016   0xDB02             BLT.N    ??APLICACAO_carrega_idioma_0
    239              idioma = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    240            
    241            return idioma;
   \                     ??APLICACAO_carrega_idioma_0:
   \   0000001E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000022   0xBD02             POP      {R1,PC}          ;; return
    242          }
    243          /***********************************************************************************
    244          *       Descrição       :       Tela de descanso do display interno
    245          *       Parametros      :       nenhum
    246          *       Retorno         :       nenhum
    247          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    248          void APLICACAO_tela_descanso(void){
   \                     APLICACAO_tela_descanso:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    249            char buffer_linha[17];
    250            
    251            sprintf(buffer_linha,"RPM:%05d T%03doC",POTENCIA_getRPMmedido(),AA_calculaTemperatura());
   \   00000004   0x.... 0x....      BL       AA_calculaTemperatura
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x.... 0x....      BL       POTENCIA_getRPMmedido
   \   0000000E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000010   0x0023             MOVS     R3,R4
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable15_6
   \   00000018   0xA801             ADD      R0,SP,#+4
   \   0000001A   0x.... 0x....      BL       sprintf
    252            STRING_write_to_internal(NO_CLEAR,buffer_linha,NULL);    
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0xA901             ADD      R1,SP,#+4
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x.... 0x....      BL       STRING_write_to_internal
    253            
    254            sprintf(buffer_linha,"P:%04d M:%04d,%02d",AA_mediaMovelPapel(),
    255                                                      PAGAMENTOS_get_valor_acumulado()/100,
    256                                                      PAGAMENTOS_get_valor_acumulado()%100);
   \   00000028   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000002C   0x0004             MOVS     R4,R0
   \   0000002E   0x2564             MOVS     R5,#+100
   \   00000030   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   00000034   0x0006             MOVS     R6,R0
   \   00000036   0x.... 0x....      BL       AA_mediaMovelPapel
   \   0000003A   0xFB94 0xF1F5      SDIV     R1,R4,R5
   \   0000003E   0xFB05 0x4111      MLS      R1,R5,R1,R4
   \   00000042   0x9100             STR      R1,[SP, #+0]
   \   00000044   0x2164             MOVS     R1,#+100
   \   00000046   0xFB96 0xF3F1      SDIV     R3,R6,R1
   \   0000004A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004C   0x0002             MOVS     R2,R0
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable15_7
   \   00000052   0xA801             ADD      R0,SP,#+4
   \   00000054   0x.... 0x....      BL       sprintf
    257            
    258            STRING_write_to_internal(NO_CLEAR,NULL,buffer_linha);
   \   00000058   0xAA01             ADD      R2,SP,#+4
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       STRING_write_to_internal
    259          }
   \   00000062   0xB006             ADD      SP,SP,#+24
   \   00000064   0xBD70             POP      {R4-R6,PC}       ;; return
    260          /***********************************************************************************
    261          *       Descrição       :       Exibe o valor da pipoca e 
    262          *                               o quanto já foi pago pelo cliente
    263          *       Parametros      :       nenhum
    264          *       Retorno         :       nenhum
    265          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    266          void APLICACAO_exibe_valor(unsigned char idioma){
   \                     APLICACAO_exibe_valor:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x0004             MOVS     R4,R0
    267            unsigned int valor;
    268            char buffer_linha[17];
    269            static unsigned char indice=0;
    270            
    271            PARAMETROS_le(ADR_VALOR_PIPOCA,(void*)&valor);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    272            sprintf(buffer_linha,STRING_mensagem_preco[idioma],valor/100,valor%100);
   \   0000000E   0x9800             LDR      R0,[SP, #+0]
   \   00000010   0x2164             MOVS     R1,#+100
   \   00000012   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000016   0xFB01 0x0312      MLS      R3,R1,R2,R0
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
   \   0000001C   0x2164             MOVS     R1,#+100
   \   0000001E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable15_8
   \   00000028   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000002C   0xA801             ADD      R0,SP,#+4
   \   0000002E   0x.... 0x....      BL       sprintf
    273            STRING_write_to_external(NO_CLEAR,buffer_linha,NULL);    
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0xA901             ADD      R1,SP,#+4
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       STRING_write_to_external
    274            
    275            unsigned int pago = PAGAMENTOS_get_valor_acumulado();
   \   0000003C   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
    276            
    277            if(pago){    
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD015             BEQ.N    ??APLICACAO_exibe_valor_0
    278              sprintf(buffer_linha,STRING_mensagem_pago[idioma],pago/100,pago%100);
   \   00000044   0x2164             MOVS     R1,#+100
   \   00000046   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000004A   0xFB01 0x0312      MLS      R3,R1,R2,R0
   \   0000004E   0x2164             MOVS     R1,#+100
   \   00000050   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable15_9
   \   0000005A   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   0000005E   0xA801             ADD      R0,SP,#+4
   \   00000060   0x.... 0x....      BL       sprintf
    279              STRING_write_to_external(NO_CLEAR,NULL,buffer_linha);
   \   00000064   0xAA01             ADD      R2,SP,#+4
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x.... 0x....      BL       STRING_write_to_external
   \   0000006E   0xE021             B.N      ??APLICACAO_exibe_valor_1
    280            }
    281            else{
    282              if(!APLICACAO_tempo_mensagem){
   \                     ??APLICACAO_exibe_valor_0:
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable15_10
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD110             BNE.N    ??APLICACAO_exibe_valor_2
    283                indice = (indice+1) % 4;
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable15_11
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x1C40             ADDS     R0,R0,#+1
   \   00000082   0x2104             MOVS     R1,#+4
   \   00000084   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000088   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable15_11
   \   00000090   0x7002             STRB     R2,[R0, #+0]
    284                APLICACAO_tempo_mensagem = TEMPO_MENSAGEM_LINHA_INFERIOR;
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable15_10
   \   00000096   0xF242 0x7110      MOVW     R1,#+10000
   \   0000009A   0x6001             STR      R1,[R0, #+0]
    285              }
    286              PARAMETROS_le(ADR_MENSAGEM_CLIENTE_01+indice,(void*)buffer_linha);
   \                     ??APLICACAO_exibe_valor_2:
   \   0000009C   0xA901             ADD      R1,SP,#+4
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable15_11
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x303C             ADDS     R0,R0,#+60
   \   000000A6   0x.... 0x....      BL       PARAMETROS_le
    287              STRING_write_to_external(NO_CLEAR,NULL,buffer_linha);
   \   000000AA   0xAA01             ADD      R2,SP,#+4
   \   000000AC   0x2100             MOVS     R1,#+0
   \   000000AE   0x2001             MOVS     R0,#+1
   \   000000B0   0x.... 0x....      BL       STRING_write_to_external
    288            }
    289          }
   \                     ??APLICACAO_exibe_valor_1:
   \   000000B4   0xB006             ADD      SP,SP,#+24
   \   000000B6   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??indice:
   \   00000000                      DS8 1
    290          /***********************************************************************************
    291          *       Descrição       :       Verifica a contagem dos tubos de moeda
    292          *       Parametros      :       nenhum
    293          *       Retorno         :       (unsigned char) maior do que zero se há troco
    294          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    295          unsigned int APLICACACAO_verifica_troco(void){
   \                     APLICACACAO_verifica_troco:
   \   00000000   0xB580             PUSH     {R7,LR}
    296            
    297            if(MDB_coin_check_tubes(APLICACAO_tubos)){      
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable15_12
   \   00000006   0x.... 0x....      BL       MDB_coin_check_tubes
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD005             BEQ.N    ??APLICACACAO_verifica_troco_0
    298              return APLICACAO_tubos[2]*25;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable15_12
   \   00000012   0x7880             LDRB     R0,[R0, #+2]
   \   00000014   0x2119             MOVS     R1,#+25
   \   00000016   0x4348             MULS     R0,R1,R0
   \   00000018   0xE000             B.N      ??APLICACACAO_verifica_troco_1
    299            }
    300            
    301            return 0;
   \                     ??APLICACACAO_verifica_troco_0:
   \   0000001A   0x2000             MOVS     R0,#+0
   \                     ??APLICACACAO_verifica_troco_1:
   \   0000001C   0xBD02             POP      {R1,PC}          ;; return
    302          }
    303          /***********************************************************************************
    304          *       Descrição       :       Faz a verificação dos pagamentos para
    305          *                               iniciar o ciclo de preparação
    306          *       Parametros      :       (unsigned int) valor da pipoca
    307          *       Retorno         :       nenhum
    308          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    309          void APLICACAO_verifica_preparacao(unsigned int valor_pipoca,unsigned char idioma,
    310                                             unsigned char troco){
   \                     APLICACAO_verifica_preparacao:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0016             MOVS     R6,R2
    311             unsigned int ajuste;
    312            
    313            if( PAGAMENTOS_get_valor_acumulado()>=valor_pipoca) {      
   \   0000000A   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000000E   0x42A8             CMP      R0,R5
   \   00000010   0xF0C0 0x8083      BCC.W    ??APLICACAO_verifica_preparacao_0
    314              
    315              if(troco==OPERA_SEM_TROCO || APLICACACAO_verifica_troco()>=valor_pipoca){     
   \   00000014   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000016   0x2E00             CMP      R6,#+0
   \   00000018   0xD003             BEQ.N    ??APLICACAO_verifica_preparacao_1
   \   0000001A   0x.... 0x....      BL       APLICACACAO_verifica_troco
   \   0000001E   0x42A8             CMP      R0,R5
   \   00000020   0xD372             BCC.N    ??APLICACAO_verifica_preparacao_2
    316                // Switch para 
    317                // capturar os resultados da execução do processo
    318                switch(PREPARACAO_entry(&ajuste,CONTABILIZA)){
   \                     ??APLICACAO_verifica_preparacao_1:
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       PREPARACAO_entry
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD006             BEQ.N    ??APLICACAO_verifica_preparacao_3
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD03B             BEQ.N    ??APLICACAO_verifica_preparacao_4
   \   00000032   0xD32A             BCC.N    ??APLICACAO_verifica_preparacao_5
   \   00000034   0x2804             CMP      R0,#+4
   \   00000036   0xD058             BEQ.N    ??APLICACAO_verifica_preparacao_6
   \   00000038   0xD347             BCC.N    ??APLICACAO_verifica_preparacao_7
   \   0000003A   0xE065             B.N      ??APLICACAO_verifica_preparacao_2
    319                  case SUCESSO:
    320                       PAGAMENTOS_subtrai_valores(valor_pipoca);          
   \                     ??APLICACAO_verifica_preparacao_3:
   \   0000003C   0x0028             MOVS     R0,R5
   \   0000003E   0x.... 0x....      BL       PAGAMENTOS_subtrai_valores
    321                       // Devolve o troco caso ainda reste valor
    322                       // pago no acumulador de moeda
    323                       if(troco==OPERA_COM_TROCO && PAGAMENTOS_get_valor_acumulado()){               
   \   00000042   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000044   0x2EFF             CMP      R6,#+255
   \   00000046   0xD113             BNE.N    ??APLICACAO_verifica_preparacao_8
   \   00000048   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD00F             BEQ.N    ??APLICACAO_verifica_preparacao_8
    324                         STRING_write_to_external(CLEAR_DISPLAY,
    325                                                  (char*)STRING_mensagem_retire_troco[idioma][0],
    326                                                  (char*)STRING_mensagem_retire_troco[idioma][1]);
   \   00000050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable15_13
   \   00000056   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000005A   0x6842             LDR      R2,[R0, #+4]
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable15_13
   \   00000062   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       STRING_write_to_external
    327                         APLICACAO_devolve_troco();      
   \   0000006C   0x.... 0x....      BL       APLICACAO_devolve_troco
    328                       }
    329                       PREPARACAO_resfriamento(idioma);
   \                     ??APLICACAO_verifica_preparacao_8:
   \   00000070   0x0020             MOVS     R0,R4
   \   00000072   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000074   0x.... 0x....      BL       PREPARACAO_resfriamento
    330                       STRING_write_to_external(CLEAR_DISPLAY,NULL,NULL);                
   \   00000078   0x2200             MOVS     R2,#+0
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       STRING_write_to_external
    331                       PAGAMENTOS_set_bloqueio(0);
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    332                       break;
   \   00000088   0xE03E             B.N      ??APLICACAO_verifica_preparacao_2
    333                  case FALHA_VENTILADOR:
    334                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E0:VENTILADOR");                       
   \                     ??APLICACAO_verifica_preparacao_5:
   \   0000008A   0x.... 0x....      LDR.W    R2,??DataTable15_14
   \   0000008E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   00000094   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x.... 0x....      BL       STRING_write_to_external
    335                       APLICACAO_menu_falha();
   \   0000009E   0x.... 0x....      BL       APLICACAO_menu_falha
    336                       PAGAMENTOS_set_bloqueio(0);             
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    337                       break;
   \   000000A8   0xE02E             B.N      ??APLICACAO_verifica_preparacao_2
    338                  case FALHA_RESISTENCIA:
    339                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E1:AQUECIMENTO");
   \                     ??APLICACAO_verifica_preparacao_4:
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable15_16
   \   000000AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   000000B4   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       STRING_write_to_external
    340                       APLICACAO_menu_falha();
   \   000000BE   0x.... 0x....      BL       APLICACAO_menu_falha
    341                       PAGAMENTOS_set_bloqueio(0);             
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    342                       break;
   \   000000C8   0xE01E             B.N      ??APLICACAO_verifica_preparacao_2
    343                  case FALHA_DOSE:
    344                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E2:DOSADOR");          
   \                     ??APLICACAO_verifica_preparacao_7:
   \   000000CA   0x.... 0x....      LDR.W    R2,??DataTable15_17
   \   000000CE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   000000D4   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      BL       STRING_write_to_external
    345                       APLICACAO_menu_falha();
   \   000000DE   0x.... 0x....      BL       APLICACAO_menu_falha
    346                       PAGAMENTOS_set_bloqueio(0);             
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    347                       break;
   \   000000E8   0xE00E             B.N      ??APLICACAO_verifica_preparacao_2
    348                  case FALHA_EMBALAGEM:
    349                       STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E3:EMBALAGEM");                                                 
   \                     ??APLICACAO_verifica_preparacao_6:
   \   000000EA   0x.... 0x....      LDR.W    R2,??DataTable15_18
   \   000000EE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   000000F4   0xF850 0x1024      LDR      R1,[R0, R4, LSL #+2]
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0x.... 0x....      BL       STRING_write_to_external
    350                       APLICACAO_menu_falha();
   \   000000FE   0x.... 0x....      BL       APLICACAO_menu_falha
    351                       PAGAMENTOS_set_bloqueio(0);
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    352                       break;
    353                }     
    354              }
    355                   
    356              STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);
   \                     ??APLICACAO_verifica_preparacao_2:
   \   00000108   0x2200             MOVS     R2,#+0
   \   0000010A   0x2100             MOVS     R1,#+0
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x.... 0x....      BL       STRING_write_to_internal
    357              BOARD_setter_contador_propaganda(0);
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x.... 0x....      BL       BOARD_setter_contador_propaganda
   \   00000118   0xE00C             B.N      ??APLICACAO_verifica_preparacao_9
    358            }//Fim do inicio do processo de preparação
    359            else
    360              if(troco==OPERA_COM_TROCO && !PAGAMENTOS_get_timeout_pagamento() && PAGAMENTOS_get_valor_acumulado()){        
   \                     ??APLICACAO_verifica_preparacao_0:
   \   0000011A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000011C   0x2EFF             CMP      R6,#+255
   \   0000011E   0xD109             BNE.N    ??APLICACAO_verifica_preparacao_9
   \   00000120   0x.... 0x....      BL       PAGAMENTOS_get_timeout_pagamento
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD105             BNE.N    ??APLICACAO_verifica_preparacao_9
   \   00000128   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD001             BEQ.N    ??APLICACAO_verifica_preparacao_9
    361                APLICACAO_devolve_troco();
   \   00000130   0x.... 0x....      BL       APLICACAO_devolve_troco
    362              }  
    363          }
   \                     ??APLICACAO_verifica_preparacao_9:
   \   00000134   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    364          /***********************************************************************************
    365          *       Descrição       :       Tela quando há alguma falha na máquina
    366          *       Parametros      :       (unsigned char) idioma
    367          *       Retorno         :       nenhum
    368          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    369          void APLICACAO_menu_falha(void){
   \                     APLICACAO_menu_falha:
   \   00000000   0xB580             PUSH     {R7,LR}
    370            eTECLA tecla;
    371                           
    372            BOARD_setter_led_instrucao(LED_FORA_SERVICO,PISCANDO);
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x2006             MOVS     R0,#+6
   \   00000006   0x.... 0x....      BL       BOARD_setter_led_instrucao
    373            APLICACAO_devolve_troco(); // Devolve o valor ao cliente
   \   0000000A   0x.... 0x....      BL       APLICACAO_devolve_troco
    374                                       // devido a uma falha no sistema
    375            
    376            PAGAMENTOS_set_bloqueio(1);
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
   \   00000014   0xE010             B.N      ??APLICACAO_menu_falha_0
    377            
    378            for(;;){
    379              
    380              APLICACAO_tela_descanso();           
    381              
    382              tecla = TECLADO_getch();
    383              switch(tecla){
    384                case TECLA_ENTER:
    385                    APLIACAO_wait_lcd();
   \                     ??APLICACAO_menu_falha_1:
   \   00000016   0x.... 0x....      BL       APLIACAO_wait_lcd
    386                    BOARD_liga_placa_instrucao(0);
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    387                    MCFG_entry();                     
   \   00000020   0x.... 0x....      BL       MCFG_entry
    388                    BOARD_liga_placa_instrucao(1);
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    389                    APLICACAO_release_lcd();             
   \   0000002A   0x.... 0x....      BL       APLICACAO_release_lcd
    390                    STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);                   
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       STRING_write_to_internal
    391                    break;
   \                     ??APLICACAO_menu_falha_0:
   \   00000038   0x.... 0x....      BL       APLICACAO_tela_descanso
   \   0000003C   0x.... 0x....      BL       TECLADO_getch
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD006             BEQ.N    ??APLICACAO_menu_falha_2
   \   00000046   0xD3F7             BCC.N    ??APLICACAO_menu_falha_0
   \   00000048   0x2803             CMP      R0,#+3
   \   0000004A   0xD005             BEQ.N    ??APLICACAO_menu_falha_3
   \   0000004C   0xD303             BCC.N    ??APLICACAO_menu_falha_4
   \   0000004E   0x2804             CMP      R0,#+4
   \   00000050   0xD0E1             BEQ.N    ??APLICACAO_menu_falha_1
   \   00000052   0xE7F1             B.N      ??APLICACAO_menu_falha_0
    392                case TECLA_ESC:
    393                    break;
   \                     ??APLICACAO_menu_falha_2:
   \   00000054   0xE7F0             B.N      ??APLICACAO_menu_falha_0
    394                case TECLA_INC:
    395                    break;
   \                     ??APLICACAO_menu_falha_4:
   \   00000056   0xE7EF             B.N      ??APLICACAO_menu_falha_0
    396                case TECLA_DEC:
    397                    break;
   \                     ??APLICACAO_menu_falha_3:
   \   00000058   0xE7EE             B.N      ??APLICACAO_menu_falha_0
    398              }       
    399            }
    400          }
    401          /***********************************************************************************
    402          *       Descrição       :       Função para devolver o troco ao cliente
    403          *       Parametros      :       (void)
    404          *       Retorno         :       (unsigned char) maior do que zero se
    405          *                               conseguiu devolver o troco
    406          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    407          unsigned char APLICACAO_devolve_troco(void){
   \                     APLICACAO_devolve_troco:
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
    408            unsigned int valor = PAGAMENTOS_get_valor_acumulado();
   \   00000002   0x.... 0x....      BL       PAGAMENTOS_get_valor_acumulado
   \   00000006   0x0004             MOVS     R4,R0
    409            unsigned int desconto = valor;
   \   00000008   0x0025             MOVS     R5,R4
    410            unsigned char tubos[16];
    411            
    412            PAGAMENTOS_set_bloqueio(0);
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    413            vTaskDelay(500);
   \   00000010   0xF44F 0x70FA      MOV      R0,#+500
   \   00000014   0x.... 0x....      BL       vTaskDelay
    414            
    415            if(MDB_coin_check_tubes(tubos)){
   \   00000018   0xA800             ADD      R0,SP,#+0
   \   0000001A   0x.... 0x....      BL       MDB_coin_check_tubes
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD028             BEQ.N    ??APLICACAO_devolve_troco_0
    416                
    417              valor /= 25;
   \   00000022   0x2019             MOVS     R0,#+25
   \   00000024   0xFBB4 0xF4F0      UDIV     R4,R4,R0
    418              PAGAMENTOS_subtrai_valores(desconto);
   \   00000028   0x0028             MOVS     R0,R5
   \   0000002A   0x.... 0x....      BL       PAGAMENTOS_subtrai_valores
    419                  
    420              unsigned char moedas_15 = valor /15;
   \   0000002E   0x200F             MOVS     R0,#+15
   \   00000030   0xFBB4 0xF5F0      UDIV     R5,R4,R0
    421              unsigned char moedas_rest = valor % 15;
   \   00000034   0x200F             MOVS     R0,#+15
   \   00000036   0xFBB4 0xF1F0      UDIV     R1,R4,R0
   \   0000003A   0xFB00 0x4411      MLS      R4,R0,R1,R4
    422                  
    423              for(unsigned char i=0;i<moedas_15;i++){
   \   0000003E   0x2600             MOVS     R6,#+0
   \   00000040   0xE008             B.N      ??APLICACAO_devolve_troco_1
    424                MDB_coin_dispenser(2,15);
   \                     ??APLICACAO_devolve_troco_2:
   \   00000042   0x210F             MOVS     R1,#+15
   \   00000044   0x2002             MOVS     R0,#+2
   \   00000046   0x.... 0x....      BL       MDB_coin_dispenser
    425                vTaskDelay(5000);      
   \   0000004A   0xF241 0x3088      MOVW     R0,#+5000
   \   0000004E   0x.... 0x....      BL       vTaskDelay
    426              }
   \   00000052   0x1C76             ADDS     R6,R6,#+1
   \                     ??APLICACAO_devolve_troco_1:
   \   00000054   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000056   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000058   0x42AE             CMP      R6,R5
   \   0000005A   0xD3F2             BCC.N    ??APLICACAO_devolve_troco_2
    427                  
    428              if(moedas_rest){
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0x2C00             CMP      R4,#+0
   \   00000060   0xD008             BEQ.N    ??APLICACAO_devolve_troco_0
    429                MDB_coin_dispenser(2,moedas_rest);
   \   00000062   0x0021             MOVS     R1,R4
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x2002             MOVS     R0,#+2
   \   00000068   0x.... 0x....      BL       MDB_coin_dispenser
    430                vTaskDelay(5000);                
   \   0000006C   0xF241 0x3088      MOVW     R0,#+5000
   \   00000070   0x.... 0x....      BL       vTaskDelay
    431               }
    432            }
    433                
    434            return 1;      
   \                     ??APLICACAO_devolve_troco_0:
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0xB004             ADD      SP,SP,#+16
   \   00000078   0xBD70             POP      {R4-R6,PC}       ;; return
    435          }
    436          /***********************************************************************************
    437          *       Descrição       :       Faz a verificação do POST
    438          *       Parametros      :       nenhum
    439          *       Retorno         :       nenhum
    440          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    441          unsigned char APLICACAO_verifica_post(void){
   \                     APLICACAO_verifica_post:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    442            ePOST_RESULT post = POST_entry();
   \   00000002   0x.... 0x....      BL       POST_entry
   \   00000006   0x0004             MOVS     R4,R0
    443            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000008   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   0000000C   0x0005             MOVS     R5,R0
    444            
    445            switch(post){
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C00             CMP      R4,#+0
   \   00000012   0xD101             BNE.N    ??APLICACAO_verifica_post_0
    446              case POST_SUCESSO:
    447                   return 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    448              case POST_FALHA_VENTILADOR:
    449              case POST_FALHA_RESISTENCIA:
    450              case POST_FALHA_MDB_BILL:
    451              case POST_FALHA_MDB_COIN:
    452              case POST_FALHA_MDB_CASHLESS:
    453              case POST_FALHA_CCTALK:
    454              case POST_FALHA_PAPEL:
    455              default:
    456                   switch(post){
   \                     ??APLICACAO_verifica_post_0:
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C01             CMP      R4,#+1
   \   0000001C   0xD00A             BEQ.N    ??APLICACAO_verifica_post_1
   \   0000001E   0xD32D             BCC.N    ??APLICACAO_verifica_post_2
   \   00000020   0x2C03             CMP      R4,#+3
   \   00000022   0xD01D             BEQ.N    ??APLICACAO_verifica_post_3
   \   00000024   0xD311             BCC.N    ??APLICACAO_verifica_post_4
   \   00000026   0x2C05             CMP      R4,#+5
   \   00000028   0xD01C             BEQ.N    ??APLICACAO_verifica_post_5
   \   0000002A   0xD31A             BCC.N    ??APLICACAO_verifica_post_6
   \   0000002C   0x2C07             CMP      R4,#+7
   \   0000002E   0xD01B             BEQ.N    ??APLICACAO_verifica_post_7
   \   00000030   0xD319             BCC.N    ??APLICACAO_verifica_post_8
   \   00000032   0xE023             B.N      ??APLICACAO_verifica_post_2
    457                     case POST_FALHA_VENTILADOR:
    458                          STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E0:MOTOR AR");                                    
   \                     ??APLICACAO_verifica_post_1:
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable15_19
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   0000003E   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       STRING_write_to_external
    459                          break;
   \   00000048   0xE018             B.N      ??APLICACAO_verifica_post_2
    460                     case POST_FALHA_RESISTENCIA:
    461                          STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E1:AQUECIMENTO");                
   \                     ??APLICACAO_verifica_post_4:
   \   0000004A   0x.... 0x....      LDR.W    R2,??DataTable15_16
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   00000054   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       STRING_write_to_external
    462                          break;
   \   0000005E   0xE00D             B.N      ??APLICACAO_verifica_post_2
    463                     case POST_FALHA_MDB_BILL:
    464                          break;
   \                     ??APLICACAO_verifica_post_3:
   \   00000060   0xE00C             B.N      ??APLICACAO_verifica_post_2
    465                     case POST_FALHA_MDB_COIN:
    466                          break;
   \                     ??APLICACAO_verifica_post_6:
   \   00000062   0xE00B             B.N      ??APLICACAO_verifica_post_2
    467                     case POST_FALHA_MDB_CASHLESS:
    468                          break;
   \                     ??APLICACAO_verifica_post_5:
   \   00000064   0xE00A             B.N      ??APLICACAO_verifica_post_2
    469                     case POST_FALHA_CCTALK:
    470                          break;
   \                     ??APLICACAO_verifica_post_8:
   \   00000066   0xE009             B.N      ??APLICACAO_verifica_post_2
    471                     case POST_FALHA_PAPEL:   
    472                          STRING_write_to_external(CLEAR_DISPLAY,(char*)STRING_mensagem_fora_servico[idioma],"E3:EMBALAGEM");              
   \                     ??APLICACAO_verifica_post_7:
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable15_18
   \   0000006C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable15_15
   \   00000072   0xF850 0x1025      LDR      R1,[R0, R5, LSL #+2]
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       STRING_write_to_external
    473                          break;
    474                   }         
    475                   
    476                   PAGAMENTOS_set_bloqueio(1); // Bloqueia os meios de pagamento
   \                     ??APLICACAO_verifica_post_2:
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    477                   BOARD_liga_placa_instrucao(LED_FORA_SERVICO);
   \   00000082   0x2006             MOVS     R0,#+6
   \   00000084   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   00000088   0xE001             B.N      ??APLICACAO_verifica_post_9
    478                   
    479                   for(;;){
    480                     eTECLA tecla;
    481                     
    482                     tecla = TECLADO_getch();
    483                     
    484                     switch(tecla){
    485                       case TECLA_ENTER:
    486                            APLIACAO_wait_lcd();
    487                            BOARD_liga_placa_instrucao(0);
    488                            MCFG_entry();                     
    489                            BOARD_liga_placa_instrucao(1);
    490                            idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
    491                            APLICACAO_release_lcd();  
    492                     
    493                            STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);               
    494                            break;
    495                       case TECLA_ESC:
    496                            break;
    497                       case TECLA_INC:
    498                            break;
    499                       case TECLA_DEC: 
    500                            break;
    501                     }
    502                     
    503                     APLICACAO_tela_descanso();
   \                     ??APLICACAO_verifica_post_10:
   \                     ??APLICACAO_verifica_post_11:
   \   0000008A   0x.... 0x....      BL       APLICACAO_tela_descanso
   \                     ??APLICACAO_verifica_post_9:
   \   0000008E   0x.... 0x....      BL       TECLADO_getch
   \   00000092   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000094   0x2801             CMP      R0,#+1
   \   00000096   0xD01A             BEQ.N    ??APLICACAO_verifica_post_12
   \   00000098   0xD3F7             BCC.N    ??APLICACAO_verifica_post_11
   \   0000009A   0x2803             CMP      R0,#+3
   \   0000009C   0xD0F5             BEQ.N    ??APLICACAO_verifica_post_10
   \   0000009E   0xD317             BCC.N    ??APLICACAO_verifica_post_13
   \   000000A0   0x2804             CMP      R0,#+4
   \   000000A2   0xD1F2             BNE.N    ??APLICACAO_verifica_post_11
   \                     ??APLICACAO_verifica_post_14:
   \   000000A4   0x.... 0x....      BL       APLIACAO_wait_lcd
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   000000AE   0x.... 0x....      BL       MCFG_entry
   \   000000B2   0x2001             MOVS     R0,#+1
   \   000000B4   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   000000B8   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   000000BC   0x0005             MOVS     R5,R0
   \   000000BE   0x.... 0x....      BL       APLICACAO_release_lcd
   \   000000C2   0x2200             MOVS     R2,#+0
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x.... 0x....      BL       STRING_write_to_internal
   \   000000CC   0xE7DD             B.N      ??APLICACAO_verifica_post_11
   \                     ??APLICACAO_verifica_post_12:
   \   000000CE   0xE7DC             B.N      ??APLICACAO_verifica_post_11
   \                     ??APLICACAO_verifica_post_13:
   \   000000D0   0xE7DB             B.N      ??APLICACAO_verifica_post_11
    504                   }       
    505            }
    506          }
    507          /***********************************************************************************
    508          *       Descrição       :       Faz a verificação de troco para o primeiro
    509          *                               processo
    510          *       Parametros      :       nenhum
    511          *       Retorno         :       (unsigned char) maior do que zero
    512          *                               se houver troco suficiente
    513          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    514          void APLICACAO_verifica_disponibilidade_troco(unsigned char idioma){
   \                     APLICACAO_verifica_disponibilidade_troco:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    515            unsigned char flag_notas;
    516            unsigned int maior_nota=0;
   \   00000004   0x2500             MOVS     R5,#+0
    517            eTECLA tecla;
    518            
    519            PARAMETROS_le(ADR_NOTAS,(void*)&flag_notas);
   \   00000006   0xA900             ADD      R1,SP,#+0
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       PARAMETROS_le
    520            if(flag_notas&0x01)
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x07C0             LSLS     R0,R0,#+31
   \   00000014   0xD500             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_0
    521              maior_nota = 100;
   \   00000016   0x2564             MOVS     R5,#+100
    522            if(flag_notas&0x02)
   \                     ??APLICACAO_verifica_disponibilidade_troco_0:
   \   00000018   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001C   0x0780             LSLS     R0,R0,#+30
   \   0000001E   0xD500             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_1
    523              maior_nota = 200;
   \   00000020   0x25C8             MOVS     R5,#+200
    524            if(flag_notas&0x04)
   \                     ??APLICACAO_verifica_disponibilidade_troco_1:
   \   00000022   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000026   0x0740             LSLS     R0,R0,#+29
   \   00000028   0xD501             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_2
    525              maior_nota = 500;
   \   0000002A   0xF44F 0x75FA      MOV      R5,#+500
    526            if(flag_notas&0x08)
   \                     ??APLICACAO_verifica_disponibilidade_troco_2:
   \   0000002E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000032   0x0700             LSLS     R0,R0,#+28
   \   00000034   0xD501             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_3
    527              maior_nota = 1000;
   \   00000036   0xF44F 0x757A      MOV      R5,#+1000
    528            if(flag_notas&0x10)
   \                     ??APLICACAO_verifica_disponibilidade_troco_3:
   \   0000003A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000003E   0x06C0             LSLS     R0,R0,#+27
   \   00000040   0xD501             BPL.N    ??APLICACAO_verifica_disponibilidade_troco_4
    529              maior_nota = 2000;
   \   00000042   0xF44F 0x65FA      MOV      R5,#+2000
    530            /*
    531            if(flag_notas&0x20)
    532              maior_nota = 5000;
    533            */
    534            
    535            if( APLICACACAO_verifica_troco()<maior_nota){
   \                     ??APLICACAO_verifica_disponibilidade_troco_4:
   \   00000046   0x.... 0x....      BL       APLICACACAO_verifica_troco
   \   0000004A   0x42A8             CMP      R0,R5
   \   0000004C   0xD242             BCS.N    ??APLICACAO_verifica_disponibilidade_troco_5
    536              
    537              BOARD_setter_led_instrucao(LED_FORA_SERVICO,PISCANDO);
   \   0000004E   0x2102             MOVS     R1,#+2
   \   00000050   0x2006             MOVS     R0,#+6
   \   00000052   0x.... 0x....      BL       BOARD_setter_led_instrucao
    538              PAGAMENTOS_set_bloqueio(1);
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    539              STRING_write_to_external(CLEAR_DISPLAY,
    540                                       (char*)STRING_mensagem_sem_troco[idioma][0],
    541                                       (char*)STRING_mensagem_sem_troco[idioma][1]);    
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0x....             LDR.N    R0,??DataTable15_20
   \   00000060   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000064   0x6842             LDR      R2,[R0, #+4]
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x....             LDR.N    R0,??DataTable15_20
   \   0000006A   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       STRING_write_to_external
   \   00000074   0xE001             B.N      ??APLICACAO_verifica_disponibilidade_troco_6
    542              
    543              for(;APLICACACAO_verifica_troco()<maior_nota;){
    544                  
    545                tecla = TECLADO_getch();
    546                switch(tecla){
    547                  case TECLA_ENTER:
    548                      APLIACAO_wait_lcd();
    549                      BOARD_liga_placa_instrucao(0);
    550                      MCFG_entry();                     
    551                      BOARD_liga_placa_instrucao(1);
    552                      idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
    553                      APLICACAO_release_lcd();             
    554                      STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);        
    555                      break;
    556                  case TECLA_ESC:
    557                      break;
    558                }    
    559                
    560                APLICACAO_tela_descanso();      
   \                     ??APLICACAO_verifica_disponibilidade_troco_7:
   \                     ??APLICACAO_verifica_disponibilidade_troco_8:
   \   00000076   0x.... 0x....      BL       APLICACAO_tela_descanso
   \                     ??APLICACAO_verifica_disponibilidade_troco_6:
   \   0000007A   0x.... 0x....      BL       APLICACACAO_verifica_troco
   \   0000007E   0x42A8             CMP      R0,R5
   \   00000080   0xD21B             BCS.N    ??APLICACAO_verifica_disponibilidade_troco_9
   \   00000082   0x.... 0x....      BL       TECLADO_getch
   \   00000086   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000088   0x2801             CMP      R0,#+1
   \   0000008A   0xD0F4             BEQ.N    ??APLICACAO_verifica_disponibilidade_troco_7
   \   0000008C   0x2804             CMP      R0,#+4
   \   0000008E   0xD1F2             BNE.N    ??APLICACAO_verifica_disponibilidade_troco_8
   \                     ??APLICACAO_verifica_disponibilidade_troco_10:
   \   00000090   0x.... 0x....      BL       APLIACAO_wait_lcd
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   0000009A   0x.... 0x....      BL       MCFG_entry
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   000000A4   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   000000A8   0x0004             MOVS     R4,R0
   \   000000AA   0x.... 0x....      BL       APLICACAO_release_lcd
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       STRING_write_to_internal
   \   000000B8   0xE7DD             B.N      ??APLICACAO_verifica_disponibilidade_troco_8
    561              }//Fim do for(;;)        
    562              PAGAMENTOS_set_bloqueio(0);
   \                     ??APLICACAO_verifica_disponibilidade_troco_9:
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      BL       PAGAMENTOS_set_bloqueio
    563              BOARD_liga_placa_instrucao(0);
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    564              BOARD_liga_placa_instrucao(1);
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x.... 0x....      BL       BOARD_liga_placa_instrucao
    565              BOARD_setter_led_instrucao(LED_INSIRA_DINHEIRO,PISCANDO);
   \   000000CC   0x2102             MOVS     R1,#+2
   \   000000CE   0x2002             MOVS     R0,#+2
   \   000000D0   0x.... 0x....      BL       BOARD_setter_led_instrucao
    566            }  
    567          }
   \                     ??APLICACAO_verifica_disponibilidade_troco_5:
   \   000000D4   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    568          /***********************************************************************************
    569          *       Descrição       :       Verifica o barramento MDB
    570          *       Parametros      :       nenhum
    571          *       Retorno         :       nenhum
    572          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    573          void APLICACAO_verifica_MDB(void){
   \                     APLICACAO_verifica_MDB:
   \   00000000   0xB510             PUSH     {R4,LR}
    574            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \   00000002   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000006   0x0004             MOVS     R4,R0
    575            
    576            switch(MDB_checa_dispositivos()){
   \   00000008   0x.... 0x....      BL       MDB_checa_dispositivos
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD003             BEQ.N    ??APLICACAO_verifica_MDB_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00F             BEQ.N    ??APLICACAO_verifica_MDB_1
   \   00000014   0xD301             BCC.N    ??APLICACAO_verifica_MDB_2
   \   00000016   0xE019             B.N      ??APLICACAO_verifica_MDB_3
    577              case MDB_TODOS_ONLINE:            
    578                   return;
   \                     ??APLICACAO_verifica_MDB_0:
   \                     ??APLICACAO_verifica_MDB_4:
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    579              case MDB_BILL_OFFLINE:
    580                   STRING_write_to_external(CLEAR_DISPLAY,
    581                                            (char*)STRING_mensagem_noteiro_mdb_offline[idioma][0],
    582                                            (char*)STRING_mensagem_noteiro_mdb_offline[idioma][1]);          
   \                     ??APLICACAO_verifica_MDB_2:
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x....             LDR.N    R0,??DataTable15_21
   \   0000001E   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000022   0x6842             LDR      R2,[R0, #+4]
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x....             LDR.N    R0,??DataTable15_21
   \   00000028   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       STRING_write_to_external
    583                   break;
   \   00000032   0xE00B             B.N      ??APLICACAO_verifica_MDB_3
    584              case MDB_COIN_OFFLINE:
    585                   STRING_write_to_external(CLEAR_DISPLAY,
    586                                            (char*)STRING_mensagem_moedeiro_mdb_offline[idioma][0],
    587                                            (char*)STRING_mensagem_moedeiro_mdb_offline[idioma][1]);           
   \                     ??APLICACAO_verifica_MDB_1:
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x....             LDR.N    R0,??DataTable15_22
   \   00000038   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000003C   0x6842             LDR      R2,[R0, #+4]
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0x....             LDR.N    R0,??DataTable15_22
   \   00000042   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       STRING_write_to_external
    588                   break;
   \                     ??APLICACAO_verifica_MDB_3:
   \   0000004C   0xE005             B.N      ??APLICACAO_verifica_MDB_5
    589            }  
    590            
    591            eTECLA tecla;
    592            
    593            for(;;){
    594              
    595              if(MDB_checa_dispositivos()==MDB_TODOS_ONLINE)
    596                return;
    597              
    598              tecla = TECLADO_getch();
    599              switch(tecla){
    600                case TECLA_ENTER:
    601                      APLIACAO_wait_lcd();
    602                      BOARD_liga_placa_instrucao(0);
    603                      MCFG_entry();                     
    604                      BOARD_liga_placa_instrucao(1);
    605                      idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
    606                      APLICACAO_release_lcd();             
    607                      STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);              
    608                     break;
    609                case TECLA_ESC:
    610                     break;
    611              }    
    612              APLICACAO_tela_descanso();      
   \                     ??APLICACAO_verifica_MDB_6:
   \                     ??APLICACAO_verifica_MDB_7:
   \   0000004E   0x.... 0x....      BL       APLICACAO_tela_descanso
    613              vTaskDelay(500);
   \   00000052   0xF44F 0x70FA      MOV      R0,#+500
   \   00000056   0x.... 0x....      BL       vTaskDelay
   \                     ??APLICACAO_verifica_MDB_5:
   \   0000005A   0x.... 0x....      BL       MDB_checa_dispositivos
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD0DA             BEQ.N    ??APLICACAO_verifica_MDB_4
   \                     ??APLICACAO_verifica_MDB_8:
   \   00000062   0x.... 0x....      BL       TECLADO_getch
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x2801             CMP      R0,#+1
   \   0000006A   0xD0F0             BEQ.N    ??APLICACAO_verifica_MDB_6
   \   0000006C   0x2804             CMP      R0,#+4
   \   0000006E   0xD1EE             BNE.N    ??APLICACAO_verifica_MDB_7
   \                     ??APLICACAO_verifica_MDB_9:
   \   00000070   0x.... 0x....      BL       APLIACAO_wait_lcd
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   0000007A   0x.... 0x....      BL       MCFG_entry
   \   0000007E   0x2001             MOVS     R0,#+1
   \   00000080   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   00000084   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000088   0x0004             MOVS     R4,R0
   \   0000008A   0x.... 0x....      BL       APLICACAO_release_lcd
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       STRING_write_to_internal
   \   00000098   0xE7D9             B.N      ??APLICACAO_verifica_MDB_7
    614            }
    615          }
    616          /***********************************************************************************
    617          *       Descrição       :       Faz a verificação do meio de pagamento
    618          *                               CCTALK
    619          *       Parametros      :       nenhum
    620          *       Retorno         :       nenhum
    621          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    622          void APLICACAO_verifica_cctalk(void){
   \                     APLICACAO_verifica_cctalk:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    623            unsigned char flag;
    624            
    625            PARAMETROS_le(ADR_FLAG_BV20,(void*)&flag);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       PARAMETROS_le
    626            
    627            if(!flag)
   \   0000000C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD100             BNE.N    ??APLICACAO_verifica_cctalk_0
    628              return;  
   \                     ??APLICACAO_verifica_cctalk_1:
   \   00000014   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    629            
    630            eIDIOMA idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
   \                     ??APLICACAO_verifica_cctalk_0:
   \   00000016   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   0000001A   0x0004             MOVS     R4,R0
    631            eBV20_state estado_atual = BV20_get_current_state();
   \   0000001C   0x.... 0x....      BL       BV20_get_current_state
    632            
    633            if(estado_atual!=BV20_OFFLINE)
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x2803             CMP      R0,#+3
   \   00000024   0xD1F6             BNE.N    ??APLICACAO_verifica_cctalk_1
    634              return;
    635            
    636            STRING_write_to_external(CLEAR_DISPLAY,
    637                                     (char*)STRING_mensagem_cctalk_offline[idioma][0],
    638                                     (char*)STRING_mensagem_cctalk_offline[idioma][1]);       
   \                     ??APLICACAO_verifica_cctalk_2:
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x....             LDR.N    R0,??DataTable15_23
   \   0000002A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000002E   0x6842             LDR      R2,[R0, #+4]
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x....             LDR.N    R0,??DataTable15_23
   \   00000034   0xF850 0x1034      LDR      R1,[R0, R4, LSL #+3]
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       STRING_write_to_external
   \   0000003E   0xE005             B.N      ??APLICACAO_verifica_cctalk_3
    639              
    640            eTECLA tecla;
    641            
    642            for(;;){
    643              
    644              estado_atual = BV20_get_current_state();
    645              
    646              if(estado_atual!=BV20_OFFLINE)
    647                return;
    648              
    649              tecla = TECLADO_getch();
    650              switch(tecla){
    651                case TECLA_ENTER:
    652                      BOARD_reset_tempo_propaganda();
    653                      APLIACAO_wait_lcd();
    654                      BOARD_liga_placa_instrucao(0);
    655                      MCFG_entry();                     
    656                      BOARD_liga_placa_instrucao(1);
    657                      idioma  = (eIDIOMA)APLICACAO_carrega_idioma();
    658                      APLICACAO_release_lcd();             
    659                      STRING_write_to_internal(CLEAR_DISPLAY,NULL,NULL);              
    660                      BOARD_reset_tempo_propaganda();
    661                     break;
    662                case TECLA_ESC:
    663                     break;
    664              }    
    665              APLICACAO_tela_descanso();      
   \                     ??APLICACAO_verifica_cctalk_4:
   \                     ??APLICACAO_verifica_cctalk_5:
   \   00000040   0x.... 0x....      BL       APLICACAO_tela_descanso
    666              vTaskDelay(500);
   \   00000044   0xF44F 0x70FA      MOV      R0,#+500
   \   00000048   0x.... 0x....      BL       vTaskDelay
   \                     ??APLICACAO_verifica_cctalk_3:
   \   0000004C   0x.... 0x....      BL       BV20_get_current_state
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x2803             CMP      R0,#+3
   \   00000054   0xD1DE             BNE.N    ??APLICACAO_verifica_cctalk_1
   \                     ??APLICACAO_verifica_cctalk_6:
   \   00000056   0x.... 0x....      BL       TECLADO_getch
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD0EF             BEQ.N    ??APLICACAO_verifica_cctalk_4
   \   00000060   0x2804             CMP      R0,#+4
   \   00000062   0xD1ED             BNE.N    ??APLICACAO_verifica_cctalk_5
   \                     ??APLICACAO_verifica_cctalk_7:
   \   00000064   0x.... 0x....      BL       BOARD_reset_tempo_propaganda
   \   00000068   0x.... 0x....      BL       APLIACAO_wait_lcd
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   00000072   0x.... 0x....      BL       MCFG_entry
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x.... 0x....      BL       BOARD_liga_placa_instrucao
   \   0000007C   0x.... 0x....      BL       APLICACAO_carrega_idioma
   \   00000080   0x0004             MOVS     R4,R0
   \   00000082   0x.... 0x....      BL       APLICACAO_release_lcd
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x.... 0x....      BL       STRING_write_to_internal
   \   00000090   0x.... 0x....      BL       BOARD_reset_tempo_propaganda
   \   00000094   0xE7D4             B.N      ??APLICACAO_verifica_cctalk_5
    667            }    
    668          }
    669          /***********************************************************************************
    670          *       Descrição       :       Faz a verificação cíclica dos sinais 
    671          *                               do papel e do termistor
    672          *       Parametros      :       nenhum
    673          *       Retorno         :       nenhum
    674          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    675          void APLICACAO_verificao_ciclica(void){
   \                     APLICACAO_verificao_ciclica:
   \   00000000   0xB580             PUSH     {R7,LR}
    676            
    677            switch(POST_verificacao_ciclica()){
   \   00000002   0x.... 0x....      BL       POST_verificacao_ciclica
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD003             BEQ.N    ??APLICACAO_verificao_ciclica_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD00A             BEQ.N    ??APLICACAO_verificao_ciclica_1
   \   0000000E   0xD301             BCC.N    ??APLICACAO_verificao_ciclica_2
   \   00000010   0xE00F             B.N      ??APLICACAO_verificao_ciclica_3
    678             case POST_CICLICO_SUCESSO:
    679                  break;
   \                     ??APLICACAO_verificao_ciclica_0:
   \   00000012   0xE00E             B.N      ??APLICACAO_verificao_ciclica_3
    680             case POST_CICLICO_FALHA_EMBALAGEM:
    681                  STRING_write_to_external(CLEAR_DISPLAY,"E03:FALTA","EMBALAGEM");
   \                     ??APLICACAO_verificao_ciclica_2:
   \   00000014   0x....             LDR.N    R2,??DataTable15_24
   \   00000016   0x....             LDR.N    R1,??DataTable15_25
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       STRING_write_to_external
    682                  APLICACAO_loop_falha_ciclica();
   \   0000001E   0x.... 0x....      BL       APLICACAO_loop_falha_ciclica
    683                  break;
   \   00000022   0xE006             B.N      ??APLICACAO_verificao_ciclica_3
    684             case POST_CICLICO_FALHA_TERMISTOR:
    685                  STRING_write_to_external(CLEAR_DISPLAY,"E04:FALHA","SENS. TEMP.");
   \                     ??APLICACAO_verificao_ciclica_1:
   \   00000024   0x....             LDR.N    R2,??DataTable15_26
   \   00000026   0x....             LDR.N    R1,??DataTable15_27
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       STRING_write_to_external
    686                  APLICACAO_loop_falha_ciclica();
   \   0000002E   0x.... 0x....      BL       APLICACAO_loop_falha_ciclica
    687                  break;
    688            }  
    689          }
   \                     ??APLICACAO_verificao_ciclica_3:
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    690          /***********************************************************************************
    691          *       Descrição       :       Menu do loop onde há a falha no sensor de
    692          *                               temperatura ou falta de embalagem
    693          *       Parametros      :       nenhum
    694          *       Retorno         :       nenhum
    695          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    696          void APLICACAO_loop_falha_ciclica(void){
   \                     APLICACAO_loop_falha_ciclica:
   \   00000000   0xB510             PUSH     {R4,LR}
    697            eTECLA tecla;
    698            unsigned char loop=1;
   \   00000002   0x2401             MOVS     R4,#+1
   \   00000004   0xE002             B.N      ??APLICACAO_loop_falha_ciclica_0
    699              
    700            for(;loop;){
    701              
    702              tecla = TECLADO_getch();
    703              switch(tecla){
    704                case TECLA_ENTER:
    705                    MCFG_entry();                     
    706                     break;
    707                case TECLA_ESC:
    708                     loop = 0;
   \                     ??APLICACAO_loop_falha_ciclica_1:
   \   00000006   0x2400             MOVS     R4,#+0
    709                     break;
    710              }      
    711              
    712              APLICACAO_tela_descanso();    
   \                     ??APLICACAO_loop_falha_ciclica_2:
   \   00000008   0x.... 0x....      BL       APLICACAO_tela_descanso
   \                     ??APLICACAO_loop_falha_ciclica_0:
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD009             BEQ.N    ??APLICACAO_loop_falha_ciclica_3
   \   00000012   0x.... 0x....      BL       TECLADO_getch
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD0F4             BEQ.N    ??APLICACAO_loop_falha_ciclica_1
   \   0000001C   0x2804             CMP      R0,#+4
   \   0000001E   0xD1F3             BNE.N    ??APLICACAO_loop_falha_ciclica_2
   \                     ??APLICACAO_loop_falha_ciclica_4:
   \   00000020   0x.... 0x....      BL       MCFG_entry
   \   00000024   0xE7F0             B.N      ??APLICACAO_loop_falha_ciclica_2
    713            }  
    714            
    715            STRING_write_to_internal(CLEAR_DISPLAY,"REINICIANDO","VERIFICACAO");
   \                     ??APLICACAO_loop_falha_ciclica_3:
   \   00000026   0x....             LDR.N    R2,??DataTable15_28
   \   00000028   0x....             LDR.N    R1,??DataTable15_29
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       STRING_write_to_internal
    716            vTaskDelay(3000);  
   \   00000030   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000034   0x.... 0x....      BL       vTaskDelay
    717          }
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    718          /***********************************************************************************
    719          *       Descrição       :       Ciclo de desumidificação da máquina
    720          *       Parametros      :       nenhum
    721          *       Retorno         :       nenhum
    722          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    723          void APLICACAO_ciclo_desumidificador(unsigned char flag){
   \                     APLICACAO_ciclo_desumidificador:
   \   00000000   0xB510             PUSH     {R4,LR}
    724            
    725            if(flag && !APLICACAO_tempo_desumidificador){
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD042             BEQ.N    ??APLICACAO_ciclo_desumidificador_0
   \   00000008   0x....             LDR.N    R0,??DataTable15
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD13E             BNE.N    ??APLICACAO_ciclo_desumidificador_0
    726              
    727              unsigned int tempo=30000;
   \   00000010   0xF247 0x5430      MOVW     R4,#+30000
    728              
    729              STRING_write_to_internal(CLEAR_DISPLAY,"CICLO DE","DESUMIDIFICACAO");
   \   00000014   0x....             LDR.N    R2,??DataTable15_30
   \   00000016   0x....             LDR.N    R1,??DataTable15_31
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       STRING_write_to_internal
    730              STRING_write_to_external(CLEAR_DISPLAY,"CICLO DE","DESUMIDIFICACAO");
   \   0000001E   0x....             LDR.N    R2,??DataTable15_30
   \   00000020   0x....             LDR.N    R1,??DataTable15_31
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       STRING_write_to_external
    731              
    732              POTENCIA_set_neutro(1);
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       POTENCIA_set_neutro
    733              POTENCIA_setRPM(6000);
   \   0000002E   0xF241 0x7070      MOVW     R0,#+6000
   \   00000032   0x.... 0x....      BL       POTENCIA_setRPM
    734              CT_set_temperatura(60);
   \   00000036   0x203C             MOVS     R0,#+60
   \   00000038   0x.... 0x....      BL       CT_set_temperatura
    735              vTaskDelay(3000);
   \   0000003C   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000040   0x.... 0x....      BL       vTaskDelay
   \   00000044   0xE002             B.N      ??APLICACAO_ciclo_desumidificador_1
    736              
    737              while(tempo--){
    738                
    739                if(POTENCIA_getRPMmedido()<1000){
    740                  CT_set_temperatura(0);
    741                  POTENCIA_setRPM(0);
    742                  POTENCIA_set_neutro(0);        
    743                  return;
    744                }
    745                vTaskDelay(1);
   \                     ??APLICACAO_ciclo_desumidificador_2:
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x.... 0x....      BL       vTaskDelay
   \                     ??APLICACAO_ciclo_desumidificador_1:
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x1E44             SUBS     R4,R0,#+1
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD00E             BEQ.N    ??APLICACAO_ciclo_desumidificador_3
   \   00000054   0x.... 0x....      BL       POTENCIA_getRPMmedido
   \   00000058   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000005C   0xD2F3             BCS.N    ??APLICACAO_ciclo_desumidificador_2
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       CT_set_temperatura
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       POTENCIA_setRPM
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      BL       POTENCIA_set_neutro
   \   00000070   0xE00D             B.N      ??APLICACAO_ciclo_desumidificador_4
    746              }
    747              
    748              CT_set_temperatura(0);
   \                     ??APLICACAO_ciclo_desumidificador_3:
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       CT_set_temperatura
    749              POTENCIA_setRPM(0);
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      BL       POTENCIA_setRPM
    750              POTENCIA_set_neutro(0);
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      BL       POTENCIA_set_neutro
    751              APLICACAO_verifica_post();
   \   00000084   0x.... 0x....      BL       APLICACAO_verifica_post
    752              APLICACAO_tempo_desumidificador = TEMPO_DESUMIDIFICADOR;
   \   00000088   0x....             LDR.N    R0,??DataTable15
   \   0000008A   0x....             LDR.N    R1,??DataTable15_1  ;; 0x1b7740
   \   0000008C   0x6001             STR      R1,[R0, #+0]
    753            }
    754          }
   \                     ??APLICACAO_ciclo_desumidificador_0:
   \                     ??APLICACAO_ciclo_desumidificador_4:
   \   0000008E   0xBD10             POP      {R4,PC}          ;; return
    755          
    756          

   \                                 In section .text, align 2, keep-with-next
    757          void APLICACAO_teste_arquivo(void){ 
   \                     APLICACAO_teste_arquivo:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF2AD 0x4D7C      SUBW     SP,SP,#+1148
    758            FATFS fs;
    759            FIL arquivo;
    760            char buffer[32];
    761            unsigned char hora,minuto,segundo,dia,mes;
                                 ^
Warning[Pe177]: variable "hora" was declared but never referenced

    unsigned char hora,minuto,segundo,dia,mes;
                       ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\aplicacao.c",761  Warning[Pe177]: 
          variable "minuto" was declared but never referenced

    unsigned char hora,minuto,segundo,dia,mes;
                              ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\aplicacao.c",761  Warning[Pe177]: 
          variable "segundo" was declared but never referenced

    unsigned char hora,minuto,segundo,dia,mes;
                                      ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\aplicacao.c",761  Warning[Pe177]: 
          variable "dia" was declared but never referenced

    unsigned char hora,minuto,segundo,dia,mes;
                                          ^
"C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Aplicacao\aplicacao.c",761  Warning[Pe177]: 
          variable "mes" was declared but never referenced
    762            unsigned int ano;
                                ^
Warning[Pe177]: variable "ano" was declared but never referenced
    763            
    764            sprintf(buffer,"log_texto.txt");
   \   00000006   0x....             LDR.N    R1,??DataTable15_32
   \   00000008   0xA801             ADD      R0,SP,#+4
   \   0000000A   0x.... 0x....      BL       sprintf
    765            
    766            f_mount(0,&fs);
   \   0000000E   0xA992             ADD      R1,SP,#+584
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       f_mount
    767            f_open(&arquivo,buffer,FA_OPEN_ALWAYS | FA_READ | FA_WRITE);
   \   00000016   0x2213             MOVS     R2,#+19
   \   00000018   0xA901             ADD      R1,SP,#+4
   \   0000001A   0xA809             ADD      R0,SP,#+36
   \   0000001C   0x.... 0x....      BL       f_open
    768            
    769            UINT br,bw;
    770            FRESULT res;
                           ^
Warning[Pe177]: variable "res" was declared but never referenced
    771            
    772            sprintf(buffer,"Ola mundo!");
   \   00000020   0x....             LDR.N    R1,??DataTable15_33
   \   00000022   0xA801             ADD      R0,SP,#+4
   \   00000024   0x.... 0x....      BL       sprintf
    773            br = strlen(buffer);
   \   00000028   0xA801             ADD      R0,SP,#+4
   \   0000002A   0x.... 0x....      BL       strlen
    774            
    775            f_write(&arquivo,buffer,br,&bw);
   \   0000002E   0xAB00             ADD      R3,SP,#+0
   \   00000030   0x0002             MOVS     R2,R0
   \   00000032   0xA901             ADD      R1,SP,#+4
   \   00000034   0xA809             ADD      R0,SP,#+36
   \   00000036   0x.... 0x....      BL       f_write
    776            
    777            f_close(&arquivo);
   \   0000003A   0xA809             ADD      R0,SP,#+36
   \   0000003C   0x.... 0x....      BL       f_close
    778          }
   \   00000040   0xF20D 0x4D7C      ADDW     SP,SP,#+1148
   \   00000044   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     APLICACAO_tempo_desumidificador

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x001B7740         DC32     0x1b7740

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \   00000000   0x........         DC32     STRING_mensagem_modo_gratis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \   00000000   0x........         DC32     STRING_splash

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \   00000000   0x........         DC32     STRING_mensagem_saudacao_maquina

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \   00000000   0x........         DC32     APLICACAO_sem_LCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \   00000000   0x........         DC32     `?<Constant "RPM:%05d T%03doC">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \   00000000   0x........         DC32     `?<Constant "P:%04d M:%04d,%02d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \   00000000   0x........         DC32     STRING_mensagem_preco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \   00000000   0x........         DC32     STRING_mensagem_pago

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \   00000000   0x........         DC32     APLICACAO_tempo_mensagem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_11:
   \   00000000   0x........         DC32     ??indice

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_12:
   \   00000000   0x........         DC32     APLICACAO_tubos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_13:
   \   00000000   0x........         DC32     STRING_mensagem_retire_troco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_14:
   \   00000000   0x........         DC32     `?<Constant "E0:VENTILADOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_15:
   \   00000000   0x........         DC32     STRING_mensagem_fora_servico

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_16:
   \   00000000   0x........         DC32     `?<Constant "E1:AQUECIMENTO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_17:
   \   00000000   0x........         DC32     `?<Constant "E2:DOSADOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_18:
   \   00000000   0x........         DC32     `?<Constant "E3:EMBALAGEM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_19:
   \   00000000   0x........         DC32     `?<Constant "E0:MOTOR AR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_20:
   \   00000000   0x........         DC32     STRING_mensagem_sem_troco

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_21:
   \   00000000   0x........         DC32     STRING_mensagem_noteiro_mdb_offline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_22:
   \   00000000   0x........         DC32     STRING_mensagem_moedeiro_mdb_offline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_23:
   \   00000000   0x........         DC32     STRING_mensagem_cctalk_offline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_24:
   \   00000000   0x........         DC32     `?<Constant "EMBALAGEM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_25:
   \   00000000   0x........         DC32     `?<Constant "E03:FALTA">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_26:
   \   00000000   0x........         DC32     `?<Constant "SENS. TEMP.">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_27:
   \   00000000   0x........         DC32     `?<Constant "E04:FALHA">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_28:
   \   00000000   0x........         DC32     `?<Constant "VERIFICACAO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_29:
   \   00000000   0x........         DC32     `?<Constant "REINICIANDO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_30:
   \   00000000   0x........         DC32     `?<Constant "DESUMIDIFICACAO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_31:
   \   00000000   0x........         DC32     `?<Constant "CICLO DE">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_32:
   \   00000000   0x........         DC32     `?<Constant "log_texto.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_33:
   \   00000000   0x........         DC32     `?<Constant "Ola mundo!">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "RPM:%05d T%03doC">`:
   \   00000000   0x52 0x50          DC8 "RPM:%05d T%03doC"
   \              0x4D 0x3A    
   \              0x25 0x30    
   \              0x35 0x64    
   \              0x20 0x54    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x6F 0x43    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "P:%04d M:%04d,%02d">`:
   \   00000000   0x50 0x3A          DC8 "P:%04d M:%04d,%02d"
   \              0x25 0x30    
   \              0x34 0x64    
   \              0x20 0x4D    
   \              0x3A 0x25    
   \              0x30 0x34    
   \              0x64 0x2C    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E0:VENTILADOR">`:
   \   00000000   0x45 0x30          DC8 "E0:VENTILADOR"
   \              0x3A 0x56    
   \              0x45 0x4E    
   \              0x54 0x49    
   \              0x4C 0x41    
   \              0x44 0x4F    
   \              0x52 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E1:AQUECIMENTO">`:
   \   00000000   0x45 0x31          DC8 "E1:AQUECIMENTO"
   \              0x3A 0x41    
   \              0x51 0x55    
   \              0x45 0x43    
   \              0x49 0x4D    
   \              0x45 0x4E    
   \              0x54 0x4F    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E2:DOSADOR">`:
   \   00000000   0x45 0x32          DC8 "E2:DOSADOR"
   \              0x3A 0x44    
   \              0x4F 0x53    
   \              0x41 0x44    
   \              0x4F 0x52    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E3:EMBALAGEM">`:
   \   00000000   0x45 0x33          DC8 "E3:EMBALAGEM"
   \              0x3A 0x45    
   \              0x4D 0x42    
   \              0x41 0x4C    
   \              0x41 0x47    
   \              0x45 0x4D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "E0:MOTOR AR">`:
   \   00000000   0x45 0x30          DC8 "E0:MOTOR AR"
   \              0x3A 0x4D    
   \              0x4F 0x54    
   \              0x4F 0x52    
   \              0x20 0x41    
   \              0x52 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "E03:FALTA">`:
   \   00000000   0x45 0x30          DC8 "E03:FALTA"
   \              0x33 0x3A    
   \              0x46 0x41    
   \              0x4C 0x54    
   \              0x41 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "EMBALAGEM">`:
   \   00000000   0x45 0x4D          DC8 "EMBALAGEM"
   \              0x42 0x41    
   \              0x4C 0x41    
   \              0x47 0x45    
   \              0x4D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "E04:FALHA">`:
   \   00000000   0x45 0x30          DC8 "E04:FALHA"
   \              0x34 0x3A    
   \              0x46 0x41    
   \              0x4C 0x48    
   \              0x41 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SENS. TEMP.">`:
   \   00000000   0x53 0x45          DC8 "SENS. TEMP."
   \              0x4E 0x53    
   \              0x2E 0x20    
   \              0x54 0x45    
   \              0x4D 0x50    
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "REINICIANDO">`:
   \   00000000   0x52 0x45          DC8 "REINICIANDO"
   \              0x49 0x4E    
   \              0x49 0x43    
   \              0x49 0x41    
   \              0x4E 0x44    
   \              0x4F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "VERIFICACAO">`:
   \   00000000   0x56 0x45          DC8 "VERIFICACAO"
   \              0x52 0x49    
   \              0x46 0x49    
   \              0x43 0x41    
   \              0x43 0x41    
   \              0x4F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "CICLO DE">`:
   \   00000000   0x43 0x49          DC8 "CICLO DE"
   \              0x43 0x4C    
   \              0x4F 0x20    
   \              0x44 0x45    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "DESUMIDIFICACAO">`:
   \   00000000   0x44 0x45          DC8 "DESUMIDIFICACAO"
   \              0x53 0x55    
   \              0x4D 0x49    
   \              0x44 0x49    
   \              0x46 0x49    
   \              0x43 0x41    
   \              0x43 0x41    
   \              0x4F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "log_texto.txt">`:
   \   00000000   0x6C 0x6F          DC8 "log_texto.txt"
   \              0x67 0x5F    
   \              0x74 0x65    
   \              0x78 0x74    
   \              0x6F 0x2E    
   \              0x74 0x78    
   \              0x74 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Ola mundo!">`:
   \   00000000   0x4F 0x6C          DC8 "Ola mundo!"
   \              0x61 0x20    
   \              0x6D 0x75    
   \              0x6E 0x64    
   \              0x6F 0x21    
   \              0x00         
   \   0000000B   0x00               DC8 0
    779          /***********************************************************************************
    780          *       Fim do arquivo
    781          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   APLIACAO_wait_lcd
         8   -> xQueueGenericReceive
       8   APLICACACAO_verifica_troco
         8   -> MDB_coin_check_tubes
       8   APLICACAO_carrega_idioma
         8   -> PARAMETROS_le
       8   APLICACAO_ciclo_desumidificador
         8   -> APLICACAO_verifica_post
         8   -> CT_set_temperatura
         8   -> POTENCIA_getRPMmedido
         8   -> POTENCIA_setRPM
         8   -> POTENCIA_set_neutro
         8   -> STRING_write_to_external
         8   -> STRING_write_to_internal
         8   -> vTaskDelay
      32   APLICACAO_devolve_troco
        32   -> MDB_coin_check_tubes
        32   -> MDB_coin_dispenser
        32   -> PAGAMENTOS_get_valor_acumulado
        32   -> PAGAMENTOS_set_bloqueio
        32   -> PAGAMENTOS_subtrai_valores
        32   -> vTaskDelay
      32   APLICACAO_exibe_valor
        32   -> PAGAMENTOS_get_valor_acumulado
        32   -> PARAMETROS_le
        32   -> STRING_write_to_external
        32   -> sprintf
       8   APLICACAO_ini
         8   -> HD44780_2_init
         8   -> HD44780_init
         8   -> STRING_write_to_external
         8   -> STRING_write_to_internal
         8   -> xQueueCreate
         8   -> xQueueGenericSend
       8   APLICACAO_loop_falha_ciclica
         8   -> APLICACAO_tela_descanso
         8   -> MCFG_entry
         8   -> STRING_write_to_internal
         8   -> TECLADO_getch
         8   -> vTaskDelay
      16   APLICACAO_main
        16   -> APLIACAO_wait_lcd
        16   -> APLICACAO_carrega_idioma
        16   -> APLICACAO_ciclo_desumidificador
        16   -> APLICACAO_exibe_valor
        16   -> APLICACAO_ini
        16   -> APLICACAO_release_lcd
        16   -> APLICACAO_tela_descanso
        16   -> APLICACAO_teste_arquivo
        16   -> APLICACAO_verifica_MDB
        16   -> APLICACAO_verifica_cctalk
        16   -> APLICACAO_verifica_disponibilidade_troco
        16   -> APLICACAO_verifica_preparacao
        16   -> BOARD_liga_placa_instrucao
        16   -> BOARD_setter_contador_propaganda
        16   -> BOARD_setter_led_instrucao
        16   -> MCFG_entry
        16   -> PAGAMENTOS_adiciona_valores
        16   -> PAGAMENTOS_get_valor_acumulado
        16   -> PAGAMENTOS_set_bloqueio
        16   -> PAGAMENTOS_subtrai_valores
        16   -> PARAMETROS_le
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
        16   -> vTaskDelay
       8   APLICACAO_menu_falha
         8   -> APLIACAO_wait_lcd
         8   -> APLICACAO_devolve_troco
         8   -> APLICACAO_release_lcd
         8   -> APLICACAO_tela_descanso
         8   -> BOARD_liga_placa_instrucao
         8   -> BOARD_setter_led_instrucao
         8   -> MCFG_entry
         8   -> PAGAMENTOS_set_bloqueio
         8   -> STRING_write_to_internal
         8   -> TECLADO_getch
       8   APLICACAO_release_lcd
         8   -> xQueueGenericSend
      40   APLICACAO_tela_descanso
        40   -> AA_calculaTemperatura
        40   -> AA_mediaMovelPapel
        40   -> PAGAMENTOS_get_valor_acumulado
        40   -> POTENCIA_getRPMmedido
        40   -> STRING_write_to_internal
        40   -> sprintf
    1152   APLICACAO_teste_arquivo
      1152   -> f_close
      1152   -> f_mount
      1152   -> f_open
      1152   -> f_write
      1152   -> sprintf
      1152   -> strlen
       8   APLICACAO_verifica_MDB
         8   -> APLIACAO_wait_lcd
         8   -> APLICACAO_carrega_idioma
         8   -> APLICACAO_release_lcd
         8   -> APLICACAO_tela_descanso
         8   -> BOARD_liga_placa_instrucao
         8   -> MCFG_entry
         8   -> MDB_checa_dispositivos
         8   -> STRING_write_to_external
         8   -> STRING_write_to_internal
         8   -> TECLADO_getch
         8   -> vTaskDelay
      16   APLICACAO_verifica_cctalk
        16   -> APLIACAO_wait_lcd
        16   -> APLICACAO_carrega_idioma
        16   -> APLICACAO_release_lcd
        16   -> APLICACAO_tela_descanso
        16   -> BOARD_liga_placa_instrucao
        16   -> BOARD_reset_tempo_propaganda
        16   -> BV20_get_current_state
        16   -> MCFG_entry
        16   -> PARAMETROS_le
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
        16   -> vTaskDelay
      16   APLICACAO_verifica_disponibilidade_troco
        16   -> APLIACAO_wait_lcd
        16   -> APLICACACAO_verifica_troco
        16   -> APLICACAO_carrega_idioma
        16   -> APLICACAO_release_lcd
        16   -> APLICACAO_tela_descanso
        16   -> BOARD_liga_placa_instrucao
        16   -> BOARD_setter_led_instrucao
        16   -> MCFG_entry
        16   -> PAGAMENTOS_set_bloqueio
        16   -> PARAMETROS_le
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
      16   APLICACAO_verifica_post
        16   -> APLIACAO_wait_lcd
        16   -> APLICACAO_carrega_idioma
        16   -> APLICACAO_release_lcd
        16   -> APLICACAO_tela_descanso
        16   -> BOARD_liga_placa_instrucao
        16   -> MCFG_entry
        16   -> PAGAMENTOS_set_bloqueio
        16   -> POST_entry
        16   -> STRING_write_to_external
        16   -> STRING_write_to_internal
        16   -> TECLADO_getch
      24   APLICACAO_verifica_preparacao
        24   -> APLICACACAO_verifica_troco
        24   -> APLICACAO_devolve_troco
        24   -> APLICACAO_menu_falha
        24   -> BOARD_setter_contador_propaganda
        24   -> PAGAMENTOS_get_timeout_pagamento
        24   -> PAGAMENTOS_get_valor_acumulado
        24   -> PAGAMENTOS_set_bloqueio
        24   -> PAGAMENTOS_subtrai_valores
        24   -> PREPARACAO_entry
        24   -> PREPARACAO_resfriamento
        24   -> STRING_write_to_external
        24   -> STRING_write_to_internal
       8   APLICACAO_verificao_ciclica
         8   -> APLICACAO_loop_falha_ciclica
         8   -> POST_verificacao_ciclica
         8   -> STRING_write_to_external


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "CICLO DE">
      16  ?<Constant "DESUMIDIFICACAO">
      12  ?<Constant "E03:FALTA">
      12  ?<Constant "E04:FALHA">
      12  ?<Constant "E0:MOTOR AR">
      16  ?<Constant "E0:VENTILADOR">
      16  ?<Constant "E1:AQUECIMENTO">
      12  ?<Constant "E2:DOSADOR">
      16  ?<Constant "E3:EMBALAGEM">
      12  ?<Constant "EMBALAGEM">
      12  ?<Constant "Ola mundo!">
      20  ?<Constant "P:%04d M:%04d,%02d">
      12  ?<Constant "REINICIANDO">
      20  ?<Constant "RPM:%05d T%03doC">
      12  ?<Constant "SENS. TEMP.">
      12  ?<Constant "VERIFICACAO">
      16  ?<Constant "log_texto.txt">
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_11
       4  ??DataTable15_12
       4  ??DataTable15_13
       4  ??DataTable15_14
       4  ??DataTable15_15
       4  ??DataTable15_16
       4  ??DataTable15_17
       4  ??DataTable15_18
       4  ??DataTable15_19
       4  ??DataTable15_2
       4  ??DataTable15_20
       4  ??DataTable15_21
       4  ??DataTable15_22
       4  ??DataTable15_23
       4  ??DataTable15_24
       4  ??DataTable15_25
       4  ??DataTable15_26
       4  ??DataTable15_27
       4  ??DataTable15_28
       4  ??DataTable15_29
       4  ??DataTable15_3
       4  ??DataTable15_30
       4  ??DataTable15_31
       4  ??DataTable15_32
       4  ??DataTable15_33
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
      24  APLIACAO_wait_lcd
      30  APLICACACAO_verifica_troco
      36  APLICACAO_carrega_idioma
     144  APLICACAO_ciclo_desumidificador
     122  APLICACAO_devolve_troco
     184  APLICACAO_exibe_valor
     118  APLICACAO_ini
      58  APLICACAO_loop_falha_ciclica
     352  APLICACAO_main
      90  APLICACAO_menu_falha
      20  APLICACAO_release_lcd
       4  APLICACAO_sem_LCD
     102  APLICACAO_tela_descanso
       4  APLICACAO_tempo_desumidificador
       4  APLICACAO_tempo_mensagem
      70  APLICACAO_teste_arquivo
      16  APLICACAO_tubos
     154  APLICACAO_verifica_MDB
     150  APLICACAO_verifica_cctalk
     214  APLICACAO_verifica_disponibilidade_troco
     210  APLICACAO_verifica_post
     310  APLICACAO_verifica_preparacao
      52  APLICACAO_verificao_ciclica
       1  indice

 
    25 bytes in section .bss
     4 bytes in section .data
   240 bytes in section .rodata
 2 576 bytes in section .text
 
 2 576 bytes of CODE  memory
   240 bytes of CONST memory
    29 bytes of DATA  memory

Errors: none
Warnings: 7

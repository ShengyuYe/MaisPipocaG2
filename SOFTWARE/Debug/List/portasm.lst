###############################################################################
#                                                                             #
#     IAR Assembler V6.50.3.4676/W32 for ARM 12/Sep/2017  15:12:04            #
#     Copyright 1999-2013 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  C:\repositorios\MaisPipocaG2\SOFTWARE\Kernel\portasm.s#
#           List file     =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\portasm.lst#
#           Object file   =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\portasm.o#
#           Command line  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Kernel\portasm.s #
#                            -OC:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LC:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\ #
#                            -t8 --cpu Cortex-M3 --fpu None                   #
#                                                                             #
###############################################################################

    1                           /*____________________________________________
                                ______________________________________
    2                           |       Quark Tecnologia Eletrônica Embarcada
    3                           |       
    4                           |       Itapema - SC
    5                           |       www.quarktee.com.br
    6                           | ____________________________________________
                                ______________________________________
    7                           |
    8                           |       This source code was developed by
                                 Quark  and cannot be copied, in part
                                 
    9                           |       or in whole, or used, except when
                                 legally licensed by Quark 
   10                           |       or its distributors.
   11                           |
   12                           |       Este código é propriedade da Quark  e
                                 não pode ser copiado, em parte 
   13                           |       ou em todo, ou utilizado, exceto
                                 quando for legalmente licenciado pela
                                 
   14                           |       Quark  ou por um de seus distribuidore
                                s.
   15                           | ____________________________________________
                                ______________________________________
   16                           |
   17                           |       Arquivo            :
   18                           |       Descrição          :
   19                           | 
   20                           |       Autor              :
   21                           |       Data criação       :
   22                           |
   23                           |       Revisões           :
   24                           |
   25                           |
   26                           | ____________________________________________
                                ______________________________________
   27                           */
   28                           #include <FreeRTOSConfig.h>
   29                           
   30                           #ifndef configKERNEL_INTERRUPT_PRIORITY
   31                                   #define configKERNEL_INTERRUPT_PRIORIT
                                Y 0
   32                           #endif
   33                           
   34                                   
   35                                   RSEG    CODE:CODE(2)
   36                                   thumb
   37                           
   38                                   EXTERN vPortYieldFromISR
   39                                   EXTERN pxCurrentTCB
   40                                   EXTERN vTaskSwitchContext
   41                           
   42                                   PUBLIC vSetMSP
   43                                   PUBLIC xPortPendSVHandler
   44                                   PUBLIC vPortSetInterruptMask
   45                                   PUBLIC vPortClearInterruptMask
   46                                   PUBLIC vPortSVCHandler
   47                                   PUBLIC vPortStartFirstTask
   48                           
   49                           
   50                           /*--------------------------------------------
                                ---------------*/
   51                           
   52                           vSetMSP
   53    00000000 80F30888              msr msp, r0
   54    00000004 7047                  bx lr
   55                                   
   56                           /*--------------------------------------------
                                ---------------*/
   57                           
   58                           xPortPendSVHandler:
   59    00000006 EFF30980              mrs r0, psp                            
                                                             
   60    0000000A 1E4B                  ldr     r3, =pxCurrentTCB              
                                                         /* Get the location of
                                                 the current TCB. */
   61    0000000C 1A68                  ldr     r2, [r3]                       
                                                                        
                                                 
   62                           
   63    0000000E 20E9F00F              stmdb r0!, {r4-r11}                    
                                                       /* Save the remaining
                                               registers. */
   64    00000012 1060                  str r0, [r2]                           
                                                     /* Save the new top of
                                             stack into the first member of the
                                             TCB. */
   65                           
   66    00000014 08B5                  stmdb sp!, {r3, r14}
   67    00000016 4FF02800              mov r0, #configMAX_SYSCALL_INTERRUPT_PR
                                            IORITY
   68    0000001A 80F31188              msr basepri, r0
   69    0000001E ........              bl vTaskSwitchContext                  
                                            
   70    00000022 4FF00000              mov r0, #0
   71    00000026 80F31188              msr basepri, r0
   72    0000002A BDE80840              ldmia sp!, {r3, r14}
   73                           
   74    0000002E 1968                  ldr r1, [r3]                           
                                                     
   75    00000030 0868                  ldr r0, [r1]                           
                                                     /* The first item in
                                             pxCurrentTCB is the task top of
                                             stack. */
   76    00000032 B0E8F00F              ldmia r0!, {r4-r11}                    
                                                       /* Pop the registers.
                                               */
   77    00000036 80F30988              msr psp, r0                            
                                                             
   78    0000003A 7047                  bx r14                                 
                                                            
   79                           
   80                           
   81                           /*--------------------------------------------
                                ---------------*/
   82                           
   83                           vPortSetInterruptMask:
   84    0000003C 01B4                  push { r0 }
   85    0000003E 4FF02800              mov R0, #configMAX_SYSCALL_INTERRUPT_PR
                                            IORITY
   86    00000042 80F31188              msr BASEPRI, R0
   87    00000046 01BC                  pop { R0 }
   88                           
   89    00000048 7047                  bx r14
   90                                   
   91                           /*--------------------------------------------
                                ---------------*/
   92                           
   93                           vPortClearInterruptMask:
   94    0000004A 01B4                  PUSH { r0 }
   95    0000004C 4FF00000              MOV R0, #0
   96    00000050 80F31188              MSR BASEPRI, R0
   97    00000054 01BC                  POP      { R0 }
   98                           
   99    00000056 7047                  bx r14
  100                           
  101                           /*--------------------------------------------
                                ---------------*/
  102                           
  103                           vPortSVCHandler;
  104    00000058 0A4B                  ldr     r3, =pxCurrentTCB
  105    0000005A 1968                  ldr r1, [r3]
  106    0000005C 0868                  ldr r0, [r1]
  107    0000005E B0E8F00F              ldmia r0!, {r4-r11}
  108    00000062 80F30988              msr psp, r0
  109    00000066 4FF00000              mov r0, #0
  110    0000006A 80F31188              msr     basepri, r0
  111    0000006E 4EF00D0E              orr r14, r14, #13
  112    00000072 7047                  bx r14
  113                           
  114                           /*--------------------------------------------
                                ---------------*/
  115                           
  116                           vPortStartFirstTask
  117                                   /* Use the NVIC offset register to
                                 locate the stack. */
  118    00000074 0448                  ldr r0, =0xE000ED08
  119    00000076 0068                  ldr r0, [r0]
  120    00000078 0068                  ldr r0, [r0]
  121                                   /* Set the msp back to the start of
                                 the stack. */
  122    0000007A 80F30888              msr msp, r0
  123                                   /* Call SVC to start the first task.
                                 */
  124    0000007E 62B6                  cpsie i
  125    00000080 00DF                  svc 0
  126                           
  127                                   END
  127.1  00000082 0000                   TABLE
  127.2  00000084 ........              Reference on line 60,104 
  127.3  00000088 08ED00E0              Reference on line 118 
  127.4                                 END (including table)
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 140         #
##############################




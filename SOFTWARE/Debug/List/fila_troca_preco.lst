###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      08/Sep/2017  19:51:47 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Historico_precos\f #
#                    ila_troca_preco.c                                        #
#    Command line =  C:\repositorios\MaisPipocaG2\SOFTWARE\Historico_precos\f #
#                    ila_troca_preco.c -lC C:\repositorios\MaisPipocaG2\SOFTW #
#                    ARE\Debug\List\ -lA C:\repositorios\MaisPipocaG2\SOFTWAR #
#                    E\Debug\List\ -o C:\repositorios\MaisPipocaG2\SOFTWARE\D #
#                    ebug\Obj\ --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -On                                               #
#    List file    =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\List\fila_tr #
#                    oca_preco.lst                                            #
#    Object file  =  C:\repositorios\MaisPipocaG2\SOFTWARE\Debug\Obj\fila_tro #
#                    ca_preco.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\repositorios\MaisPipocaG2\SOFTWARE\Historico_precos\fila_troca_preco.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica 
      3          |       
      4          |       Porto Belo
      5          | __________________________________________________________________________________
      6          |
      7          |       This source code was developed by Dextro and cannot be copied, in part 
      8          |       or in whole, or used, except when legally licensed by Dextro
      9          |       or its distributors.
     10          |
     11          |       Este código é propriedade da Dextro e não pode ser copiado, em parte 
     12          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     13          |      Dextro ou por um de seus distribuidores.
     14          | __________________________________________________________________________________
     15          |
     16          |       Arquivo            :  flash_queue.c
     17          |       Descrição          :  Funções para implementação da fila
     18          |                             de eventos na memória de massa
     19          | 
     20          |       Autor              :  Marcos Aquino
     21          |       Data criação       :  15/06/2017
     22          |
     23          |       Revisões           :  1.0.0.0
     24          |     
     25          
     26          |
     27          | __________________________________________________________________________________
     28          */
     29          
     30          /***********************************************************************************
     31          *       Includes
     32          ***********************************************************************************/
     33          #include <stdio.h>
     34          #include <stdlib.h>
     35          #include <string.h>
     36          #include "..\includes.h"
     37          #include "flash_queue.h"
     38          
     39          /***********************************************************************************
     40          *       Definições
     41          ***********************************************************************************/
     42          
     43          
     44          /***********************************************************************************
     45          *       Estruturas
     46          ***********************************************************************************/
     47          typedef struct{
     48            unsigned short int novo_preco;
     49            unsigned short int preco_antigo;
     50            unsigned char hora,minuto,segundo,dia,mes;
     51            unsigned  int ano;  
     52          }sTROCA_PRECO;
     53          
     54          /***********************************************************************************
     55          *       Constantes
     56          ***********************************************************************************/
     57          
     58          
     59          /***********************************************************************************
     60          *       Variaveis locais]
     61          **********************************************************************************/

   \                                 In section .data, align 4
     62          sFlashQueueData FTP_fila_troca_preco={
   \                     FTP_fila_troca_preco:
   \   00000000   0x00000E00         DC32 3584
   \   00000004   0x000A             DC16 10
   \   00000006   0x10 0x00          DC8 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     63            .inicio_flash = AREA_TABELA,
     64            .posicoes = 10,
     65            .tamanhoBloco = sizeof(sTROCA_PRECO)  
     66          };
     67          
     68          /***********************************************************************************
     69          *       Funções locais
     70          ***********************************************************************************/
     71          
     72          
     73          /***********************************************************************************
     74          *       Tabelas de funções
     75          ***********************************************************************************/
     76          
     77          /***********************************************************************************
     78          *       Implementação das funções
     79          ***********************************************************************************/
     80          
     81          /***********************************************************************************
     82          *       Descrição       :       Insere um novo evento de troca de preço
     83          *                               na fila
     84          *       Parametros      :       (unsigned short int) novo preço
     85          *                               (unsigned short int) preço anterior
     86          *                               (unsigned char ) hora
     87          *                               (unsigned char) minuto
     88          *                               (unsigned char) segundo
     89          *                               (unsigned char) dia
     90          *                               (unsigned char) mes
     91          *                               (unsigned short int) ano
     92          *       Retorno         :       nenhum
     93          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     94          void FTP_novo_preco(unsigned short int novo_preco,unsigned short int preco_antigo){  
   \                     FTP_novo_preco:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
     95            sTROCA_PRECO dados;
     96                                
     97            dados.novo_preco = novo_preco;
   \   00000008   0xF8AD 0x4008      STRH     R4,[SP, #+8]
     98            dados.preco_antigo = preco_antigo;
   \   0000000C   0xF8AD 0x500A      STRH     R5,[SP, #+10]
     99            
    100            //Carrega o horário da alteração
    101            RTC_getValue(&dados.hora,&dados.minuto,&dados.segundo,&dados.dia,&dados.mes,&dados.ano);  
   \   00000010   0xA805             ADD      R0,SP,#+20
   \   00000012   0x9001             STR      R0,[SP, #+4]
   \   00000014   0xA804             ADD      R0,SP,#+16
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0xF10D 0x030F      ADD      R3,SP,#+15
   \   0000001C   0xF10D 0x020E      ADD      R2,SP,#+14
   \   00000020   0xF10D 0x010D      ADD      R1,SP,#+13
   \   00000024   0xA803             ADD      R0,SP,#+12
   \   00000026   0x.... 0x....      BL       RTC_getValue
    102            
    103            //unsigned char FLASHQUEUE_append(sFlashQueueData* queue,void *pData)
    104            FLASHQUEUE_append(&FTP_fila_troca_preco,(void*)&dados);                      
   \   0000002A   0xA902             ADD      R1,SP,#+8
   \   0000002C   0x....             LDR.N    R0,??DataTable5
   \   0000002E   0x.... 0x....      BL       FLASHQUEUE_append
    105          }
   \   00000032   0xB007             ADD      SP,SP,#+28
   \   00000034   0xBD30             POP      {R4,R5,PC}       ;; return
    106          /***********************************************************************************
    107          *       Descrição       :       Verifica quantos novos eventos de troca
    108          *                               preço existem na fila de eventos
    109          *       Parametros      :       nenhum
    110          *       Retorno         :       (usnigned short int) quantidade de novos
    111          *                                                    eventos
    112          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    113          unsigned short int FTP_get_quantidade_novas_trocas(void){
   \                     FTP_get_quantidade_novas_trocas:
   \   00000000   0xB580             PUSH     {R7,LR}
    114            
    115            return FLASHQUEUE_getSize(&FTP_fila_troca_preco);
   \   00000002   0x....             LDR.N    R0,??DataTable5
   \   00000004   0x.... 0x....      BL       FLASHQUEUE_getSize
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    116          }
    117          /***********************************************************************************
    118          *       Descrição       :       Verifiac quantos eventos existem ao total na fila
    119          *       Parametros      :       nenhum
    120          *       Retorno         :       (unsigned short int) quantidade total de eventos
    121          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    122          unsigned short int FTP_get_quantidade_historico_trocas(void){
   \                     FTP_get_quantidade_historico_trocas:
   \   00000000   0xB580             PUSH     {R7,LR}
    123              
    124            return FLASHQUEUE_getRealSize(&FTP_fila_troca_preco);
   \   00000002   0x....             LDR.N    R0,??DataTable5
   \   00000004   0x.... 0x....      BL       FLASHQUEUE_getRealSize
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    125          }
    126          /***********************************************************************************
    127          *       Descrição       :       Lê um evento na fila de eventos
    128          *       Parametros      :       (unsigned short int) indice do evento
    129          *                               (unsigned short int*) preço
    130          *                               (unsigned short int*) preço antigo
    131          *                               (unsigned char) hora
    132          *                               (unsigned char) minuto
    133          *                               (unsigned char) segundo
    134          *                               (unsigned char) dia
    135          *                               (unsigned char) mês
    136          *                               (unsigned short int) ano
    137          *       Retorno         :       (unsigned char) maior do que zero se existir
    138          *                                               evento com este indice
    139          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    140          unsigned char FTP_get_troca(unsigned short int indice,unsigned short int *novo_preco,unsigned short int *preco_antigo,
    141                                      unsigned char *hora,unsigned char *minuto,unsigned char *segundo,
    142                                      unsigned char *dia,unsigned char *mes,unsigned int *ano){
   \                     FTP_get_troca:
   \   00000000   0xE92D 0x4FF3      PUSH     {R0,R1,R4-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x0014             MOVS     R4,R2
   \   00000008   0x001D             MOVS     R5,R3
   \   0000000A   0x9E10             LDR      R6,[SP, #+64]
   \   0000000C   0x9F11             LDR      R7,[SP, #+68]
   \   0000000E   0xF8DD 0x8048      LDR      R8,[SP, #+72]
   \   00000012   0xF8DD 0x904C      LDR      R9,[SP, #+76]
   \   00000016   0xF8DD 0xA050      LDR      R10,[SP, #+80]
    143            sTROCA_PRECO dados;
    144            unsigned char flag;
    145            
    146            flag = FLASHQUEUE_readFromLast(&FTP_fila_troca_preco,indice,(void*)&dados);
   \   0000001A   0xAA00             ADD      R2,SP,#+0
   \   0000001C   0xF8BD 0x1014      LDRH     R1,[SP, #+20]
   \   00000020   0x....             LDR.N    R0,??DataTable5
   \   00000022   0x.... 0x....      BL       FLASHQUEUE_readFromLast
   \   00000026   0x4683             MOV      R11,R0
    147                        
    148            *novo_preco = dados.novo_preco;
   \   00000028   0x9806             LDR      R0,[SP, #+24]
   \   0000002A   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000002E   0x8001             STRH     R1,[R0, #+0]
    149            *preco_antigo = dados.preco_antigo;
   \   00000030   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000034   0x8020             STRH     R0,[R4, #+0]
    150            *hora = dados.hora;
   \   00000036   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   0000003A   0x7028             STRB     R0,[R5, #+0]
    151            *minuto = dados.minuto;
   \   0000003C   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \   00000040   0x7030             STRB     R0,[R6, #+0]
    152            *segundo = dados.segundo;
   \   00000042   0xF89D 0x0006      LDRB     R0,[SP, #+6]
   \   00000046   0x7038             STRB     R0,[R7, #+0]
    153            *dia = dados.dia;
   \   00000048   0xF89D 0x0007      LDRB     R0,[SP, #+7]
   \   0000004C   0xF888 0x0000      STRB     R0,[R8, #+0]
    154            *mes = dados.mes;
   \   00000050   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000054   0xF889 0x0000      STRB     R0,[R9, #+0]
    155            *ano = dados.ano;
   \   00000058   0x9803             LDR      R0,[SP, #+12]
   \   0000005A   0xF8CA 0x0000      STR      R0,[R10, #+0]
    156            
    157            return flag;                     
   \   0000005E   0x4658             MOV      R0,R11
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0xB007             ADD      SP,SP,#+28
   \   00000064   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    158          }
    159          /***********************************************************************************
    160          *       Descrição       :       Reconhece os novos eventos, como efeito o 
    161          *                               indice é atualizado para retornar zero em novos eventos
    162          *       Parametros      :       nenhum
    163          *       Retorno         :       nenhum
    164          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    165          void FTP_ack_novos_eventos(void){
   \                     FTP_ack_novos_eventos:
   \   00000000   0xB580             PUSH     {R7,LR}
    166              
    167            FLASHQUEUE_ajustaPonteiro(&FTP_fila_troca_preco,FTP_get_quantidade_novas_trocas());
   \   00000002   0x.... 0x....      BL       FTP_get_quantidade_novas_trocas
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000A   0x....             LDR.N    R0,??DataTable5
   \   0000000C   0x.... 0x....      BL       FLASHQUEUE_ajustaPonteiro
    168          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return
    169          /***********************************************************************************
    170          *       Descrição       :       Formata os dados da fila de eventos de troca
    171          *                               de preço
    172          *       Parametros      :       nenhum
    173          *       Retorno         :       nenhum
    174          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    175          void FTP_formata_fila(void){
   \                     FTP_formata_fila:
   \   00000000   0xB580             PUSH     {R7,LR}
    176              
    177            FLASHQUEUE_formata(&FTP_fila_troca_preco);
   \   00000002   0x....             LDR.N    R0,??DataTable5
   \   00000004   0x.... 0x....      BL       FLASHQUEUE_formata
    178          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     FTP_fila_troca_preco
    179          /***********************************************************************************
    180          *       Fim do arquivo
    181          ***********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   FTP_ack_novos_eventos
         8   -> FLASHQUEUE_ajustaPonteiro
         8   -> FTP_get_quantidade_novas_trocas
       8   FTP_formata_fila
         8   -> FLASHQUEUE_formata
       8   FTP_get_quantidade_historico_trocas
         8   -> FLASHQUEUE_getRealSize
       8   FTP_get_quantidade_novas_trocas
         8   -> FLASHQUEUE_getSize
      64   FTP_get_troca
        64   -> FLASHQUEUE_readFromLast
      40   FTP_novo_preco
        40   -> FLASHQUEUE_append
        40   -> RTC_getValue


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
      18  FTP_ack_novos_eventos
      28  FTP_fila_troca_preco
      10  FTP_formata_fila
      10  FTP_get_quantidade_historico_trocas
      10  FTP_get_quantidade_novas_trocas
     104  FTP_get_troca
      54  FTP_novo_preco

 
  28 bytes in section .data
 210 bytes in section .text
 
 210 bytes of CODE memory
  28 bytes of DATA memory

Errors: none
Warnings: none

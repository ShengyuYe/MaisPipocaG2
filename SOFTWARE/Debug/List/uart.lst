###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      17/Jul/2017  15:15:37 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\UARTS\uart.c                      #
#    Command line =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Drivers\UARTS\uart.c -lC                  #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -lA                           #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\ -o                            #
#                    C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol                                               #
#    List file    =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\List\uart.lst                       #
#    Object file  =  C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPip #
#                    ocaG2\SOFTWARE\Debug\Obj\uart.o                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Marcos\Dropbox\Reps\Dextro\IBA\Hardware\MaisPipocaG2\SOFTWARE\Drivers\UARTS\uart.c
      1          /*__________________________________________________________________________________
      2          |	Quark Tecnologia Eletrônica Embarcada
      3          |       
      4          |       Itapema - SC
      5          |       www.quarktee.com.br
      6          | __________________________________________________________________________________
      7          |
      8          |       This source code was developed by Quark  and cannot be copied, in part 
      9          |       or in whole, or used, except when legally licensed by Quark 
     10          |       or its distributors.
     11          |
     12          |       Este código é propriedade da Quark  e não pode ser copiado, em parte 
     13          |       ou em todo, ou utilizado, exceto quando for legalmente licenciado pela 
     14          |       Quark  ou por um de seus distribuidores.
     15          | __________________________________________________________________________________
     16          |
     17          |       Arquivo            :  Uart.c
     18          |       Descrição          :  Funções para acesso às uarts do LPC
     19          | 
     20          |       Autor              :  Marcos 
     21          |       Data criação       :  27/07/2011
     22          |
     23          |       Revisões           :  1.0
     24          |
     25          |
     26          | __________________________________________________________________________________
     27          */
     28          /***********************************************************************************
     29          *		Includes
     30          ***********************************************************************************/
     31          #include <stdio.h>
     32          #include <nxp\iolpc1768.h>

   \                                 In section .noinit, at 0xe000e100
   \   __absolute union <unnamed> volatile _A_SETENA0
   \                     _A_SETENA0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0xe000e280
   \   __absolute union <unnamed> volatile _A_CLRPEND0
   \                     _A_CLRPEND0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0xe000e404
   \   __absolute union <unnamed> volatile _A_IP1
   \                     _A_IP1:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0xe000e408
   \   __absolute union <unnamed> volatile _A_IP2
   \                     _A_IP2:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x400fc1a8
   \   __absolute union <unnamed> volatile _A_PCLKSEL0
   \                     _A_PCLKSEL0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x400fc1ac
   \   __absolute union <unnamed> volatile _A_PCLKSEL1
   \                     _A_PCLKSEL1:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x400fc0c4
   \   __absolute union <unnamed> volatile _A_PCONP
   \                     _A_PCONP:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4002c000
   \   __absolute union <unnamed> volatile _A_PINSEL0
   \                     _A_PINSEL0:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4002c010
   \   __absolute union <unnamed> volatile _A_PINSEL4
   \                     _A_PINSEL4:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c018
   \   __absolute union <unnamed> volatile _A_FIO0SET
   \                     _A_FIO0SET:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x2009c01c
   \   __absolute union <unnamed> volatile _A_FIO0CLR
   \                     _A_FIO0CLR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4000c000
   \   __absolute unsigned char volatile U0RBRTHR
   \                     U0RBRTHR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x4000c004
   \   __absolute union <unnamed> volatile _A_U0IER
   \                     _A_U0IER:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4000c008
   \   __absolute union <unnamed> volatile _A_U0FCR
   \                     _A_U0FCR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4000c00c
   \   __absolute union <unnamed> volatile _A_U0LCR
   \                     _A_U0LCR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x40010000
   \   __absolute unsigned char volatile U1RBRTHR
   \                     U1RBRTHR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x40010004
   \   __absolute union <unnamed> volatile _A_U1IER
   \                     _A_U1IER:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x40010008
   \   __absolute union <unnamed> volatile _A_U1FCR
   \                     _A_U1FCR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4001000c
   \   __absolute union <unnamed> volatile _A_U1LCR
   \                     _A_U1LCR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x40010014
   \   __absolute union <unnamed> const volatile _A_U1LSR
   \                     _A_U1LSR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x40098000
   \   __absolute unsigned char volatile U2RBRTHR
   \                     U2RBRTHR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x40098004
   \   __absolute union <unnamed> volatile _A_U2IER
   \                     _A_U2IER:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x40098008
   \   __absolute union <unnamed> volatile _A_U2FCR
   \                     _A_U2FCR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4009800c
   \   __absolute union <unnamed> volatile _A_U2LCR
   \                     _A_U2LCR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x4009c000
   \   __absolute unsigned char volatile U3RBRTHR
   \                     U3RBRTHR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x4009c004
   \   __absolute union <unnamed> volatile _A_U3IER
   \                     _A_U3IER:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4009c008
   \   __absolute union <unnamed> volatile _A_U3FCR
   \                     _A_U3FCR:
   \   00000000                      DS8 4

   \                                 In section .noinit, at 0x4009c00c
   \   __absolute union <unnamed> volatile _A_U3LCR
   \                     _A_U3LCR:
   \   00000000                      DS8 1

   \                                 In section .noinit, at 0x4009c014
   \   __absolute union <unnamed> const volatile _A_U3LSR
   \                     _A_U3LSR:
   \   00000000                      DS8 1
     33          #include "uart.h"
     34          #include "uart_types.h"
     35          #include <intrinsics.h>
     36          
     37          /***********************************************************************************
     38          *   Constantes
     39          ***********************************************************************************/
     40          #define PCLK                                            99047619
     41          #define RECEIVE_DATA_INTERRUPT                          0x01
     42          #define DATA_TRANSMIT_INTERRUPT                         0x02
     43          #define RX_LINE_INTERRUPT                               0x04
     44          
     45          
     46          
     47          #define ENABLE_TXD_3                                    (0x01)<<27
     48          #define ENABLE_RXD_3                                    (0x01)<<28
     49           
     50          #define INIT_ENABLES_COM3                               FIO0DIR |= ENABLE_TXD_3 | ENABLE_RXD_3
     51          
     52          #define SET_TXD_ENABLE_3                                FIO0SET |= ENABLE_TXD_3;
     53          #define CLR_TXD_ENABLE_3                                FIO0CLR |= ENABLE_TXD_3;
     54          /***********************************************************************************
     55          *   Estruturas
     56          ***********************************************************************************/
     57          typedef struct{
     58            void(*funcaoRxd)(unsigned char dado);
     59            unsigned char*(*funcaoTxd)(void);
     60            void(*enableFunction)(unsigned char state);
     61          }sFunctions;
     62          
     63          /***********************************************************************************
     64          *   Variaveis globais
     65          ***********************************************************************************/

   \                                 In section .bss, align 4
     66          sFunctions UART_funcoesVetores[4];
   \                     UART_funcoesVetores:
   \   00000000                      DS8 48
     67          
     68          /***********************************************************************************
     69          *   Funções locais
     70          ***********************************************************************************/
     71          
     72          
     73          /***********************************************************************************
     74          *   Implementação das funções
     75          ***********************************************************************************/
     76          
     77          /***********************************************************************************
     78          *     Descrição   :   Faz a inicialização de uma das uarts
     79          *     Parametros  :   (unsigned char) número da uart
     80          *                     (unsigned int) baudrate
     81          *                     (void)(*funcaoRxd)(unsigned char dado)
     82          *                     (unsigned char*)(*funcaoTxd)(void)
     83          *                     (void)(*enableFunction)(unsigned char state)
     84          *     Retorno     :   nenhum
     85          ***********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     86          void UART_init(unsigned char uart,unsigned long int baudrate,void(*funcRxd)(unsigned char data),
     87                         unsigned char*(*funcTxd)(void),void(*enableFunc)(unsigned char state)){
     88            unsigned long int Fdiv;
     89                  
     90            switch(uart){
   \                     UART_init:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD007             BEQ.N    ??UART_init_0
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xF000 0x808F      BEQ.W    ??UART_init_1
   \   0000000C   0xD34A             BCC.N    ??UART_init_2
   \   0000000E   0x2803             CMP      R0,#+3
   \   00000010   0xF000 0x80CE      BEQ.W    ??UART_init_3
   \   00000014   0xE10E             B.N      ??UART_init_4
     91              case UART_0: 
     92                           PINSEL0_bit.P0_2 = 0x01;  // Função alternativa para os pinos da COM 0
   \                     ??UART_init_0:
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable2  ;; 0x4002c000
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0xF360 0x1205      BFI      R2,R0,#+4,#+2
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x4002c000
   \   00000026   0x6002             STR      R2,[R0, #+0]
     93                           PINSEL0_bit.P0_3 = 0x01;
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable2  ;; 0x4002c000
   \   0000002E   0x6812             LDR      R2,[R2, #+0]
   \   00000030   0xF360 0x1287      BFI      R2,R0,#+6,#+2
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x4002c000
   \   00000038   0x6002             STR      R2,[R0, #+0]
     94            
     95                           PCONP_bit.PCUART0 = 1;
   \   0000003A   0x....             LDR.N    R0,??DataTable2_1  ;; 0x400fc0c4
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000042   0x....             LDR.N    R2,??DataTable2_1  ;; 0x400fc0c4
   \   00000044   0x6010             STR      R0,[R2, #+0]
     96                           PCLKSEL0_bit.PCLK_UART0 = 1;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x....             LDR.N    R2,??DataTable2_2  ;; 0x400fc1a8
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0xF360 0x1287      BFI      R2,R0,#+6,#+2
   \   00000050   0x....             LDR.N    R0,??DataTable2_2  ;; 0x400fc1a8
   \   00000052   0x6002             STR      R2,[R0, #+0]
     97                           
     98                           U0LCR = 0x83;   /* 8 bits, no Parity, 1 Stop bit */
   \   00000054   0x....             LDR.N    R0,??DataTable2_3  ;; 0x4000c00c
   \   00000056   0x2283             MOVS     R2,#+131
   \   00000058   0x7002             STRB     R2,[R0, #+0]
     99                           Fdiv = ( PCLK / 16 ) / baudrate ;  /*baud rate */
   \   0000005A   0x....             LDR.N    R0,??DataTable2_4  ;; 0x5e758c
   \   0000005C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    100                           U0DLM = Fdiv / 256;
   \   00000060   0x0A01             LSRS     R1,R0,#+8
   \   00000062   0x....             LDR.N    R2,??DataTable2_5  ;; 0x4000c004
   \   00000064   0x6011             STR      R1,[R2, #+0]
    101                           U0DLL = Fdiv % 256;
   \   00000066   0xF44F 0x7180      MOV      R1,#+256
   \   0000006A   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000006E   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000072   0x....             LDR.N    R0,??DataTable2_6  ;; 0x4000c000
   \   00000074   0x7002             STRB     R2,[R0, #+0]
    102                           U0LCR = 0x03;   /* DLAB = 0 */
   \   00000076   0x....             LDR.N    R0,??DataTable2_3  ;; 0x4000c00c
   \   00000078   0x2103             MOVS     R1,#+3
   \   0000007A   0x7001             STRB     R1,[R0, #+0]
    103                           U0FCR = 0x07;   /* Enable and reset TX and RX FIFO. */
   \   0000007C   0x....             LDR.N    R0,??DataTable2_7  ;; 0x4000c008
   \   0000007E   0x2107             MOVS     R1,#+7
   \   00000080   0x6001             STR      R1,[R0, #+0]
    104          
    105                           SETENA0 |= (0x01)<<5;
   \   00000082   0x....             LDR.N    R0,??DataTable2_8  ;; 0xe000e100
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000008A   0x....             LDR.N    R1,??DataTable2_8  ;; 0xe000e100
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    106                           IP1_bit.PRI_5 = 1;
   \   0000008E   0x2001             MOVS     R0,#+1
   \   00000090   0x....             LDR.N    R1,??DataTable2_9  ;; 0xe000e404
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0xF360 0x210F      BFI      R1,R0,#+8,#+8
   \   00000098   0x....             LDR.N    R0,??DataTable2_9  ;; 0xe000e404
   \   0000009A   0x6001             STR      R1,[R0, #+0]
    107                           
    108                           U0IER = IER_RBR | IER_THRE | IER_RLS; /* Enable UART0 interrupt */                   
   \   0000009C   0x....             LDR.N    R0,??DataTable2_5  ;; 0x4000c004
   \   0000009E   0x2107             MOVS     R1,#+7
   \   000000A0   0x6001             STR      R1,[R0, #+0]
    109                           break;
   \   000000A2   0xE0C7             B.N      ??UART_init_4
    110              case UART_1: 
    111                           PINSEL4_bit.P2_0 = 0x02;  // Função alternativa para os pinos da COM 1
   \                     ??UART_init_2:
   \   000000A4   0x2002             MOVS     R0,#+2
   \   000000A6   0x....             LDR.N    R2,??DataTable2_10  ;; 0x4002c010
   \   000000A8   0x6812             LDR      R2,[R2, #+0]
   \   000000AA   0xF360 0x0201      BFI      R2,R0,#+0,#+2
   \   000000AE   0x....             LDR.N    R0,??DataTable2_10  ;; 0x4002c010
   \   000000B0   0x6002             STR      R2,[R0, #+0]
    112                           PINSEL4_bit.P2_1 = 0x02;  // utilizada no protocolo TELET
   \   000000B2   0x2002             MOVS     R0,#+2
   \   000000B4   0x....             LDR.N    R2,??DataTable2_10  ;; 0x4002c010
   \   000000B6   0x6812             LDR      R2,[R2, #+0]
   \   000000B8   0xF360 0x0283      BFI      R2,R0,#+2,#+2
   \   000000BC   0x....             LDR.N    R0,??DataTable2_10  ;; 0x4002c010
   \   000000BE   0x6002             STR      R2,[R0, #+0]
    113            
    114                           PCONP_bit.PCUART1 = 1;
   \   000000C0   0x....             LDR.N    R0,??DataTable2_1  ;; 0x400fc0c4
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000C8   0x....             LDR.N    R2,??DataTable2_1  ;; 0x400fc0c4
   \   000000CA   0x6010             STR      R0,[R2, #+0]
    115                           PCLKSEL0_bit.PCLK_UART1 = 1;
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x....             LDR.N    R2,??DataTable2_2  ;; 0x400fc1a8
   \   000000D0   0x6812             LDR      R2,[R2, #+0]
   \   000000D2   0xF360 0x2209      BFI      R2,R0,#+8,#+2
   \   000000D6   0x....             LDR.N    R0,??DataTable2_2  ;; 0x400fc1a8
   \   000000D8   0x6002             STR      R2,[R0, #+0]
    116                           
    117                           U1LCR = 0x83;   /* 8 bits, no Parity, 1 Stop bit */
   \   000000DA   0x....             LDR.N    R0,??DataTable2_11  ;; 0x4001000c
   \   000000DC   0x2283             MOVS     R2,#+131
   \   000000DE   0x7002             STRB     R2,[R0, #+0]
    118                           Fdiv = ( PCLK / 16 ) / baudrate ;  /*baud rate */
   \   000000E0   0x....             LDR.N    R0,??DataTable2_4  ;; 0x5e758c
   \   000000E2   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    119                           U1DLM = Fdiv / 256;
   \   000000E6   0x0A01             LSRS     R1,R0,#+8
   \   000000E8   0x....             LDR.N    R2,??DataTable2_12  ;; 0x40010004
   \   000000EA   0x6011             STR      R1,[R2, #+0]
    120                           U1DLL = Fdiv % 256;
   \   000000EC   0xF44F 0x7180      MOV      R1,#+256
   \   000000F0   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000F4   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000F8   0x....             LDR.N    R0,??DataTable2_13  ;; 0x40010000
   \   000000FA   0x7002             STRB     R2,[R0, #+0]
    121                           U1LCR = 0x03;   /* DLAB = 0 */
   \   000000FC   0x....             LDR.N    R0,??DataTable2_11  ;; 0x4001000c
   \   000000FE   0x2103             MOVS     R1,#+3
   \   00000100   0x7001             STRB     R1,[R0, #+0]
    122                           U1FCR = 0x07;   /* Enable and reset TX and RX FIFO. */
   \   00000102   0x....             LDR.N    R0,??DataTable2_14  ;; 0x40010008
   \   00000104   0x2107             MOVS     R1,#+7
   \   00000106   0x6001             STR      R1,[R0, #+0]
    123          
    124                           SETENA0 |= (0x01)<<6;
   \   00000108   0x....             LDR.N    R0,??DataTable2_8  ;; 0xe000e100
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000110   0x....             LDR.N    R1,??DataTable2_8  ;; 0xe000e100
   \   00000112   0x6008             STR      R0,[R1, #+0]
    125                           IP1_bit.PRI_6 = 1;
   \   00000114   0x2001             MOVS     R0,#+1
   \   00000116   0x....             LDR.N    R1,??DataTable2_9  ;; 0xe000e404
   \   00000118   0x6809             LDR      R1,[R1, #+0]
   \   0000011A   0xF360 0x4117      BFI      R1,R0,#+16,#+8
   \   0000011E   0x....             LDR.N    R0,??DataTable2_9  ;; 0xe000e404
   \   00000120   0x6001             STR      R1,[R0, #+0]
    126                           
    127                           U1IER = IER_RBR | IER_THRE | IER_RLS; /* Enable UART0 interrupt */             
   \   00000122   0x....             LDR.N    R0,??DataTable2_12  ;; 0x40010004
   \   00000124   0x2107             MOVS     R1,#+7
   \   00000126   0x6001             STR      R1,[R0, #+0]
    128                           break;      
   \   00000128   0xE084             B.N      ??UART_init_4
    129              case UART_2:
    130                           PINSEL0_bit.P0_10 = 1;
   \                     ??UART_init_1:
   \   0000012A   0x2001             MOVS     R0,#+1
   \   0000012C   0x....             LDR.N    R2,??DataTable2  ;; 0x4002c000
   \   0000012E   0x6812             LDR      R2,[R2, #+0]
   \   00000130   0xF360 0x5215      BFI      R2,R0,#+20,#+2
   \   00000134   0x....             LDR.N    R0,??DataTable2  ;; 0x4002c000
   \   00000136   0x6002             STR      R2,[R0, #+0]
    131                           PINSEL0_bit.P0_11 = 1;
   \   00000138   0x2001             MOVS     R0,#+1
   \   0000013A   0x....             LDR.N    R2,??DataTable2  ;; 0x4002c000
   \   0000013C   0x6812             LDR      R2,[R2, #+0]
   \   0000013E   0xF360 0x5297      BFI      R2,R0,#+22,#+2
   \   00000142   0x....             LDR.N    R0,??DataTable2  ;; 0x4002c000
   \   00000144   0x6002             STR      R2,[R0, #+0]
    132                
    133                           PCONP_bit.PCUART2 = 1;
   \   00000146   0x....             LDR.N    R0,??DataTable2_1  ;; 0x400fc0c4
   \   00000148   0x6800             LDR      R0,[R0, #+0]
   \   0000014A   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000014E   0x....             LDR.N    R2,??DataTable2_1  ;; 0x400fc0c4
   \   00000150   0x6010             STR      R0,[R2, #+0]
    134                           PCLKSEL1_bit.PCLK_UART2 = 1;
   \   00000152   0x2001             MOVS     R0,#+1
   \   00000154   0x....             LDR.N    R2,??DataTable2_15  ;; 0x400fc1ac
   \   00000156   0x6812             LDR      R2,[R2, #+0]
   \   00000158   0xF360 0x4211      BFI      R2,R0,#+16,#+2
   \   0000015C   0x....             LDR.N    R0,??DataTable2_15  ;; 0x400fc1ac
   \   0000015E   0x6002             STR      R2,[R0, #+0]
    135                           
    136                           U2LCR = 0x83;   /* 8 bits, no Parity, 1 Stop bit */
   \   00000160   0x....             LDR.N    R0,??DataTable2_16  ;; 0x4009800c
   \   00000162   0x2283             MOVS     R2,#+131
   \   00000164   0x7002             STRB     R2,[R0, #+0]
    137                           Fdiv = ( PCLK / 16 ) / baudrate ;  /*baud rate */
   \   00000166   0x....             LDR.N    R0,??DataTable2_4  ;; 0x5e758c
   \   00000168   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    138                           U2DLM = Fdiv / 256;
   \   0000016C   0x0A01             LSRS     R1,R0,#+8
   \   0000016E   0x....             LDR.N    R2,??DataTable2_17  ;; 0x40098004
   \   00000170   0x6011             STR      R1,[R2, #+0]
    139                           U2DLL = Fdiv % 256;
   \   00000172   0xF44F 0x7180      MOV      R1,#+256
   \   00000176   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000017A   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000017E   0x....             LDR.N    R0,??DataTable2_18  ;; 0x40098000
   \   00000180   0x7002             STRB     R2,[R0, #+0]
    140                           U2LCR = 0x03;   /* DLAB = 0 */
   \   00000182   0x....             LDR.N    R0,??DataTable2_16  ;; 0x4009800c
   \   00000184   0x2103             MOVS     R1,#+3
   \   00000186   0x7001             STRB     R1,[R0, #+0]
    141                           U2FCR = 0x00;
   \   00000188   0x....             LDR.N    R0,??DataTable2_19  ;; 0x40098008
   \   0000018A   0x2100             MOVS     R1,#+0
   \   0000018C   0x6001             STR      R1,[R0, #+0]
    142          
    143                           SETENA0 |= (0x01)<<7;
   \   0000018E   0x....             LDR.N    R0,??DataTable2_8  ;; 0xe000e100
   \   00000190   0x6800             LDR      R0,[R0, #+0]
   \   00000192   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000196   0x....             LDR.N    R1,??DataTable2_8  ;; 0xe000e100
   \   00000198   0x6008             STR      R0,[R1, #+0]
    144                           IP1_bit.PRI_7 = 1;
   \   0000019A   0x2001             MOVS     R0,#+1
   \   0000019C   0x....             LDR.N    R1,??DataTable2_9  ;; 0xe000e404
   \   0000019E   0x6809             LDR      R1,[R1, #+0]
   \   000001A0   0xF360 0x611F      BFI      R1,R0,#+24,#+8
   \   000001A4   0x....             LDR.N    R0,??DataTable2_9  ;; 0xe000e404
   \   000001A6   0x6001             STR      R1,[R0, #+0]
    145                           
    146                           U2IER = IER_RBR | IER_THRE;// | IER_RLS; /* Enable UART0 interrupt */         
   \   000001A8   0x....             LDR.N    R0,??DataTable2_17  ;; 0x40098004
   \   000001AA   0x2103             MOVS     R1,#+3
   \   000001AC   0x6001             STR      R1,[R0, #+0]
    147                           break;      
   \   000001AE   0xE041             B.N      ??UART_init_4
    148              case UART_3:
    149                           PINSEL0_bit.P0_0 = 0x02;  // Função alternativa para os pinos da com 3
   \                     ??UART_init_3:
   \   000001B0   0x2002             MOVS     R0,#+2
   \   000001B2   0x....             LDR.N    R2,??DataTable2  ;; 0x4002c000
   \   000001B4   0x6812             LDR      R2,[R2, #+0]
   \   000001B6   0xF360 0x0201      BFI      R2,R0,#+0,#+2
   \   000001BA   0x....             LDR.N    R0,??DataTable2  ;; 0x4002c000
   \   000001BC   0x6002             STR      R2,[R0, #+0]
    150                           PINSEL0_bit.P0_1 = 0x02;
   \   000001BE   0x2002             MOVS     R0,#+2
   \   000001C0   0x....             LDR.N    R2,??DataTable2  ;; 0x4002c000
   \   000001C2   0x6812             LDR      R2,[R2, #+0]
   \   000001C4   0xF360 0x0283      BFI      R2,R0,#+2,#+2
   \   000001C8   0x....             LDR.N    R0,??DataTable2  ;; 0x4002c000
   \   000001CA   0x6002             STR      R2,[R0, #+0]
    151            
    152                           PCONP_bit.PCUART3 = 1;
   \   000001CC   0x....             LDR.N    R0,??DataTable2_1  ;; 0x400fc0c4
   \   000001CE   0x6800             LDR      R0,[R0, #+0]
   \   000001D0   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   000001D4   0x....             LDR.N    R2,??DataTable2_1  ;; 0x400fc0c4
   \   000001D6   0x6010             STR      R0,[R2, #+0]
    153                           PCLKSEL1_bit.PCLK_UART3 = 1;
   \   000001D8   0x2001             MOVS     R0,#+1
   \   000001DA   0x....             LDR.N    R2,??DataTable2_15  ;; 0x400fc1ac
   \   000001DC   0x6812             LDR      R2,[R2, #+0]
   \   000001DE   0xF360 0x4293      BFI      R2,R0,#+18,#+2
   \   000001E2   0x....             LDR.N    R0,??DataTable2_15  ;; 0x400fc1ac
   \   000001E4   0x6002             STR      R2,[R0, #+0]
    154                                            
    155                           U3LCR = 0x83;   /* 8 bits, no Parity, 1 Stop bit */
   \   000001E6   0x....             LDR.N    R0,??DataTable2_20  ;; 0x4009c00c
   \   000001E8   0x2283             MOVS     R2,#+131
   \   000001EA   0x7002             STRB     R2,[R0, #+0]
    156                           Fdiv = ( PCLK / 16 ) / baudrate ;  /*baud rate */
   \   000001EC   0x....             LDR.N    R0,??DataTable2_4  ;; 0x5e758c
   \   000001EE   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    157                           U3DLM = Fdiv / 256;
   \   000001F2   0x0A01             LSRS     R1,R0,#+8
   \   000001F4   0x....             LDR.N    R2,??DataTable2_21  ;; 0x4009c004
   \   000001F6   0x6011             STR      R1,[R2, #+0]
    158                           U3DLL = Fdiv % 256;
   \   000001F8   0xF44F 0x7180      MOV      R1,#+256
   \   000001FC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000200   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000204   0x....             LDR.N    R0,??DataTable2_22  ;; 0x4009c000
   \   00000206   0x7002             STRB     R2,[R0, #+0]
    159                           U3LCR = 0x03;   /* DLAB = 0 */
   \   00000208   0x....             LDR.N    R0,??DataTable2_20  ;; 0x4009c00c
   \   0000020A   0x2103             MOVS     R1,#+3
   \   0000020C   0x7001             STRB     R1,[R0, #+0]
    160                           U3FCR = 0x07;   /* Enable and reset TX and RX FIFO. */
   \   0000020E   0x....             LDR.N    R0,??DataTable2_23  ;; 0x4009c008
   \   00000210   0x2107             MOVS     R1,#+7
   \   00000212   0x6001             STR      R1,[R0, #+0]
    161          
    162                           SETENA0 |= (0x01)<<8;// Habilitação da interrupção...
   \   00000214   0x....             LDR.N    R0,??DataTable2_8  ;; 0xe000e100
   \   00000216   0x6800             LDR      R0,[R0, #+0]
   \   00000218   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000021C   0x....             LDR.N    R1,??DataTable2_8  ;; 0xe000e100
   \   0000021E   0x6008             STR      R0,[R1, #+0]
    163                           IP2_bit.PRI_8 = 1;
   \   00000220   0x2001             MOVS     R0,#+1
   \   00000222   0x....             LDR.N    R1,??DataTable2_24  ;; 0xe000e408
   \   00000224   0x6809             LDR      R1,[R1, #+0]
   \   00000226   0xF360 0x0107      BFI      R1,R0,#+0,#+8
   \   0000022A   0x....             LDR.N    R0,??DataTable2_24  ;; 0xe000e408
   \   0000022C   0x6001             STR      R1,[R0, #+0]
    164                           
    165                           U3IER = IER_RBR | IER_THRE | IER_RLS; /* Enable UART0 interrupt */               
   \   0000022E   0x....             LDR.N    R0,??DataTable2_21  ;; 0x4009c004
   \   00000230   0x2107             MOVS     R1,#+7
   \   00000232   0x6001             STR      R1,[R0, #+0]
    166                           break;      
    167            }  
    168          }
   \                     ??UART_init_4:
   \   00000234   0x4770             BX       LR               ;; return
   \   00000236                      REQUIRE _A_PINSEL0
   \   00000236                      REQUIRE _A_PCONP
   \   00000236                      REQUIRE _A_PCLKSEL0
   \   00000236                      REQUIRE _A_U0LCR
   \   00000236                      REQUIRE _A_U0IER
   \   00000236                      REQUIRE U0RBRTHR
   \   00000236                      REQUIRE _A_U0FCR
   \   00000236                      REQUIRE _A_SETENA0
   \   00000236                      REQUIRE _A_IP1
   \   00000236                      REQUIRE _A_PINSEL4
   \   00000236                      REQUIRE _A_U1LCR
   \   00000236                      REQUIRE _A_U1IER
   \   00000236                      REQUIRE U1RBRTHR
   \   00000236                      REQUIRE _A_U1FCR
   \   00000236                      REQUIRE _A_PCLKSEL1
   \   00000236                      REQUIRE _A_U2LCR
   \   00000236                      REQUIRE _A_U2IER
   \   00000236                      REQUIRE U2RBRTHR
   \   00000236                      REQUIRE _A_U2FCR
   \   00000236                      REQUIRE _A_U3LCR
   \   00000236                      REQUIRE _A_U3IER
   \   00000236                      REQUIRE U3RBRTHR
   \   00000236                      REQUIRE _A_U3FCR
   \   00000236                      REQUIRE _A_IP2
    169          /**********************************************************************************
    170          *     Descrição   :   Vetor de interrupção da uart 1
    171          *     Parametros  :   nenhum
    172          *     Retorno     :   nenhum
    173          **********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    174          void UART_irq_uart_1(void){
   \                     UART_irq_uart_1:
   \   00000000   0xB510             PUSH     {R4,LR}
    175            unsigned char dummy,*pointer;
    176            
    177            switch(U1IIR_bit.IID){
   \   00000002   0x....             LDR.N    R0,??DataTable2_14  ;; 0x40010008
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0840             LSRS     R0,R0,#+1
   \   00000008   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD006             BEQ.N    ??UART_irq_uart_1_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD01F             BEQ.N    ??UART_irq_uart_1_1
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD024             BEQ.N    ??UART_irq_uart_1_2
   \   00000018   0x2806             CMP      R0,#+6
   \   0000001A   0xD028             BEQ.N    ??UART_irq_uart_1_3
   \   0000001C   0xE027             B.N      ??UART_irq_uart_1_4
    178              case THRE:
    179                         pointer = UART_funcoesVetores[1].funcaoTxd();
   \                     ??UART_irq_uart_1_0:
   \   0000001E   0x....             LDR.N    R0,??DataTable2_25
   \   00000020   0x6900             LDR      R0,[R0, #+16]
   \   00000022   0x4780             BLX      R0
   \   00000024   0x0004             MOVS     R4,R0
    180                         if(pointer != NULL){
   \   00000026   0x2C00             CMP      R4,#+0
   \   00000028   0xD00B             BEQ.N    ??UART_irq_uart_1_5
    181                            if(UART_funcoesVetores[1].enableFunction)
   \   0000002A   0x....             LDR.N    R0,??DataTable2_25
   \   0000002C   0x6940             LDR      R0,[R0, #+20]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD003             BEQ.N    ??UART_irq_uart_1_6
    182                              UART_funcoesVetores[1].enableFunction(0xFF);
   \   00000032   0x20FF             MOVS     R0,#+255
   \   00000034   0x....             LDR.N    R1,??DataTable2_25
   \   00000036   0x6949             LDR      R1,[R1, #+20]
   \   00000038   0x4788             BLX      R1
    183                            U1THR = *pointer;
   \                     ??UART_irq_uart_1_6:
   \   0000003A   0x....             LDR.N    R0,??DataTable2_13  ;; 0x40010000
   \   0000003C   0x7821             LDRB     R1,[R4, #+0]
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
   \   00000040   0xE007             B.N      ??UART_irq_uart_1_7
    184                         }
    185                         else
    186                            if(UART_funcoesVetores[1].enableFunction)
   \                     ??UART_irq_uart_1_5:
   \   00000042   0x....             LDR.N    R0,??DataTable2_25
   \   00000044   0x6940             LDR      R0,[R0, #+20]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD003             BEQ.N    ??UART_irq_uart_1_7
    187                              UART_funcoesVetores[1].enableFunction(0x00);
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x....             LDR.N    R1,??DataTable2_25
   \   0000004E   0x6949             LDR      R1,[R1, #+20]
   \   00000050   0x4788             BLX      R1
    188                         break; 
   \                     ??UART_irq_uart_1_7:
   \   00000052   0xE00C             B.N      ??UART_irq_uart_1_4
    189              case RDA : dummy = U1RBR;
   \                     ??UART_irq_uart_1_1:
   \   00000054   0x....             LDR.N    R0,??DataTable2_13  ;; 0x40010000
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
    190                         UART_funcoesVetores[1].funcaoRxd(dummy);
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x....             LDR.N    R1,??DataTable2_25
   \   0000005C   0x68C9             LDR      R1,[R1, #+12]
   \   0000005E   0x4788             BLX      R1
    191                         break;      
   \   00000060   0xE005             B.N      ??UART_irq_uart_1_4
    192              case RLS : 
    193                         dummy = U1LSR;
   \                     ??UART_irq_uart_1_2:
   \   00000062   0x....             LDR.N    R0,??DataTable2_26  ;; 0x40010014
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
    194                         dummy = U1RBR;               
   \   00000066   0x....             LDR.N    R1,??DataTable2_13  ;; 0x40010000
   \   00000068   0x7809             LDRB     R1,[R1, #+0]
   \   0000006A   0x0008             MOVS     R0,R1
    195                         break;      
   \   0000006C   0xE7FF             B.N      ??UART_irq_uart_1_4
    196              case CTI :
    197                         break;      
    198            }  
    199            
    200            //Apaga o flag de interrupção pendente
    201            CLRPEND0 |= (0x01)<<6;    
   \                     ??UART_irq_uart_1_3:
   \                     ??UART_irq_uart_1_4:
   \   0000006E   0x....             LDR.N    R0,??DataTable2_27  ;; 0xe000e280
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000076   0x....             LDR.N    R1,??DataTable2_27  ;; 0xe000e280
   \   00000078   0x6008             STR      R0,[R1, #+0]
    202          }
   \   0000007A   0xBD10             POP      {R4,PC}          ;; return
   \   0000007C                      REQUIRE U1RBRTHR
   \   0000007C                      REQUIRE _A_U1LSR
   \   0000007C                      REQUIRE _A_U1FCR
   \   0000007C                      REQUIRE _A_CLRPEND0
    203          /**********************************************************************************
    204          *     Descrição   :   Vetor de interrupção da uart 2
    205          *     Parametros  :   nenhum
    206          *     Retorno     :   nenhum
    207          **********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    208          void UART_irq_uart_2(void){
    209            /*
    210            unsigned char dummy,*pointer;
    211            
    212            switch(U2IIR_bit.IID){
    213              case THRE:
    214                         pointer = UART_funcoesVetores[2].funcaoTxd();
    215                         if(pointer != NULL){
    216                            if(UART_funcoesVetores[2].enableFunction)
    217                              UART_funcoesVetores[2].enableFunction(0xFF);
    218                            U2THR = *pointer;
    219                         }
    220                         else
    221                            if(UART_funcoesVetores[2].enableFunction)
    222                              UART_funcoesVetores[2].enableFunction(0x00);
    223                         break; 
    224              case RDA : dummy = U2RBR;
    225                         UART_funcoesVetores[2].funcaoRxd(dummy);
    226                         break;      
    227              case RLS : 
    228                         dummy = U2LSR;
    229                         dummy = U2RBR;               
    230                         break;      
    231              case CTI :
    232                         break;      
    233            }  
    234            
    235            //Apaga o flag de interrupção pendente
    236            CLRPEND0 |= (0x01)<<7;   
    237            */
    238          }
   \                     UART_irq_uart_2:
   \   00000000   0x4770             BX       LR               ;; return
    239          /*********************************************************************************
    240          *     Descrição   :   Vetor de interrupção da uart 3
    241          *     Parametros  :   nenhum
    242          *     Retorno     :   nenhum
    243          *********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    244          void UART_irq_uart_3(void){
   \                     UART_irq_uart_3:
   \   00000000   0xB580             PUSH     {R7,LR}
    245            unsigned char dummy,*pointer;
    246            
    247            switch(U3IIR_bit.IID){
   \   00000002   0x....             LDR.N    R0,??DataTable2_23  ;; 0x4009c008
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0840             LSRS     R0,R0,#+1
   \   00000008   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD006             BEQ.N    ??UART_irq_uart_3_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD01A             BEQ.N    ??UART_irq_uart_3_1
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD01F             BEQ.N    ??UART_irq_uart_3_2
   \   00000018   0x2806             CMP      R0,#+6
   \   0000001A   0xD023             BEQ.N    ??UART_irq_uart_3_3
   \   0000001C   0xE022             B.N      ??UART_irq_uart_3_4
    248              case THRE:
    249                         pointer = UART_funcoesVetores[3].funcaoTxd();
   \                     ??UART_irq_uart_3_0:
   \   0000001E   0x....             LDR.N    R0,??DataTable2_25
   \   00000020   0x6A80             LDR      R0,[R0, #+40]
   \   00000022   0x4780             BLX      R0
    250                         if(pointer != NULL){
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD009             BEQ.N    ??UART_irq_uart_3_5
    251                            SET_TXD_ENABLE_3;
   \   00000028   0x....             LDR.N    R1,??DataTable2_28  ;; 0x2009c018
   \   0000002A   0x6809             LDR      R1,[R1, #+0]
   \   0000002C   0xF051 0x6100      ORRS     R1,R1,#0x8000000
   \   00000030   0x....             LDR.N    R2,??DataTable2_28  ;; 0x2009c018
   \   00000032   0x6011             STR      R1,[R2, #+0]
    252                            U3THR = *pointer;
   \   00000034   0x....             LDR.N    R1,??DataTable2_22  ;; 0x4009c000
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x7008             STRB     R0,[R1, #+0]
   \   0000003A   0xE005             B.N      ??UART_irq_uart_3_6
    253                         }
    254                         else                 
    255                           CLR_TXD_ENABLE_3;
   \                     ??UART_irq_uart_3_5:
   \   0000003C   0x....             LDR.N    R0,??DataTable2_29  ;; 0x2009c01c
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000044   0x....             LDR.N    R1,??DataTable2_29  ;; 0x2009c01c
   \   00000046   0x6008             STR      R0,[R1, #+0]
    256                         break; 
   \                     ??UART_irq_uart_3_6:
   \   00000048   0xE00C             B.N      ??UART_irq_uart_3_4
    257              case RDA : dummy = U3RBR;
   \                     ??UART_irq_uart_3_1:
   \   0000004A   0x....             LDR.N    R0,??DataTable2_22  ;; 0x4009c000
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
    258                         UART_funcoesVetores[3].funcaoRxd(dummy);
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x....             LDR.N    R1,??DataTable2_25
   \   00000052   0x6A49             LDR      R1,[R1, #+36]
   \   00000054   0x4788             BLX      R1
    259                         break;      
   \   00000056   0xE005             B.N      ??UART_irq_uart_3_4
    260              case RLS : 
    261                         dummy = U3LSR;
   \                     ??UART_irq_uart_3_2:
   \   00000058   0x....             LDR.N    R0,??DataTable2_30  ;; 0x4009c014
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
    262                         dummy = U3RBR;               
   \   0000005C   0x....             LDR.N    R1,??DataTable2_22  ;; 0x4009c000
   \   0000005E   0x7809             LDRB     R1,[R1, #+0]
   \   00000060   0x0008             MOVS     R0,R1
    263                         break;      
   \   00000062   0xE7FF             B.N      ??UART_irq_uart_3_4
    264              case CTI :
    265                         break;      
    266            }  
    267            
    268            //Apaga o flag de interrupção pendente
    269            CLRPEND0 |= (0x01)<<8;               
   \                     ??UART_irq_uart_3_3:
   \                     ??UART_irq_uart_3_4:
   \   00000064   0x....             LDR.N    R0,??DataTable2_27  ;; 0xe000e280
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000006C   0x....             LDR.N    R1,??DataTable2_27  ;; 0xe000e280
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    270          }
   \   00000070   0xBD01             POP      {R0,PC}          ;; return
   \   00000072                      REQUIRE _A_FIO0SET
   \   00000072                      REQUIRE U3RBRTHR
   \   00000072                      REQUIRE _A_FIO0CLR
   \   00000072                      REQUIRE _A_U3LSR
   \   00000072                      REQUIRE _A_U3FCR
   \   00000072                      REQUIRE _A_CLRPEND0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x4002C000         DC32     0x4002c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x400FC0C4         DC32     0x400fc0c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x400FC1A8         DC32     0x400fc1a8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4000C00C         DC32     0x4000c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x005E758C         DC32     0x5e758c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x4000C004         DC32     0x4000c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x4000C000         DC32     0x4000c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x4000C008         DC32     0x4000c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0xE000E404         DC32     0xe000e404

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x4002C010         DC32     0x4002c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x4001000C         DC32     0x4001000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x40010004         DC32     0x40010004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x40010000         DC32     0x40010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x40010008         DC32     0x40010008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x400FC1AC         DC32     0x400fc1ac

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x4009800C         DC32     0x4009800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x40098004         DC32     0x40098004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x40098000         DC32     0x40098000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x40098008         DC32     0x40098008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x4009C00C         DC32     0x4009c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x4009C004         DC32     0x4009c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x4009C000         DC32     0x4009c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x4009C008         DC32     0x4009c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0xE000E408         DC32     0xe000e408

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x........         DC32     UART_funcoesVetores

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x40010014         DC32     0x40010014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0xE000E280         DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x2009C018         DC32     0x2009c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x2009C01C         DC32     0x2009c01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_30:
   \   00000000   0x4009C014         DC32     0x4009c014
    271          /*********************************************************************************
    272          *     Fim do arquivo
    273          *********************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   UART_init
       8   UART_irq_uart_1
         8   -- Indirect call
       0   UART_irq_uart_2
       8   UART_irq_uart_3
         8   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_30
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       1  U0RBRTHR
       1  U1RBRTHR
       1  U2RBRTHR
       1  U3RBRTHR
      48  UART_funcoesVetores
     566  UART_init
     124  UART_irq_uart_1
       2  UART_irq_uart_2
     114  UART_irq_uart_3
       4  _A_CLRPEND0
       4  _A_FIO0CLR
       4  _A_FIO0SET
       4  _A_IP1
       4  _A_IP2
       4  _A_PCLKSEL0
       4  _A_PCLKSEL1
       4  _A_PCONP
       4  _A_PINSEL0
       4  _A_PINSEL4
       4  _A_SETENA0
       4  _A_U0FCR
       4  _A_U0IER
       1  _A_U0LCR
       4  _A_U1FCR
       4  _A_U1IER
       1  _A_U1LCR
       1  _A_U1LSR
       4  _A_U2FCR
       4  _A_U2IER
       1  _A_U2LCR
       4  _A_U3FCR
       4  _A_U3IER
       1  _A_U3LCR
       1  _A_U3LSR

 
  48 bytes in section .bss
  86 bytes in section .noinit (abs)
 930 bytes in section .text
 
 930 bytes of CODE memory
  48 bytes of DATA memory (+ 86 bytes shared)

Errors: none
Warnings: none
